{"version":3,"sources":["node_modules/ol/util.js","node_modules/ol/AssertionError.js","node_modules/ol/asserts.js","node_modules/ol/obj.js","node_modules/ol/events.js","node_modules/ol/events/EventType.js","node_modules/ol/ObjectEventType.js","node_modules/ol/functions.js","node_modules/ol/Disposable.js","node_modules/ol/events/Event.js","node_modules/ol/events/EventTarget.js","node_modules/ol/Observable.js","node_modules/ol/Object.js","node_modules/ol/extent/Corner.js","node_modules/ol/extent/Relationship.js","node_modules/ol/extent.js","node_modules/ol/geom/flat/transform.js","node_modules/ol/math.js","node_modules/ol/geom/GeometryType.js","node_modules/ol/sphere.js","node_modules/ol/proj/Units.js","node_modules/ol/proj/Projection.js","node_modules/ol/proj/epsg3857.js","node_modules/ol/proj/epsg4326.js","node_modules/ol/proj/projections.js","node_modules/ol/proj/transforms.js","node_modules/ol/proj.js","node_modules/ol/transform.js","node_modules/ol/geom/Geometry.js","node_modules/ol/color.js","node_modules/ol/colorlike.js","node_modules/ol/dom.js","node_modules/ol/webgl.js","node_modules/ol/has.js","node_modules/ol/ImageState.js","node_modules/ol/css.js","node_modules/ol/structs/LRUCache.js","node_modules/ol/render/canvas.js","node_modules/ol/style/Image.js","node_modules/ol/style/RegularShape.js","node_modules/ol/style/Circle.js","node_modules/ol/style/Fill.js","node_modules/ol/style/Stroke.js","node_modules/ol/style/Style.js","node_modules/ol/Feature.js","node_modules/ol/CollectionEventType.js","node_modules/ol/Collection.js","node_modules/ol/MapEvent.js","node_modules/ol/MapBrowserEvent.js","node_modules/ol/MapBrowserEventType.js","node_modules/ol/MapBrowserPointerEvent.js","node_modules/ol/pointer/EventType.js","node_modules/ol/pointer/EventSource.js","node_modules/ol/pointer/MouseSource.js","node_modules/ol/pointer/MsSource.js","node_modules/ol/pointer/NativeSource.js","node_modules/ol/pointer/PointerEvent.js","node_modules/ol/array.js","node_modules/ol/pointer/TouchSource.js","node_modules/ol/pointer/PointerEventHandler.js","node_modules/ol/MapBrowserEventHandler.js","node_modules/ol/MapEventType.js","node_modules/ol/MapProperty.js","node_modules/ol/TileState.js","node_modules/ol/structs/PriorityQueue.js","node_modules/ol/TileQueue.js","node_modules/ol/tilegrid/common.js","node_modules/ol/centerconstraint.js","node_modules/ol/resolutionconstraint.js","node_modules/ol/rotationconstraint.js","node_modules/ol/ViewHint.js","node_modules/ol/ViewProperty.js","node_modules/ol/string.js","node_modules/ol/coordinate.js","node_modules/ol/easing.js","node_modules/ol/geom/GeometryLayout.js","node_modules/ol/geom/SimpleGeometry.js","node_modules/ol/geom/flat/area.js","node_modules/ol/geom/flat/closest.js","node_modules/ol/geom/flat/deflate.js","node_modules/ol/geom/flat/inflate.js","node_modules/ol/geom/flat/simplify.js","node_modules/ol/geom/LinearRing.js","node_modules/ol/geom/Point.js","node_modules/ol/geom/flat/contains.js","node_modules/ol/geom/flat/interiorpoint.js","node_modules/ol/geom/flat/segments.js","node_modules/ol/geom/flat/intersectsextent.js","node_modules/ol/geom/flat/reverse.js","node_modules/ol/geom/flat/orient.js","node_modules/ol/geom/Polygon.js","node_modules/ol/View.js","node_modules/ol/layer/Property.js","node_modules/ol/layer/Base.js","node_modules/ol/source/State.js","node_modules/ol/layer/Group.js","node_modules/ol/size.js","node_modules/ol/PluggableMap.js","node_modules/ol/control/Control.js","node_modules/ol/render/EventType.js","node_modules/ol/layer/Layer.js","node_modules/ol/control/Attribution.js","node_modules/ol/control/Rotate.js","node_modules/ol/control/Zoom.js","node_modules/ol/control/util.js","node_modules/ol/Kinetic.js","node_modules/ol/interaction/Property.js","node_modules/ol/interaction/Interaction.js","node_modules/ol/interaction/DoubleClickZoom.js","node_modules/ol/events/condition.js","node_modules/ol/interaction/Pointer.js","node_modules/ol/interaction/DragPan.js","node_modules/ol/interaction/DragRotate.js","node_modules/ol/render/Box.js","node_modules/ol/interaction/DragBox.js","node_modules/ol/interaction/DragZoom.js","node_modules/ol/events/KeyCode.js","node_modules/ol/interaction/KeyboardPan.js","node_modules/ol/interaction/KeyboardZoom.js","node_modules/ol/interaction/MouseWheelZoom.js","node_modules/ol/interaction/PinchRotate.js","node_modules/ol/interaction/PinchZoom.js","node_modules/ol/interaction/DragAndDrop.js","node_modules/ol/interaction/DragRotateAndZoom.js","node_modules/ol/geom/Circle.js","node_modules/ol/geom/flat/interpolate.js","node_modules/ol/geom/flat/length.js","node_modules/ol/geom/LineString.js","node_modules/ol/geom/MultiLineString.js","node_modules/ol/geom/MultiPoint.js","node_modules/ol/geom/flat/center.js","node_modules/ol/geom/MultiPolygon.js","node_modules/ol/LayerType.js","node_modules/ol/layer/VectorRenderType.js","node_modules/ol/layer/Vector.js","node_modules/ol/format/FormatType.js","node_modules/ol/featureloader.js","node_modules/ol/loadingstrategy.js","node_modules/ol/source/Source.js","node_modules/ol/source/VectorEventType.js","node_modules/quickselect/quickselect.js","node_modules/rbush/index.js","node_modules/ol/structs/RBush.js","node_modules/ol/source/Vector.js","node_modules/ol/interaction/Draw.js","node_modules/ol/interaction/Extent.js","node_modules/ol/interaction/Modify.js","node_modules/ol/interaction/Select.js","node_modules/ol/interaction/Snap.js","node_modules/ol/interaction/Translate.js","node_modules/ol/interaction.js","node_modules/ol/reproj/common.js","node_modules/ol/ImageBase.js","node_modules/ol/ImageCanvas.js","node_modules/ol/render/Event.js","node_modules/ol/render/VectorContext.js","node_modules/ol/render/canvas/Immediate.js","node_modules/ol/style/IconImageCache.js","node_modules/ol/renderer/Map.js","node_modules/ol/renderer/canvas/Map.js","node_modules/ol/renderer/Layer.js","node_modules/ol/renderer/canvas/Layer.js","node_modules/ol/renderer/canvas/IntermediateCanvas.js","node_modules/ol/renderer/canvas/ImageLayer.js","node_modules/ol/TileRange.js","node_modules/ol/renderer/canvas/TileLayer.js","node_modules/ol/render/ReplayGroup.js","node_modules/ol/render/ReplayType.js","node_modules/ol/geom/flat/textpath.js","node_modules/ol/render/canvas/Instruction.js","node_modules/ol/render/replay.js","node_modules/ol/render/canvas/Replay.js","node_modules/ol/render/canvas/ImageReplay.js","node_modules/ol/render/canvas/LineStringReplay.js","node_modules/ol/render/canvas/PolygonReplay.js","node_modules/ol/geom/flat/straightchunk.js","node_modules/ol/style/TextPlacement.js","node_modules/ol/render/canvas/TextReplay.js","node_modules/ol/render/canvas/ReplayGroup.js","node_modules/ol/renderer/vector.js","node_modules/ol/renderer/canvas/VectorLayer.js","node_modules/ol/layer/VectorTileRenderType.js","node_modules/ol/renderer/canvas/VectorTileLayer.js","node_modules/ol/Map.js","node_modules/ol/OverlayPositioning.js","node_modules/ol/Overlay.js","node_modules/ol/style/IconAnchorUnits.js","node_modules/ol/style/IconImage.js","node_modules/ol/style/IconOrigin.js","node_modules/ol/style/Icon.js","node_modules/ol/layer/Heatmap.js","node_modules/ol/layer/Image.js","node_modules/ol/layer/TileProperty.js","node_modules/ol/layer/Tile.js","node_modules/ol/layer/VectorTile.js","node_modules/ol/layer.js","node_modules/ol/tilecoord.js","node_modules/ol/tileurlfunction.js","node_modules/ol/net.js","node_modules/ol/Tile.js","node_modules/ol/ImageTile.js","node_modules/ol/TileCache.js","node_modules/ol/reproj.js","node_modules/ol/reproj/Triangulation.js","node_modules/ol/reproj/Tile.js","node_modules/ol/tilegrid/TileGrid.js","node_modules/ol/tilegrid.js","node_modules/ol/source/Tile.js","node_modules/ol/source/TileEventType.js","node_modules/ol/source/UrlTile.js","node_modules/ol/source/TileImage.js","node_modules/ol/source/TileJSON.js","node_modules/ol/style/Atlas.js","node_modules/ol/style/AtlasManager.js","node_modules/ol/style/Text.js","node_modules/ol/style.js","index.js"],"names":["inherits","childCtor","parentCtor","prototype","Object","create","constructor","getUid","uidCounter_","obj","ol_uid","VERSION","AssertionError","Error","code","path","message","split","call","name","__proto__","assert","assertion","errorCode","clear","getValues","isEmpty","assign","target","var_sources","arguments$1","arguments","TypeError","output","i","ii","length","source","key","hasOwnProperty","object","property","values","push","bindListener","findListener","getListeners","listen","listenOnce","unlisten","unlistenByKey","unlistenAll","listenerObj","boundListener","evt","listener","bindTo","callOnce","listeners","opt_this","opt_setDeleteIndex","deleteIndex","type","listenerMap","ol_lm","undefined","getListenerMap","removeListeners","removeEventListener","keys","opt_once","addEventListener","indexOf","splice","TRUE","FALSE","UNDEFINED","Disposable","dispose","disposed_","disposeInternal","stopPropagation","preventDefault","Event","propagationStopped","EventTarget","pendingRemovals_","dispatching_","listeners_","dispatchEvent","event","this$1","propagate","pendingRemovals","hasListener","opt_type","index","unByKey","Observable","revision_","changed","EventType","CHANGE","getRevision","on","Array","isArray","len","once","un","getChangeEventType","ObjectEvent","oldValue","BaseObject","opt_values","values_","setProperties","get","value","getKeys","getProperties","notify","eventType","ObjectEventType","PROPERTYCHANGE","set","opt_silent","unset","changeEventTypeCache","boundingExtent","buffer","clone","closestSquaredDistanceXY","containsCoordinate","containsExtent","containsXY","coordinateRelationship","createEmpty","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","createOrUpdateFromFlatCoordinates","createOrUpdateFromRings","equals","extend","extendCoordinate","extendCoordinates","extendFlatCoordinates","extendRings","extendXY","forEachCorner","getArea","getBottomLeft","getBottomRight","getCenter","getCorner","getEnlargedArea","getForViewAndSize","getHeight","getIntersectionArea","getIntersection","getMargin","getSize","getTopLeft","getTopRight","getWidth","intersects","returnOrUpdate","scaleFromCenter","intersectsSegment","applyTransform","coordinates","extent","_boundingExtentXYs","xs","ys","opt_extent","Math","min","apply","max","slice","x","y","dx","dy","coordinate","extent1","extent2","minX","minY","maxX","maxY","relationship","Relationship","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","Infinity","flatCoordinates","offset","end","stride","rings","callback","val","area","corner","Corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","center","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","intersection","deltaX","deltaY","start","startRel","endRel","startX","startY","endX","endY","slope","transformFn","transform2D","transform","opt_dest","dest","j","rotate","angle","anchor","anchorX","anchorY","k","scale","sx","sy","translate","clamp","roundUpToPowerOfTwo","squaredSegmentDistance","squaredDistance","solveLinearSystem","toDegrees","toRadians","modulo","lerp","cosh","exp","pow","ceil","log","LN2","t","mat","n","maxRow","maxEl","abs","r","absValue","tmp","coef","l","m","angleInRadians","PI","angleInDegrees","a","b","getDistance","getLength","DEFAULT_RADIUS","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","getLengthInternal","geometry","opt_options","options","projection","getType","GeometryType","GEOMETRY_COLLECTION","coords","jj","POINT","MULTI_POINT","LINE_STRING","LINEAR_RING","getCoordinates","MULTI_LINE_STRING","POLYGON","MULTI_POLYGON","geometries","getGeometries","getAreaInternal","distance","bearing","lon1","dByR","lat","asin","lon","Units","METERS_PER_UNIT","DEGREES","FEET","METERS","USFEET","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","fromEPSG4326","toEPSG4326","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","EPSG3857Projection","point","PROJECTIONS","input","opt_output","opt_dimension","dimension","halfSize","tan","atan","EPSG4326Projection","opt_axisOrientation","add","cache","remove","transforms","destination","sourceCode","destinationCode","cloneTransform","identityTransform","addProjection","addProjections","addEquivalentProjections","addEquivalentTransforms","clearAllProjections","createProjection","createTransformFromCoordinateTransform","addCoordinateTransforms","fromLonLat","toLonLat","equivalent","getTransformFromProjections","getTransform","transformExtent","transformWithProjections","addCommon","projections","forEach","projectionLike","opt_units","pointResolution","getter","vertices","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","defaultCode","coordTransform","forward","inverse","sourceProj","destProj","opt_projection","lonLat","equalUnits","sourceProjection","destinationProjection","transformFunc","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","reset","multiply","setFromArray","compose","invert","determinant","tmp_","transform1","transform2","a1","b1","d1","e1","f1","a2","b2","d2","e2","f2","c","d","e","f","dx1","dy1","dx2","dy2","det","tmpTransform","Geometry","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","closestPointXY","closestPoint","minSquaredDistance","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","opt_sy","opt_anchor","simplify","tolerance","getSimplifiedGeometry","squaredTolerance","intersectsExtent","TILE_PIXELS","inCoordinates","outCoordinates","pixelExtent","projectedExtent","asString","asArray","normalize","toString","HEX_COLOR_RE_","NAMED_COLOR_RE_","color","fromNamed","el","document","createElement","style","body","appendChild","rgb","getComputedStyle","removeChild","fromString","MAX_CACHE_SIZE","cacheSize","s","fromStringInternal_","g","exec","hasAlpha","parseInt","substr","map","Number","asColorLike","isColorLike","CanvasPattern","CanvasGradient","createCanvasContext2D","opt_width","opt_height","canvas","width","height","getContext","outerWidth","element","offsetWidth","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChildren","lastChild","ONE","SRC_ALPHA","COLOR_ATTACHMENT0","COLOR_BUFFER_BIT","TRIANGLES","TRIANGLE_STRIP","ONE_MINUS_SRC_ALPHA","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","STREAM_DRAW","STATIC_DRAW","DYNAMIC_DRAW","CULL_FACE","BLEND","STENCIL_TEST","DEPTH_TEST","SCISSOR_TEST","UNSIGNED_BYTE","UNSIGNED_SHORT","UNSIGNED_INT","FLOAT","RGBA","FRAGMENT_SHADER","VERTEX_SHADER","LINK_STATUS","LINEAR","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_2D","TEXTURE0","CLAMP_TO_EDGE","COMPILE_STATUS","FRAMEBUFFER","CONTEXT_IDS","opt_attributes","context","MAX_TEXTURE_SIZE","EXTENSIONS","DEBUG","HAS","window","gl","failIfMajorPerformanceCaveat","getParameter","getSupportedExtensions","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","CANVAS_LINE_DASH","has","setLineDash","GEOLOCATION","TOUCH","POINTER","MSPOINTER","msPointerEnabled","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","font","family","fontFamily","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","getCount","CLEAR","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","pop","replace","setSize","prune","measureTextWidth","rotateAtOffset","drawImage","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","labelCache","checkedFonts","measureContext","textHeights","checkFont","retries","interval","referenceWidth","checked","referenceFonts","text","isAvailable","getMeasureContext","available","referenceFont","measureText","check","done","fontSpec","fontFamilies","setInterval","measureTextHeight","span","heights","textContent","margin","padding","position","left","offsetX","offsetY","resetTransform","opacity","image","originX","originY","w","h","alpha","globalAlpha","setTransform","ImageStyle","opacity_","rotateWithView_","rotateWithView","rotation_","scale_","snapToPixel_","snapToPixel","getOpacity","getRotateWithView","getRotation","getScale","getSnapToPixel","getAnchor","getImage","pixelRatio","getHitDetectionImage","getImageState","getImageSize","getHitDetectionImageSize","getOrigin","setOpacity","setRotateWithView","setRotation","setScale","setSnapToPixel","listenImageChange","thisArg","load","unlistenImageChange","RegularShape","checksums_","canvas_","hitDetectionCanvas_","fill_","fill","origin_","points_","points","radius_","radius1","radius2_","radius2","angle_","stroke_","stroke","anchor_","size_","imageSize_","hitDetectionImageSize_","atlasManager_","atlasManager","render_","getFill","getPoints","getRadius","getRadius2","getAngle","getStroke","ImageState","LOADED","imageSize","strokeStyle","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","strokeWidth","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","renderOptions","draw_","createHitDetectionCanvas_","round","hasCustomHitDetectionImage","renderHitDetectionCallback","drawHitDetectionCanvas_","bind","id","getChecksum","info","hitImage","angle0","radiusC","beginPath","arc","lineTo","fillStyle","lineWidth","closePath","strokeChecksum","fillChecksum","recalculate","checksum","CircleStyle","setRadius","Fill","color_","checksum_","setColor","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","toFunction","createDefaultStyle","createEditingStyle","Style","geometry_","geometryFunction_","defaultGeometryFunction","setGeometry","image_","renderer_","renderer","text_","zIndex_","zIndex","styleFunction","styles","getGeometry","getText","getZIndex","getRenderer","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","feature","setZIndex","defaultStyles","white","blue","CIRCLE","concat","createStyleFunction","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","properties","setGeometryName","getGeometryName","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","setId","Property","CollectionEvent","opt_element","Collection","opt_array","unique_","unique","array_","assertUnique_","updateLength_","arr","array","getArray","item","LENGTH","insertAt","elem","CollectionEventType","ADD","removeAt","prev","REMOVE","setAt","opt_except","MapEvent","opt_frameState","frameState","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","pixel","getEventPixel","getCoordinateFromPixel","dragging","CLICK","DBLCLICK","MapBrowserPointerEvent","pointerEvent","EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","POINTER_ID","POINTER_TYPE","DEDUP_DIST","mousedown","inEvent","isEventSimulatedFromTouch_","pointerMap","cancel","prepareEvent","down","mousemove","move","mouseup","p","button","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","MouseSource","lastTouches","lts","clientX","clientY","cloneEvent","pd","pointerId","isPrimary","pointerType","POINTER_TYPES","msPointerDown","prepareEvent_","msPointerMove","msPointerUp","cleanup","msPointerOut","msPointerOver","msPointerCancel","msLostPointerCapture","makeEvent","msGotPointerCapture","MsSource","pointerDown","fireNativeEvent","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","NativeSource","HAS_BUTTONS","PointerEvent","opt_eventDict","eventDict","buttons","getButtons_","pressure","getPressure_","bubbles","cancelable","view","detail","screenX","screenY","ctrlKey","altKey","shiftKey","metaKey","relatedTarget","tiltX","tiltY","hwTimestamp","which","ev","MouseEvent","binarySearch","haystack","needle","opt_comparator","low","mid","cmp","comparator","numberSafeCompareFunction","high","found","includes","linearFindNearest","direction","reverseSubArray","begin","data","extension","find","arr1","arr2","len1","stableSort","compareFnc","sort","findIndex","every","idx","isSorted","opt_func","opt_strict","compare","currentVal","res","CLICK_COUNT_TIMEOUT","touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","TouchSource","mouseSource","firstTouchId_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","count","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","setTimeout","resetClickCountHandler_","touchToPointer_","webkitRadiusX","radiusX","webkitRadiusY","radiusY","webkitForce","force","inFunction","touches","pointer","findTouch_","touchList","searchId","touch","out","i$1","over","enter","outEvent","outTarget","leave","cleanUpPointer_","lt","CLONE_PROPS","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","events","eventName","eventCopy","fireEvent","PointerEventType","POINTERDOWN","POINTERMOVE","POINTERUP","POINTERENTER","POINTERLEAVE","POINTEROVER","POINTEROUT","POINTERCANCEL","contains_","container","contained","contains","inType","wrapMouseEvent","MapBrowserEventHandler","moveTolerance","map_","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","MapBrowserEventType","SINGLECLICK","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","POINTERDRAG","DROP","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","tile","handleTileChange","getTilesLoading","state","getState","TileState","ERROR","EMPTY","ABORT","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","IDLE","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","createExtent","none","createSnapToResolutions","createSnapToPower","resolutions","delta","z","floor","power","maxResolution","opt_maxLevel","oldLevel","newLevel","disable","createSnapToN","createSnapToZero","theta","opt_tolerance","padNumber","number","opt_precision","numberString","toFixed","decimal","join","compareVersions","v1","v2","s1","s2","n1","n2","closestOnCircle","closestOnSegment","createStringXY","degreesToStringHDMS","format","squaredDistanceToSegment","toStringHDMS","toStringXY","circle","segment","along","opt_fractionDigits","hemispheres","degrees","normalizedDegrees","dflPrecision","precision","deg","sec","charAt","template","coordinate1","coordinate2","cosAngle","sinAngle","coord1","coord2","easeIn","easeOut","inAndOut","linear","upAndDown","getStrideForLayout","transformGeom2D","SimpleGeometry","layout","GeometryLayout","XY","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","getStride","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","XYZ","XYZM","XYM","simpleGeometry","linearRing","twiceArea","linearRings","ends","linearRingss","endss","maxSquaredDelta","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","assignClosestPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","assignClosest","offset1","offset2","squaredDelta","maxDelta","isRing","opt_tmpPoint","tmpPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","deflateMultiCoordinatesArray","coordinatesss","opt_endss","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","opt_coordinatesss","simplifyLineString","douglasPeucker","douglasPeuckerArray","douglasPeuckerMultiArray","radialDistance","snap","quantize","quantizeArray","quantizeMultiArray","highQuality","opt_simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","simplifiedEnds","simplifiedEndss","LinearRing","maxDelta_","maxDeltaRevision_","Point","linearRingContainsExtent","linearRingContainsXY","linearRingsContainsXY","linearRingssContainsXY","wn","getInteriorPointOfArray","getInteriorPointsOfMultiArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","isNaN","interiorPoints","point1","ret","point2","intersectsLineString","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","coordinatesExtent","linearRingIsClockwise","linearRingIsOriented","linearRingsAreOriented","orientLinearRings","orientLinearRingsArray","edge","opt_right","right","isClockwise","circular","fromExtent","fromCircle","makeRegular","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","opt_n","opt_sphereRadius","opt_sides","opt_angle","sides","arrayLength","polygon","startAngle","createCenterConstraint","createResolutionConstraint","createRotationConstraint","isNoopAnimation","DEFAULT_MIN_ZOOM","View","hints_","animations_","updateAnimationKey_","updateAnimations_","projection_","applyOptions_","ViewProperty","CENTER","resolutionConstraintInfo","maxResolution_","minResolution_","minResolution","zoomFactor_","zoomFactor","resolutions_","minZoom_","minZoom","centerConstraint","resolutionConstraint","constraint","rotationConstraint","constraints_","RESOLUTION","zoom","constrainResolution","getResolution","ROTATION","options_","getUpdatedOptions_","newOptions","getZoom","animate","var_args","animationCount","isDef","setCenter","setZoom","Date","now","series","animation","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","complete","setHint","ViewHint","ANIMATING","getAnimating","getInteracting","INTERACTING","cancelAnimations","more","seriesComplete","elapsed","fraction","progress","calculateCenterZoom","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","getSizeFromViewport_","selector","querySelector","metrics","constrainCenter","opt_delta","opt_direction","constrainRotation","getConstraints","getHints","opt_hints","calculateExtent","opt_size","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","maxZoom","getMinZoom","setMinZoom","getProjection","getResolutions","getResolutionForExtent","xResolution","yResolution","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","nearest","getResolutionForZoom","fit","geometryOrExtent","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","constrainedResolution","centerRotX","centerRotY","setResolution","centerOn","centerX","centerY","hint","centerNone","defaultMaxResolution","defaultMinResolution","enableRotation","rotationNone","BaseLayer","LayerProperty","OPACITY","VISIBLE","visible","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","state_","getLayerState","sourceState","getSourceState","getVisible","getLayersArray","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setVisible","zindex","LayerGroup","baseOptions","layers","layersListenerKeys_","listenerKeys_","LAYERS","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","layer","collectionEvent","states","pos","ownLayerState","layerState","SourceState","READY","num","hasArea","ratio","toSize","PluggableMap","optionsInternal","createOptionsInternal","maxTilesLoading_","maxTilesLoading","loadTilesWhileAnimating_","loadTilesWhileAnimating","loadTilesWhileInteracting_","loadTilesWhileInteracting","pixelRatio_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","className","overflow","msTouchAction","touchAction","overlayContainer_","overlayContainerStopEvent_","overlayEvents","MOUSEDOWN","TOUCHSTART","MSPOINTERDOWN","MOUSEWHEEL","WHEEL","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyboardEventTarget","keyHandlerKeys_","CONTEXTMENU","handleBrowserEvent","controls","interactions","overlays_","overlays","overlayIdIndex_","createRenderer","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","MapProperty","LAYERGROUP","handleLayerGroupChanged_","VIEW","handleViewChanged_","SIZE","handleSizeChanged_","TARGET","handleTargetChanged_","control","setMap","interaction","addOverlayInternal_","overlay","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","getOverlays","RESIZE","setTarget","forEachFeatureAtPixel","hitTolerance","layerFilter","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","viewportPosition","getBoundingClientRect","eventPosition","top","getTarget","getTargetElement","getElementById","pixelToCoordinateTransform","getOverlayById","getPixelFromCoordinate","coordinateToPixelTransform","getView","getOverlayContainer","getOverlayContainerStopEvent","tileSourceKey","tileCenter","tileResolution","wantedTiles","focus","mapBrowserEvent","interactionsArray","getActive","handleEvent","handlePostRender","tileQueue","hints","viewHints","postRenderFunctions","render","targetElement","KEYDOWN","KEYPRESS","updateSize","removeLayerRenderers","handleViewPropertyChanged_","setAttribute","layerGroup","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","time","viewState","previousFrameState","layerStatesArray","layerStates","pixelResolution","renderFrame","MapEventType","MOVESTART","MOVEEND","POSTRENDER","setLayerGroup","setView","skipFeature","featureUid","computedStyle","parseFloat","unskipFeature","Control","target_","listenerKeys","getMap","visibleAtResolution","Layer","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","SOURCE","handleSourcePropertyChange_","setSource","getSource","handleSourceChange_","RenderEventType","PRECOMPOSE","managed","Attribution","ulElement_","collapsed_","collapsed","collapsible_","collapsible","tipLabel","collapseLabel","collapseLabel_","label","label_","activeLabel","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","getSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","updateElement_","display","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsible","setCollapsed","getCollapsed","mapEvent","Rotate","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","resetNorth_","msTransform","webkitTransform","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","newResolution","defaults","zoomOptions","rotateOptions","attribution","attributionOptions","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","initialVelocity_","update","lastIndex","firstIndex","pan","rotateWithoutConstraints","zoomByDelta","zoomWithoutConstraints","Interaction","setActive","InteractionProperty","ACTIVE","active","opt_duration","currentRotation","DoubleClickZoom","delta_","stopEvent","altKeyOnly","altShiftKeysOnly","activeElement","always","click","mouseActionButton","never","singleClick","doubleClick","noModifierKeys","platformModifierKeyOnly","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","primaryAction","centroid","handleDragEvent","handleUpEvent","handleDownEvent","handleMoveEvent","PointerInteraction","handleDownEvent_","handleDragEvent_","handleMoveEvent_","handleUpEvent_","handlingDownUpSequence","stopDown","trackedPointers_","targetPointers","updateTrackedPointers_","isPointerDraggingEvent","pointerEvents","handledUp","handled","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","condition_","condition","noKinetic_","centerpx","DragRotate","lastAngle_","RenderBox","startPixel_","endPixel_","startPixel","endPixel","setPixels","createOrUpdateGeometry","DragBoxEventType","DragBoxEvent","DragBox","box_","minArea_","minArea","onBoxEnd_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","BOXDRAG","BOXEND","BOXSTART","DragZoom","out_","mapExtent","boxPixelExtent","factor","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","KeyCode","DOWN","UP","mapUnitsDelta","KeyboardZoom","charCode","charCodeAt","MAX_DELTA","Mode","MouseWheelZoom","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","trackpadZoomBuffer_","decrementInteractingHint_","handleWheelZoom_","setMouseAnchor","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","TRACKPAD","rebound","timeLeft","PinchRotate","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","DragAndDropEventType","DragAndDropEvent","file","opt_features","DragAndDrop","formatConstructors_","formatConstructors","dropListenKeys_","source_","handleResult_","result","formatConstructor","tryReadFeatures_","addFeatures","ADD_FEATURES","registerListeners_","dropArea","handleDrop","DRAGENTER","handleStop","DRAGOVER","unregisterListeners_","readFeatures","files","dataTransfer","reader","FileReader","LOAD","readAsText","dropEffect","DragRotateAndZoom","lastMagnitude_","magnitude","angleDelta","Circle","setCenterAndRadius","getRadiusSquared_","circleExtent","interpolatePoint","lineStringCoordinateAtM","lineStringsCoordinateAtM","pointY","cumulativeLengths","o","extrapolate","lo","hi","m0","m1","interpolate","lineStringLength","linearRingLength","perimeter","LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getFlatMidpoint","MultiLineString","lineString","appendLineString","opt_interpolate","getLineString","getLineStrings","lineStrings","getFlatMidpoints","midpoints","midpoint","MultiPoint","appendPoint","multiPoint","getPoint","MultiPolygon","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","appendPolygon","newEndss","getEndss","getFlatInteriorPoints","getInteriorPoints","getPolygon","prevEnds","getPolygons","polygons","lastEnds","RenderType","VectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","renderMode_","renderMode","VectorRenderType","VECTOR","LayerType","getDeclutter","setDeclutter","getRenderBuffer","getRenderOrder","RENDER_ORDER","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","getRenderMode","loadFeaturesXhr","xhr","url","success","failure","XMLHttpRequest","open","FormatType","responseType","onload","status","JSON","TEXT","responseText","XML","responseXML","DOMParser","parseFromString","response","featureProjection","readProjection","getLastExtent","onerror","send","dataProjection","all","bbox","getZForResolution","tileRange","getTileRangeForExtentAndZ","extents","tileCoord","getTileCoordExtent","Source","attributions_","adaptAttributions_","wrapX_","wrapX","attributionLike","getWrapX","refresh","setAttributions","setState","RBush","opt_maxEntries","rbush_","items_","insert","items","uid","getAll","getInExtent","search","forEach_","forEachInExtent","rbush","VectorSourceEvent","opt_feature","VectorSource","loader_","format_","overlaps_","overlaps","url_","loader","strategy_","strategy","allStrategy","useSpatialIndex","collection","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","ADDFEATURE","handleFeatureChange_","valid","newFeatures","geometryFeatures","length$1","feature$1","featureKey$1","i$2","length$2","modifyingCollection","REMOVEFEATURE","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeatures","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","CHANGEFEATURE","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","loop","extentToLoad","removeLoadedExtent","removed","setLoader","createRegularPolygon","createBox","DrawEventType","DrawEvent","Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","features_","snapTolerance_","snapTolerance","type_","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","opt_geometry","squaredLength","Constructor","mode","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","getDefaultStyleFunction","geometryName","freehandCondition_","freehand","freehandCondition","updateState_","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","atFinish_","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","updateSketchFeatures_","startDrawing_","DRAWSTART","sketchLineGeom","ring","addToDrawing_","finishDrawing","removeLastPoint","sketchFeature","abortDrawing_","DRAWEND","sketchFeatures","overlaySource","pass","handlePointerEvent","circleMode","boxCoordinates","ExtentEventType","ExtentInteractionEvent","EXTENTCHANGED","ExtentInteraction","pointerHandler_","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","boxStyle","getDefaultExtentStyleFunction","vertexOverlay_","pointerStyle","getDefaultPointerStyleFunction","snapToVertex_","pixelCoordinate","segments","getSegments","closestSegment","vertex","vertexPixel","pixel1","pixel2","squaredDist1","squaredDist2","dist","createOrUpdatePointerFeature_","createOrUpdateExtentFeature_","extentFeature","vertexFeature","getOpposingPoint","x_","y_","getPointHandler","getEdgeHandler","fixedPoint","fixedP1","fixedP2","CIRCLE_CENTER_INDEX","CIRCLE_CIRCUMFERENCE_INDEX","ModifyEventType","ModifyEvent","mapBrowserPointerEvent","Modify","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","rBush_","changingFeature_","dragSegments_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","handleSourceAdd_","handleSourceRemove_","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","handlePointerAtPixel_","willModifyFeatures_","MODIFYSTART","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","segmentData","lines","kk","centerSegmentData","circumferenceSegmentData","featureSegments","getGeometriesArray","createOrUpdateVertexFeature_","box","nodes","pointDistanceToSegmentDataSquared","closestOnSegmentData","vertexSegments","insertVertex_","depth","setGeometryCoordinates_","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removePoint","removeVertex_","MODIFYEND","component","dragSegment","newIndex","dragSegments","segmentsByFeature","deleted","segmentDataMatch","compareIndexes","insertVertices","vertexExtent","segmentDataMatches","componentSegments","closestVertex","pointCoordinates","circleGeometry","distanceToCenterSquared","distanceToCircumference","SelectEventType","SelectEvent","selected","deselected","Select","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","hitTolerance_","featureOverlay","featureOverlay_","layerFilter_","featureLayerAssociation_","addFeatureLayerAssociation_","getHitTolerance","getLayer","setHitTolerance","currentMap","selectedFeatures","removeFeatureLayerAssociation_","SELECT","Snap","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","sortByDistance_","sortByDistance","opt_listen","register","feature_uid","segmentWriter","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","updateFeature_","opt_unlisten","unregister","snapTo","lowerLeft","upperRight","snappedToVertex","snapped","isCircle","featuresToUpdate","deltaA","TranslateEventType","TranslateEvent","Translate","lastCoordinate_","lastFeature_","handleActiveChanged_","featuresAtPixel_","oldMap","TRANSLATESTART","TRANSLATEEND","newCoordinate","geom","TRANSLATING","default","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","ERROR_THRESHOLD","ENABLE_RASTER_REPROJECTION","ImageBase","getPixelRatio","ImageCanvas","opt_loader","error_","getError","handleLoad_","err","LOADING","RenderEvent","opt_vectorContext","opt_context","opt_glContext","vectorContext","glContext","VectorContext","drawCustom","drawGeometry","drawCircle","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","CanvasImmediateRenderer","viewRotation","context_","transform_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageSnapToPixel_","imageWidth_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","drawRings_","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","textState","contextTextState","textAlign","textBaseline","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","imageAnchor","imageImage","imageOrigin","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","IconImageCache","cache_","cacheSize_","maxCacheSize_","src","crossOrigin","expire","iconImage","maxCacheSize","shared","sortByZIndex","MapRenderer","layerRenderers_","layerRendererListeners_","layerRendererConstructors_","registerLayerRenderers","constructors","getLayerRendererConstructors","calculateMatrices2D","removeLayerRendererByKey_","thisArg2","viewResolution","skippedFeatureUids","translatedCoordinate","projectionExtent","worldWidth","layerRenderer","getLayerRenderer","layerKey","candidate","handleLayerRendererChange_","getLayerRendererByKey","getLayerRenderers","removeUnusedLayerRenderers_","scheduleExpireIconCache","expireIconCache","scheduleRemoveUnusedLayerRenderers","state1","state2","layerRendererConstructors","CanvasMapRenderer","insertBefore","childNodes","dispatchComposeEvent_","composeEvent","clearRect","save","prepareFrame","composeFrame","restore","POSTCOMPOSE","numLayers","forEachLayerAtCoordinate","ctor","LayerRenderer","layer_","createLoadedTileFinder","tiles","forEachLoadedTile","handleImageChange_","renderIfReadyAndVisible","loadImage","imageState","scheduleExpireCache","tileSource","postRenderFunction","usedTiles","expireCache","updateUsedTiles","zKey","manageTilePyramid","currentZ","preload","opt_tileCallback","getTile","getTileCoordCenter","useTile","CanvasLayerRenderer","renderedResolution","clip","topLeft","topRight","bottomRight","bottomLeft","opt_transform","postCompose","preCompose","dispatchRenderEvent","RENDER","IntermediateCanvasRenderer","coordinateToCanvasPixelTransform","hitCanvasContext_","clipped","imageTransform","getImageTransform","dw","dh","imageData","getImageData","CanvasImageLayerRenderer","imageLayer","imageTransform_","skippedFeatures_","vectorRenderer_","viewCenter","imageSource","vectorRenderer","renderedExtent","skippedFeatures","imageFrameState","newSkippedFeatures","replayGroupChanged","imageExtent","imageResolution","imagePixelRatio","IMAGE","mapRenderer","TileRange","containsTileRange","CanvasTileLayerRenderer","tileLayer","opt_noContext","oversampling_","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","zDirection","isDrawableTile_","tileState","useInterimTilesOnError","getUseInterimTilesOnError","getPreload","getInterimTile","sourceRevision","getTileGridForProjection","oversampling","getTileRangeExtent","tilePixelRatio","getTilePixelRatio","tilesToDrawByZ","findLoadedTiles","animatingOrInteracting","tmpTileRange","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","tilePixelSize","getTilePixelSize","zs","currentScale","currentTilePixelSize","tileExtent","tileGutter","tilesToDraw","tileCoordKey","getGutter","getTileCoord","drawTileImage","gutter","transition","getOpaque","alphaChanged","endTransition","TILE","ReplayGroup","getReplay","replayType","drawTextOnPath","measure","startM","maxAngle","previousAngle","reverse","numChars","segmentM","chunk","chunkLength","char","charLength","charM","segmentPos","unshift","Instruction","fillInstruction","FILL","strokeInstruction","STROKE","beginPathInstruction","BEGIN_PATH","closePathInstruction","CLOSE_PATH","ORDER","ReplayType","DEFAULT","TEXT_ALIGN","CanvasReplay","maxExtent","declutterTree","maxLineWidth","alignFill_","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinateCache_","renderedTransform_","hitDetectionInstructions","replayTextBackground_","p1","p2","p3","p4","setStrokeStyle_","replayImage_","declutterGroup","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastCoord","lastRel","nextRel","nextCoord","skipped","drawCustomCoordinates_","replayEnds","replayEnd","beginGeometry","replayEndss","replayBegin","myEnds","CanvasInstruction","CUSTOM","endGeometry","BEGIN_GEOMETRY","origin","repeatSize","instruction","renderDeclutter_","groupCount","collides","declutterData","replay_","skippedFeaturesHash","featureCallback","opt_hitExtent","skipFeatures","dd","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","fn","DRAW_IMAGE","backgroundFill","backgroundStroke","DRAW_CHARS","baseline","fillKey","strokeKey","textKey","pathLength","textLength","textStates","parts","cc","chars","part","END_GEOMETRY","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","replay","replayHitDetection","opt_featureCallback","reverseHitDetectionInstructions","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","finish","CanvasImageReplay","declutterGroup_","hitDetectionImage_","anchorX_","anchorY_","height_","originX_","originY_","drawCoordinates_","myBegin","hitDetectionImage","CanvasLineStringReplay","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","CanvasPolygonReplay","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","chunkStart","m12","m23","x12","y12","x23","y23","chunkEnd","chunkM","acos","measureTextWidths","CanvasTextReplay","labels_","fillStates","strokeStates","textKey_","fillKey_","strokeKey_","widths_","geometryType","placement","TextPlacement","LINE","flatEnd","flatOffset","oo","range","drawChars_","drawTextImage_","align","numLines","widths","lineHeight","renderWidth","leftRight","getOverflow","getMaxAngle","getPlacement","getBackgroundFill","getBackgroundStroke","getPadding","currentWidth","getCircleArray","replayDeclutter","BATCH_CONSTRUCTORS","CanvasReplayGroup","opt_renderBuffer","declutterTree_","tolerance_","maxExtent_","resolution_","replaysByZIndex_","hitDetectionContext_","hitDetectionTransform_","addDeclutter","group","flatClipCoords","getClipCoords","hasReplays","replays","candidates","replayKey","declutterReplays","hitExtent","contextSize","mask","declutteredFeatures","zIndexKey","getReplays","opt_replayTypes","opt_declutterReplays","replayTypes","circleArrayCache","fillCircleArrayRowToMiddle","arraySize","error","zz","replayData","defaultOrder","getSquaredTolerance","getTolerance","renderFeature","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","feature1","feature2","replayGroup","circleReplay","textReplay","loading","renderFeatureInternal","renderGeometry","lineStringReplay","polygonReplay","imageReplay","CanvasVectorLayerRenderer","vectorLayer","dirty_","renderedRevision_","renderedResolution_","renderedRenderOrder_","replayGroup_","handleFontsChanged_","vectorSource","clipExtent","replayContext","drawOffsetX","drawOffsetY","transparentLayer","hasRenderListeners","drawWidth","drawHeight","drawSize","world","mainContextAlpha","handleStyleImageChange_","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","dirty","IMAGE_REPLAYS","VECTOR_REPLAYS","CanvasVectorTileLayerRenderer","renderedLayerRevision_","tmpTransform_","VectorTileRenderType","createReplayGroup_","renderTileImage_","layerRevision","revision","replayState","getReplayState","renderedRenderOrder","sourceTileGrid","getTileGrid","zIndexKeys","tt","sourceTile","tileKeys","sourceTileCoord","sourceTileExtent","sharedExtent","bufferedExtent","tileProjection","reproject","setProjection","setReplayGroup","getReplayGroup","getReplayTransform_","renderResolution","clips","worldOffset","currentClip","renderedTileRevision","wrappedTileCoord","pixelScale","VECTOR_TILE","Map","Overlay","insertFirst","autoPan","autoPanAnimation","autoPanMargin","rendered","mapPostrenderListenerKey","ELEMENT","handleElementChanged","MAP","handleMapChanged","OFFSET","handleOffsetChanged","POSITION","handlePositionChanged","POSITIONING","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","OverlayPositioning","setPosition","getElement","getOffset","getPosition","getPositioning","updatePixelPosition","panIntoView","mapRect","getRect","overlayRect","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","CENTER_RIGHT","left_","right_","BOTTOM_CENTER","CENTER_CENTER","TOP_CENTER","top_","bottom","bottom_","CENTER_LEFT","getOptions","IconImage","Image","imageListenerKeys_","imageState_","src_","tainting_","determineTainting_","dispatchChangeEvent_","handleImageError_","unlistenImage_","handleImageLoad_","replaceColor_","fillRect","getSrc","ctx","imgData","putImageData","iconImageCache","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","IconOrigin","anchorXUnits_","anchorXUnits","IconAnchorUnits","FRACTION","anchorYUnits_","anchorYUnits","crossOrigin_","img","imgSize","iconImage_","offset_","offsetOrigin_","offsetOrigin","setAnchor","iconImageSize","DEFAULT_GRADIENT","Heatmap","gradient","blur","shadow","weight","gradient_","shadow_","circleImage_","styleCache_","GRADIENT","handleGradientChanged_","setGradient","setBlur","BLUR","handleStyleChanged_","weightFunction","handleRender_","createCircle_","getBlur","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","toDataURL","getGradient","createGradient","view8","colors","createLinearGradient","step","addColorStop","ImageLayer","TileLayer","setPreload","setUseInterimTilesOnError","TileProperty","PRELOAD","USE_INTERIM_TILES_ON_ERROR","VectorTileLayer","HYBRID","opt_tileCoord","getKeyZXY","fromKey","hash","quadKey","digits","String","fromCharCode","withinExtentAndZ","getFullTileRange","createFromTemplate","createFromTemplates","createFromTileUrlFunctions","nullTileUrlFunction","expandUrl","zRegEx","xRegEx","yRegEx","dashYRegEx","templates","tileUrlFunctions","urls","match","startCharCode","stopCharCode","stop","jsonp","opt_errback","opt_callbackParam","script","async","timer","getElementsByTagName","Tile","interimTile","transition_","transitionStarts_","refreshInterimChain","ImageTile","tileLoadFunction","tileLoadFunction_","getBlankImage","naturalWidth","naturalHeight","TileCache","pruneExceptNewestZ","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","isFinite","enlargeClipPoint","centroidX","centroidY","dX","dY","targetExtent","triangulation","sources","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","u2","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","p0","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","targetCoverageX","centerSrc","centerSrcEstimX","centerSrcErrorSquared","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","ReprojTile","targetTileGrid","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","getTileSize","leftToLoad","sourceListenKey","tmpTileCoord","TileGrid","origins","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordForCoordAndZ","getTileCoordResolution","fullTileRanges","getForProjection","createForExtent","createXYZ","createForProjection","extentFromProjection","worldsAway","opt_maxZoom","opt_tileSize","opt_corner","resolutionsFromExtent","half","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","thisProj","getTileCoordForTileUrlFunction","TileSourceEvent","UrlTile","tileUrlFunction","fixedTileUrlFunction","setUrls","setUrl","setTileUrlFunction","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","TileEventType","TILELOADSTART","TILELOADERROR","TILELOADEND","setTileLoadFunction","opt_key","TileImage","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutterInternal","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","TileJSON","tileJSON_","handleTileJSONResponse","handleTileJSONError","client","onXHRLoad_","onXHRError_","tileJSON","parse","getTileJSON","epsg4326Projection","bounds","minzoom","maxzoom","attributionExtent","Atlas","space","space_","emptyBlocks_","renderCallback","block","split_","deltaWidth","newBlock1","newBlock2","updateBlocks_","args","INITIAL_ATLAS_SIZE","MAX_ATLAS_SIZE","AtlasManager","currentSize_","initialSize","maxSize_","maxSize","WEBGL_MAX_TEXTURE_SIZE","atlases_","currentHitSize_","hitAtlases_","getInfo","getInfo_","hitInfo","mergeInfos_","atlases","atlas","opt_renderHitCallback","add_","renderHitCallback","isHitAtlas","DEFAULT_FILL_COLOR","Text","font_","textAlign_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","padding_","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","wroclawCoords","iconFeature","iconStyle","rasterLayer","ol","OSM","popup","popover","hit","cursor"],"mappings":"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","file":"beermap.f6ef2a8b.map","sourceRoot":"..","sourcesContent":["/**\n * @module ol/util\n */\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n *\n *     function ParentClass(a, b) { }\n *     ParentClass.prototype.foo = function(a) { }\n *\n *     function ChildClass(a, b, c) {\n *       // Call parent constructor\n *       ParentClass.call(this, a, b);\n *     }\n *     inherits(ChildClass, ParentClass);\n *\n *     var child = new ChildClass('a', 'b', 'see');\n *     child.foo(); // This works.\n *\n * @param {!Function} childCtor Child constructor.\n * @param {!Function} parentCtor Parent constructor.\n * @function module:ol.inherits\n * @deprecated\n * @api\n */\nexport function inherits(childCtor, parentCtor) {\n  childCtor.prototype = Object.create(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {number} The unique ID for the object.\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = ++uidCounter_);\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '5.1.3';\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = (function (Error) {\n  function AssertionError(code) {\n    var path = VERSION.split('-')[0];\n    var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n    '/doc/errors/#' + code + ' for details.';\n\n    Error.call(this, message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n\n  if ( Error ) AssertionError.__proto__ = Error;\n  AssertionError.prototype = Object.create( Error && Error.prototype );\n  AssertionError.prototype.constructor = AssertionError;\n\n  return AssertionError;\n}(Error));\n\nexport default AssertionError;\n\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  var arguments$1 = arguments;\n\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  for (var i = 1, ii = arguments.length; i < ii; ++i) {\n    var source = arguments$1[i];\n    if (source !== undefined && source !== null) {\n      for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (var property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport function getValues(object) {\n  var values = [];\n  for (var property in object) {\n    values.push(object[property]);\n  }\n  return values;\n}\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  var property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {module:ol/events~ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {module:ol/events~ListenerFunction} listener\n * @property {EventTarget|module:ol/events/EventTarget} target\n * @property {string} type\n * @api\n */\n\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function(module:ol/events/Event)|function(module:ol/events/Event): boolean} ListenerFunction\n * @api\n */\n\n\n/**\n * @param {module:ol/events~EventsKey} listenerObj Listener object.\n * @return {module:ol/events~ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n  var boundListener = function(evt) {\n    var listener = listenerObj.listener;\n    var bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n}\n\n\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!module:ol/events~EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {module:ol/events~EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n  var listenerObj;\n  for (var i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array.<module:ol/events~EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n  var listenerMap = target.ol_lm;\n  return listenerMap ? listenerMap[type] : undefined;\n}\n\n\n/**\n * Get the lookup of listeners.  If one does not exist on the target, it is\n * created.\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n * @return {!Object.<string, Array.<module:ol/events~EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target) {\n  var listenerMap = target.ol_lm;\n  if (!listenerMap) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n}\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n      target.removeEventListener(type, listeners[i].boundListener);\n      clear(listeners[i]);\n    }\n    listeners.length = 0;\n    var listenerMap = target.ol_lm;\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        delete target.ol_lm;\n      }\n    }\n  }\n}\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {module:ol/events~EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  var listenerMap = getListenerMap(target);\n  var listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  var listenerObj = findListener(listeners, listener, opt_this, false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {module:ol/events~EventsKey} */ ({\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    });\n    target.addEventListener(type, bindListener(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {module:ol/events~EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    var listenerObj = findListener(listeners, listener, opt_this, true);\n    if (listenerObj) {\n      unlistenByKey(listenerObj);\n    }\n  }\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {module:ol/events~EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.boundListener);\n    var listeners = getListeners(key.target, key.type);\n    if (listeners) {\n      var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        removeListeners(key.target, key.type);\n      }\n    }\n    clear(key);\n  }\n}\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n  var listenerMap = getListenerMap(target);\n  for (var type in listenerMap) {\n    removeListeners(target, type);\n  }\n}\n\n//# sourceMappingURL=events.js.map","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~Event#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object~ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};\n\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/functions\n */\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {undefined} Nothing.\n */\nexport function UNDEFINED() {}\n\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/Disposable\n */\nimport {UNDEFINED} from './functions.js';\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = function Disposable () {};\n\nDisposable.prototype.dispose = function dispose () {\n  if (!this.disposed_) {\n    this.disposed_ = true;\n    this.disposeInternal();\n  }\n};\n\n/**\n * The object has already been disposed.\n * @type {boolean}\n * @private\n */\nDisposable.prototype.disposed_ = false;\n\n/**\n * Extension point for disposable objects.\n * @protected\n */\nDisposable.prototype.disposeInternal = UNDEFINED;\nexport default Disposable;\n\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/EventTarget~EventTarget}.\n */\nvar Event = function Event(type) {\n\n  /**\n   * @type {boolean}\n   */\n  this.propagationStopped;\n\n  /**\n   * The event type.\n   * @type {string}\n   * @api\n   */\n  this.type = type;\n\n  /**\n   * The event target.\n   * @type {Object}\n   * @api\n   */\n  this.target = null;\n};\n\n/**\n * Stop event propagation.\n * @function\n * @api\n */\nEvent.prototype.preventDefault = function preventDefault () {\n  this.propagationStopped = true;\n};\n\n/**\n * Stop event propagation.\n * @function\n * @api\n */\nEvent.prototype.stopPropagation = function stopPropagation () {\n  this.propagationStopped = true;\n};\n\n\n/**\n * @param {Event|module:ol/events/Event} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n\n/**\n * @param {Event|module:ol/events/Event} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default Event;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/events/EventTarget\n */\nimport Disposable from '../Disposable.js';\nimport {unlistenAll} from '../events.js';\nimport {UNDEFINED} from '../functions.js';\nimport Event from '../events/Event.js';\n\n\n/**\n * @typedef {EventTarget|module:ol/events/EventTarget} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar EventTarget = (function (Disposable) {\n  function EventTarget() {\n\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {!Object.<string, number>}\n     */\n    this.pendingRemovals_ = {};\n\n    /**\n     * @private\n     * @type {!Object.<string, number>}\n     */\n    this.dispatching_ = {};\n\n    /**\n     * @private\n     * @type {!Object.<string, Array.<module:ol/events~ListenerFunction>>}\n     */\n    this.listeners_ = {};\n\n  }\n\n  if ( Disposable ) EventTarget.__proto__ = Disposable;\n  EventTarget.prototype = Object.create( Disposable && Disposable.prototype );\n  EventTarget.prototype.constructor = EventTarget;\n\n  /**\n   * @param {string} type Type.\n   * @param {module:ol/events~ListenerFunction} listener Listener.\n   */\n  EventTarget.prototype.addEventListener = function addEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (!listeners) {\n      listeners = this.listeners_[type] = [];\n    }\n    if (listeners.indexOf(listener) === -1) {\n      listeners.push(listener);\n    }\n  };\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {{type: string,\n   *     target: (EventTarget|module:ol/events/EventTarget|undefined)}|\n   *     module:ol/events/Event|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @function\n   * @api\n   */\n  EventTarget.prototype.dispatchEvent = function dispatchEvent (event) {\n    var this$1 = this;\n\n    var evt = typeof event === 'string' ? new Event(event) : event;\n    var type = evt.type;\n    evt.target = this;\n    var listeners = this.listeners_[type];\n    var propagate;\n    if (listeners) {\n      if (!(type in this.dispatching_)) {\n        this.dispatching_[type] = 0;\n        this.pendingRemovals_[type] = 0;\n      }\n      ++this.dispatching_[type];\n      for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        if (listeners[i].call(this$1, evt) === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --this.dispatching_[type];\n      if (this.dispatching_[type] === 0) {\n        var pendingRemovals = this.pendingRemovals_[type];\n        delete this.pendingRemovals_[type];\n        while (pendingRemovals--) {\n          this$1.removeEventListener(type, UNDEFINED);\n        }\n        delete this.dispatching_[type];\n      }\n      return propagate;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  EventTarget.prototype.disposeInternal = function disposeInternal () {\n    unlistenAll(this);\n  };\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array.<module:ol/events~ListenerFunction>} Listeners.\n   */\n  EventTarget.prototype.getListeners = function getListeners (type) {\n    return this.listeners_[type];\n  };\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this EventTarget has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  EventTarget.prototype.hasListener = function hasListener (opt_type) {\n    return opt_type ?\n      opt_type in this.listeners_ :\n      Object.keys(this.listeners_).length > 0;\n  };\n\n  /**\n   * @param {string} type Type.\n   * @param {module:ol/events~ListenerFunction} listener Listener.\n   */\n  EventTarget.prototype.removeEventListener = function removeEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (listeners) {\n      var index = listeners.indexOf(listener);\n      if (type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = UNDEFINED;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  };\n\n  return EventTarget;\n}(Disposable));\n\n\nexport default EventTarget;\n\n//# sourceMappingURL=EventTarget.js.map","/**\n * @module ol/Observable\n */\nimport {listen, unlistenByKey, unlisten, listenOnce} from './events.js';\nimport EventTarget from './events/EventTarget.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires module:ol/events/Event~Event\n * @api\n */\nvar Observable = (function (EventTarget) {\n  function Observable() {\n\n    EventTarget.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n\n  }\n\n  if ( EventTarget ) Observable.__proto__ = EventTarget;\n  Observable.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Observable.prototype.constructor = Observable;\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  Observable.prototype.changed = function changed () {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  Observable.prototype.getRevision = function getRevision () {\n    return this.revision_;\n  };\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array.<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {module:ol/events~EventsKey|Array.<module:ol/events~EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.on = function on (type, listener) {\n    var this$1 = this;\n\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listen(this$1, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array.<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {module:ol/events~EventsKey|Array.<module:ol/events~EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.once = function once (type, listener) {\n    var this$1 = this;\n\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listenOnce(this$1, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listenOnce(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array.<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  Observable.prototype.un = function un (type, listener) {\n    var this$1 = this;\n\n    if (Array.isArray(type)) {\n      for (var i = 0, ii = type.length; i < ii; ++i) {\n        unlisten(this$1, type[i], listener);\n      }\n      return;\n    } else {\n      unlisten(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  return Observable;\n}(EventTarget));\n\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {module:ol/events~EventsKey|Array.<module:ol/events~EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (var i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {module:ol/events~EventsKey} */ (key));\n  }\n}\n\n\nexport default Observable;\n\n//# sourceMappingURL=Observable.js.map","/**\n * @module ol/Object\n */\nimport {getUid} from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {assign} from './obj.js';\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n  */\nvar ObjectEvent = (function (Event) {\n  function ObjectEvent(type, key, oldValue) {\n    Event.call(this, type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n\n  }\n\n  if ( Event ) ObjectEvent.__proto__ = Event;\n  ObjectEvent.prototype = Object.create( Event && Event.prototype );\n  ObjectEvent.prototype.constructor = ObjectEvent;\n\n  return ObjectEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires module:ol/Object~ObjectEvent\n * @api\n */\nvar BaseObject = (function (Observable) {\n  function BaseObject(opt_values) {\n    Observable.call(this);\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {!Object.<string, *>}\n     */\n    this.values_ = {};\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  if ( Observable ) BaseObject.__proto__ = Observable;\n  BaseObject.prototype = Object.create( Observable && Observable.prototype );\n  BaseObject.prototype.constructor = BaseObject;\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  BaseObject.prototype.get = function get (key) {\n    var value;\n    if (this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  };\n\n  /**\n   * Get a list of object property names.\n   * @return {Array.<string>} List of property names.\n   * @api\n   */\n  BaseObject.prototype.getKeys = function getKeys () {\n    return Object.keys(this.values_);\n  };\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object.<string, *>} Object.\n   * @api\n   */\n  BaseObject.prototype.getProperties = function getProperties () {\n    return assign({}, this.values_);\n  };\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  BaseObject.prototype.notify = function notify (key, oldValue) {\n    var eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  };\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.set = function set (key, value, opt_silent) {\n    if (opt_silent) {\n      this.values_[key] = value;\n    } else {\n      var oldValue = this.values_[key];\n      this.values_[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object.<string, *>} values Values.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.setProperties = function setProperties (values, opt_silent) {\n    var this$1 = this;\n\n    for (var key in values) {\n      this$1.set(key, values[key], opt_silent);\n    }\n  };\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean=} opt_silent Unset without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.unset = function unset (key, opt_silent) {\n    if (key in this.values_) {\n      var oldValue = this.values_[key];\n      delete this.values_[key];\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  return BaseObject;\n}(Observable));\n\n\n/**\n * @type {Object.<string, string>}\n */\nvar changeEventTypeCache = {};\n\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key) ?\n    changeEventTypeCache[key] :\n    (changeEventTypeCache[key] = 'change:' + key);\n}\n\n\nexport default BaseObject;\n\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array.<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @return {module:ol/extent~Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  var extent = createEmpty();\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array.<number>} xs Xs.\n * @param {Array.<number>} ys Ys.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @private\n * @return {module:ol/extent~Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  var minX = Math.min.apply(null, xs);\n  var minY = Math.min.apply(null, ys);\n  var maxX = Math.max.apply(null, xs);\n  var maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {module:ol/extent~Extent} extent Extent to clone.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  var dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @return {module:ol/extent/Relationship} The relationship (bitwise compare with\n *     module:ol/extent/Relationship~Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var x = coordinate[0];\n  var y = coordinate[1];\n  var relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {module:ol/extent~Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} rings Rings.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {module:ol/extent~Extent} extent1 The extent to be modified.\n * @param {module:ol/extent~Extent} extent2 The extent that will be included in the first.\n * @return {module:ol/extent~Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} rings Rings.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (var i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(this:T, module:ol/coordinate~Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\nexport function forEachCorner(extent, callback, opt_this) {\n  var val;\n  val = callback.call(opt_this, getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  var area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/extent/Corner} corner Corner.\n * @return {module:ol/coordinate~Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  var coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return (\n    /** @type {!module:ol/coordinate~Coordinate} */ (coordinate)\n  );\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  var minX = Math.min(extent1[0], extent2[0]);\n  var minY = Math.min(extent1[1], extent2[1]);\n  var maxX = Math.max(extent1[2], extent2[2]);\n  var maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {module:ol/size~Size} size Size.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  var dx = resolution * size[0] / 2;\n  var dy = resolution * size[1] / 2;\n  var cosRotation = Math.cos(rotation);\n  var sinRotation = Math.sin(rotation);\n  var xCos = dx * cosRotation;\n  var xSin = dx * sinRotation;\n  var yCos = dy * cosRotation;\n  var ySin = dy * sinRotation;\n  var x = center[0];\n  var y = center[1];\n  var x0 = x - xCos + ySin;\n  var x1 = x - xCos - ySin;\n  var x2 = x + xCos - ySin;\n  var x3 = x + xCos + ySin;\n  var y0 = y - xSin - yCos;\n  var y1 = y - xSin + yCos;\n  var y2 = y + xSin + yCos;\n  var y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  var intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @param {module:ol/extent~Extent=} opt_extent Optional extent to populate with intersection.\n * @return {module:ol/extent~Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  var intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @return {module:ol/size~Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @param {module:ol/coordinate~Coordinate} start Segment start coordinate.\n * @param {module:ol/coordinate~Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  var intersects = false;\n  var startRel = coordinateRelationship(extent, start);\n  var endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var startX = start[0];\n    var startY = start[1];\n    var endX = end[0];\n    var endY = end[1];\n    var slope = (endY - startY) / (endX - startX);\n    var x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/proj~TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n  var coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/geom/flat/transform\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var x = flatCoordinates[j];\n    var y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array.<number>} anchor Rotation anchor point.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * Scale the coordinates.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array.<number>} anchor Scale anchor point.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/math\n */\nimport {assert} from './asserts.js';\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  var cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      var y = Math.exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n  assert(0 < x, 29); // `x` must be greater than `0`\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array.<Array.<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array.<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  var n = mat.length;\n\n  for (var i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    var maxRow = i;\n    var maxEl = Math.abs(mat[i][i]);\n    for (var r = i + 1; r < n; r++) {\n      var absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    var tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (var j = i + 1; j < n; j++) {\n      var coef = -mat[j][i] / mat[i][i];\n      for (var k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  var x = new Array(n);\n  for (var l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (var m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  var r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n//# sourceMappingURL=math.js.map","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n\n//# sourceMappingURL=GeometryType.js.map","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\n/**\n * @module ol/sphere\n */\nimport {toRadians, toDegrees} from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lat2 = toRadians(c2[1]);\n  var deltaLatBy2 = (lat2 - lat1) / 2;\n  var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  var length = 0;\n  for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {module:ol/geom/Geometry} geometry A geometry.\n * @param {module:ol/sphere~SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var length = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  var area = 0;\n  var len = coordinates.length;\n  var x1 = coordinates[len - 1][0];\n  var y1 = coordinates[len - 1][1];\n  for (var i = 0; i < len; i++) {\n    var x2 = coordinates[i][0];\n    var y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) *\n        (2 + Math.sin(toRadians(y1)) +\n        Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n}\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {module:ol/geom/Geometry} geometry A geometry.\n * @param {module:ol/sphere~SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var area = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {module:ol/geom/Polygon} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {module:ol/coordinate~Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {module:ol/coordinate~Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lon1 = toRadians(c1[0]);\n  var dByR = distance / radius;\n  var lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  var lon = lon1 + Math.atan2(\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}\n\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object.<module:ol/proj/Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from '../proj/Units.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {module:ol/proj/Units|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {module:ol/extent~Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {module:ol/extent~Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, module:ol/coordinate~Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{module:ol/coordinate~Coordinate}` as arguments, and returns\n * the `{number}` resolution at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = function Projection(options) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this.code_ = options.code;\n\n  /**\n   * Units of projected coordinates. When set to `TILE_PIXELS`, a\n   * `this.extent_` and `this.worldExtent_` must be configured properly for each\n   * tile.\n   * @private\n   * @type {module:ol/proj/Units}\n   */\n  this.units_ = /** @type {module:ol/proj/Units} */ (options.units);\n\n  /**\n   * Validity extent of the projection in projected coordinates. For projections\n   * with `TILE_PIXELS` units, this is the extent of the tile in\n   * tile pixel space.\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = options.extent !== undefined ? options.extent : null;\n\n  /**\n   * Extent of the world in EPSG:4326. For projections with\n   * `TILE_PIXELS` units, this is the extent of the tile in\n   * projected coordinate space.\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.worldExtent_ = options.worldExtent !== undefined ?\n    options.worldExtent : null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.axisOrientation_ = options.axisOrientation !== undefined ?\n    options.axisOrientation : 'enu';\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.global_ = options.global !== undefined ? options.global : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.canWrapX_ = !!(this.global_ && this.extent_);\n\n  /**\n   * @private\n   * @type {function(number, module:ol/coordinate~Coordinate):number|undefined}\n   */\n  this.getPointResolutionFunc_ = options.getPointResolution;\n\n  /**\n   * @private\n   * @type {module:ol/tilegrid/TileGrid}\n   */\n  this.defaultTileGrid_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.metersPerUnit_ = options.metersPerUnit;\n};\n\n/**\n * @return {boolean} The projection is suitable for wrapping the x-axis\n */\nProjection.prototype.canWrapX = function canWrapX () {\n  return this.canWrapX_;\n};\n\n/**\n * Get the code for this projection, e.g. 'EPSG:4326'.\n * @return {string} Code.\n * @api\n */\nProjection.prototype.getCode = function getCode () {\n  return this.code_;\n};\n\n/**\n * Get the validity extent for this projection.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nProjection.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the units of this projection.\n * @return {module:ol/proj/Units} Units.\n * @api\n */\nProjection.prototype.getUnits = function getUnits () {\n  return this.units_;\n};\n\n/**\n * Get the amount of meters per unit of this projection.If the projection is\n * not configured with `metersPerUnit` or a units identifier, the return is\n * `undefined`.\n * @return {number|undefined} Meters.\n * @api\n */\nProjection.prototype.getMetersPerUnit = function getMetersPerUnit () {\n  return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n};\n\n/**\n * Get the world extent for this projection.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nProjection.prototype.getWorldExtent = function getWorldExtent () {\n  return this.worldExtent_;\n};\n\n/**\n * Get the axis orientation of this projection.\n * Example values are:\n * enu - the default easting, northing, elevation.\n * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n *   or south orientated transverse mercator.\n * wnu - westing, northing, up - some planetary coordinate systems have\n *   \"west positive\" coordinate systems\n * @return {string} Axis orientation.\n * @api\n */\nProjection.prototype.getAxisOrientation = function getAxisOrientation () {\n  return this.axisOrientation_;\n};\n\n/**\n * Is this projection a global projection which spans the whole world?\n * @return {boolean} Whether the projection is global.\n * @api\n */\nProjection.prototype.isGlobal = function isGlobal () {\n  return this.global_;\n};\n\n/**\n * Set if the projection is a global projection which spans the whole world\n * @param {boolean} global Whether the projection is global.\n * @api\n */\nProjection.prototype.setGlobal = function setGlobal (global) {\n  this.global_ = global;\n  this.canWrapX_ = !!(global && this.extent_);\n};\n\n/**\n * @return {module:ol/tilegrid/TileGrid} The default tile grid.\n */\nProjection.prototype.getDefaultTileGrid = function getDefaultTileGrid () {\n  return this.defaultTileGrid_;\n};\n\n/**\n * @param {module:ol/tilegrid/TileGrid} tileGrid The default tile grid.\n */\nProjection.prototype.setDefaultTileGrid = function setDefaultTileGrid (tileGrid) {\n  this.defaultTileGrid_ = tileGrid;\n};\n\n/**\n * Set the validity extent for this projection.\n * @param {module:ol/extent~Extent} extent Extent.\n * @api\n */\nProjection.prototype.setExtent = function setExtent (extent) {\n  this.extent_ = extent;\n  this.canWrapX_ = !!(this.global_ && extent);\n};\n\n/**\n * Set the world extent for this projection.\n * @param {module:ol/extent~Extent} worldExtent World extent\n *   [minlon, minlat, maxlon, maxlat].\n * @api\n */\nProjection.prototype.setWorldExtent = function setWorldExtent (worldExtent) {\n  this.worldExtent_ = worldExtent;\n};\n\n/**\n * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n * for this projection.\n * @param {function(number, module:ol/coordinate~Coordinate):number} func Function\n * @api\n */\nProjection.prototype.setGetPointResolution = function setGetPointResolution (func) {\n  this.getPointResolutionFunc_ = func;\n};\n\n/**\n * Get the custom point resolution function for this projection (if set).\n * @return {function(number, module:ol/coordinate~Coordinate):number|undefined} The custom point\n * resolution function (if set).\n */\nProjection.prototype.getPointResolutionFunc = function getPointResolutionFunc () {\n  return this.getPointResolutionFunc_;\n};\n\nexport default Projection;\n\n//# sourceMappingURL=Projection.js.map","/**\n * @module ol/proj/epsg3857\n */\nimport {cosh} from '../math.js';\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n\n\n/**\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport var EXTENT = [\n  -HALF_SIZE, -HALF_SIZE,\n  HALF_SIZE, HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = (function (Projection) {\n  function EPSG3857Projection(code) {\n    Projection.call(this, {\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function(resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      }\n    });\n\n  }\n\n  if ( Projection ) EPSG3857Projection.__proto__ = Projection;\n  EPSG3857Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG3857Projection.prototype.constructor = EPSG3857Projection;\n\n  return EPSG3857Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array.<module:ol/proj/Projection>}\n */\nexport var PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array.<number>} input Input array of coordinate values.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array.<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  var halfSize = HALF_SIZE;\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    var y = RADIUS *\n        Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array.<number>} input Input array of coordinate values.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array.<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n  }\n  return output;\n}\n\n//# sourceMappingURL=epsg3857.js.map","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = (function (Projection) {\n  function EPSG4326Projection(code, opt_axisOrientation) {\n    Projection.call(this, {\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT\n    });\n\n  }\n\n  if ( Projection ) EPSG4326Projection.__proto__ = Projection;\n  EPSG4326Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG4326Projection.prototype.constructor = EPSG4326Projection;\n\n  return EPSG4326Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array.<module:ol/proj/Projection>}\n */\nexport var PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n\n\n/**\n * @type {Object.<string, module:ol/proj/Projection>}\n */\nvar cache = {};\n\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {module:ol/proj/Projection} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {module:ol/proj/Projection} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n\n/**\n * @private\n * @type {!Object.<string, Object.<string, module:ol/proj~TransformFunction>>}\n */\nvar transforms = {};\n\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {module:ol/proj/Projection} source Source.\n * @param {module:ol/proj/Projection} destination Destination.\n * @param {module:ol/proj~TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {module:ol/proj/Projection} source Source projection.\n * @param {module:ol/proj/Projection} destination Destination projection.\n * @return {module:ol/proj~TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  var transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {module:ol/proj~TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  var transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {getDistance} from './sphere.js';\nimport {applyTransform} from './extent.js';\nimport {modulo} from './math.js';\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\n\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {module:ol/proj/Projection|string|undefined} ProjectionLike\n * @api\n */\n\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array.<number>, Array.<number>=, number=): Array.<number>} TransformFunction\n * @api\n */\n\n\nexport {METERS_PER_UNIT};\n\n\n/**\n * @param {Array.<number>} input Input coordinate array.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array.<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  var output;\n  if (opt_output !== undefined) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n\n/**\n * @param {Array.<number>} input Input coordinate array.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array.<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {module:ol/proj/Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  projections.add(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n\n/**\n * @param {Array.<module:ol/proj/Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {module:ol/proj~ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {module:ol/proj/Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  var projection = null;\n  if (projectionLike instanceof Projection) {\n    projection = projectionLike;\n  } else if (typeof projectionLike === 'string') {\n    var code = projectionLike;\n    projection = projections.get(code);\n  }\n  return projection;\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {module:ol/proj~ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {module:ol/coordinate~Coordinate} point Point to find adjusted resolution at.\n * @param {module:ol/proj/Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  var pointResolution;\n  var getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n  } else {\n    var units = projection.getUnits();\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      var toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\n      var vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      var metersPerUnit = opt_units ?\n        METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array.<module:ol/proj/Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array.<module:ol/proj/Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array.<module:ol/proj/Projection>} projections2 Projections with equal\n *     meaning.\n * @param {module:ol/proj~TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {module:ol/proj~TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  projections.clear();\n  clearTransformFuncs();\n}\n\n\n/**\n * @param {module:ol/proj/Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {module:ol/proj/Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return (\n      /** @type {module:ol/proj/Projection} */ (projection)\n    );\n  }\n}\n\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} coordTransform Coordinate\n *     transform.\n * @return {module:ol/proj~TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array.<number>} input Input.\n     * @param {Array.<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array.<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      var length = input.length;\n      var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      var output = opt_output !== undefined ? opt_output : new Array(length);\n      for (var i = 0; i < length; i += dimension) {\n        var point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (var j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n}\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {module:ol/proj~ProjectionLike} source Source projection.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  var sourceProj = get(source);\n  var destProj = get(destination);\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {module:ol/proj~ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {module:ol/coordinate~Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(coordinate, 'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {module:ol/coordinate~Coordinate} coordinate Projected coordinate.\n * @param {module:ol/proj~ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {module:ol/coordinate~Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  var lonLat = transform(coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  var lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {module:ol/proj/Projection} projection1 Projection 1.\n * @param {module:ol/proj/Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  var equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    var transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {module:ol/proj/Projection} sourceProjection Source Projection object.\n * @param {module:ol/proj/Projection} destinationProjection Destination Projection\n *     object.\n * @return {module:ol/proj~TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n  var sourceCode = sourceProjection.getCode();\n  var destinationCode = destinationProjection.getCode();\n  var transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {module:ol/proj~ProjectionLike} source Source.\n * @param {module:ol/proj~ProjectionLike} destination Destination.\n * @return {module:ol/proj~TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  var sourceProjection = get(source);\n  var destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/proj~ProjectionLike} source Source projection-like.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection-like.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {module:ol/extent~Extent} extent The extent to transform.\n * @param {module:ol/proj~ProjectionLike} source Source projection-like.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection-like.\n * @return {module:ol/extent~Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc);\n}\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {module:ol/coordinate~Coordinate} point Point.\n * @param {module:ol/proj/Projection} sourceProjection Source projection.\n * @param {module:ol/proj/Projection} destinationProjection Destination projection.\n * @return {module:ol/coordinate~Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n  var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n  return transformFunc(point);\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\n\naddCommon();\n\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array.<number>} Transform\n */\n\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n\n/**\n * @private\n * @type {module:ol/transform~Transform}\n */\nvar tmp_ = new Array(6);\n\n\n/**\n * Create an identity transform.\n * @return {!module:ol/transform~Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @return {!module:ol/transform~Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!module:ol/transform~Transform} transform1 Transform parameters of matrix 1.\n * @param {!module:ol/transform~Transform} transform2 Transform parameters of matrix 2.\n * @return {!module:ol/transform~Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  var a1 = transform1[0];\n  var b1 = transform1[1];\n  var c1 = transform1[2];\n  var d1 = transform1[3];\n  var e1 = transform1[4];\n  var f1 = transform1[5];\n  var a2 = transform2[0];\n  var b2 = transform2[1];\n  var c2 = transform2[2];\n  var d2 = transform2[3];\n  var e2 = transform2[4];\n  var f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!module:ol/transform~Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!module:ol/transform~Transform} transform1 Matrix to set transform to.\n * @param {!module:ol/transform~Transform} transform2 Matrix to set transform from.\n * @return {!module:ol/transform~Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {module:ol/transform~Transform} transform The transformation.\n * @param {module:ol/coordinate~Coordinate|module:ol/pixel~Pixel} coordinate The coordinate to transform.\n * @return {module:ol/coordinate~Coordinate|module:ol/pixel~Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n\n/**\n * Applies rotation to the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!module:ol/transform~Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n\n/**\n * Applies scale to a given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!module:ol/transform~Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n\n/**\n * Applies translation to the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!module:ol/transform~Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!module:ol/transform~Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!module:ol/transform~Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  var sin = Math.sin(angle);\n  var cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n\n/**\n * Invert the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @return {!module:ol/transform~Transform} Inverse of the transform.\n */\nexport function invert(transform) {\n  var det = determinant(transform);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  var a = transform[0];\n  var b = transform[1];\n  var c = transform[2];\n  var d = transform[3];\n  var e = transform[4];\n  var f = transform[5];\n\n  transform[0] = d / det;\n  transform[1] = -b / det;\n  transform[2] = -c / det;\n  transform[3] = a / det;\n  transform[4] = (c * f - d * e) / det;\n  transform[5] = -(a * f - b * e) / det;\n\n  return transform;\n}\n\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!module:ol/transform~Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\nimport {FALSE} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport Units from '../proj/Units.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @type {module:ol/transform~Transform}\n */\nvar tmpTransform = createTransform();\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = (function (BaseObject) {\n  function Geometry() {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {Object.<string, module:ol/geom/Geometry>}\n     */\n    this.simplifiedGeometryCache = {};\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n  }\n\n  if ( BaseObject ) Geometry.__proto__ = BaseObject;\n  Geometry.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Geometry.prototype.constructor = Geometry;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!module:ol/geom/Geometry} Clone.\n   */\n  Geometry.prototype.clone = function clone () {};\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {module:ol/coordinate~Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  Geometry.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {};\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {module:ol/coordinate~Coordinate} point Point.\n   * @param {module:ol/coordinate~Coordinate=} opt_closestPoint Closest point.\n   * @return {module:ol/coordinate~Coordinate} Closest point.\n   * @api\n   */\n  Geometry.prototype.getClosestPoint = function getClosestPoint (point, opt_closestPoint) {\n    var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  };\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  Geometry.prototype.intersectsCoordinate = function intersectsCoordinate (coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  };\n\n  /**\n   * @abstract\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @protected\n   * @return {module:ol/extent~Extent} extent Extent.\n   */\n  Geometry.prototype.computeExtent = function computeExtent (extent) {};\n\n  /**\n   * Get the extent of the geometry.\n   * @param {module:ol/extent~Extent=} opt_extent Extent.\n   * @return {module:ol/extent~Extent} extent Extent.\n   * @api\n   */\n  Geometry.prototype.getExtent = function getExtent (opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      this.extent_ = this.computeExtent(this.extent_);\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  };\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {module:ol/coordinate~Coordinate} anchor The rotation center.\n   * @api\n   */\n  Geometry.prototype.rotate = function rotate (angle, anchor) {};\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n   *     sx).\n   * @param {module:ol/coordinate~Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  Geometry.prototype.scale = function scale (sx, opt_sy, opt_anchor) {};\n\n  /**\n   * Translate the geometry. This modifies the geometry coordinates in place.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  Geometry.prototype.translate = function translate (deltaX, deltaY) {};\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the the {@link\n   * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n   * Douglas Peucker} algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @function\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {module:ol/geom/Geometry} A new, simplified version of the original\n   *     geometry.\n   * @api\n   */\n  Geometry.prototype.simplify = function simplify (tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  };\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {module:ol/geom/Geometry} Simplified geometry.\n   */\n  Geometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {};\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {module:ol/geom/GeometryType} Geometry type.\n   */\n  Geometry.prototype.getType = function getType () {};\n\n  /**\n   * Apply a transform function to each coordinate of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {module:ol/proj~TransformFunction} transformFn Transform.\n   */\n  Geometry.prototype.applyTransform = function applyTransform (transformFn) {};\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  Geometry.prototype.intersectsExtent = function intersectsExtent (extent) {};\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   */\n  Geometry.prototype.translate = function translate (deltaX, deltaY) {};\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {module:ol/proj~ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {module:ol/proj~ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {module:ol/geom/Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  Geometry.prototype.transform = function transform (source, destination) {\n    source = getProjection(source);\n    var transformFn = source.getUnits() == Units.TILE_PIXELS ?\n      function(inCoordinates, outCoordinates, stride) {\n        var pixelExtent = source.getExtent();\n        var projectedExtent = source.getWorldExtent();\n        var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n        composeTransform(tmpTransform,\n          projectedExtent[0], projectedExtent[3],\n          scale, -scale, 0,\n          0, 0);\n        transform2D(inCoordinates, 0, inCoordinates.length, stride,\n          tmpTransform, outCoordinates);\n        return getTransform(source, destination)(inCoordinates, outCoordinates, stride);\n      } :\n      getTransform(source, destination);\n    this.applyTransform(transformFn);\n    return this;\n  };\n\n  return Geometry;\n}(BaseObject));\n\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nGeometry.prototype.containsXY = FALSE;\n\n\nexport default Geometry;\n\n//# sourceMappingURL=Geometry.js.map","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array.<number>} Color\n * @api\n */\n\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n\n\n/**\n * Return the color as an rgba string.\n * @param {module:ol/color~Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  var el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    var rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {string} s String.\n * @return {module:ol/color~Color} Color.\n */\nexport var fromString = (\n  function() {\n\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n\n    /**\n     * @type {Object.<string, module:ol/color~Color>}\n     */\n    var cache = {};\n\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n\n    return (\n      /**\n       * @param {string} s String.\n       * @return {module:ol/color~Color} Color.\n       */\n      function(s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n          color = cache[s];\n        } else {\n          if (cacheSize >= MAX_CACHE_SIZE) {\n            var i = 0;\n            for (var key in cache) {\n              if ((i++ & 3) === 0) {\n                delete cache[key];\n                --cacheSize;\n              }\n            }\n          }\n          color = fromStringInternal_(s);\n          cache[s] = color;\n          ++cacheSize;\n        }\n        return color;\n      }\n    );\n\n  })();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {module:ol/color~Color|string} color Color.\n * @return {module:ol/color~Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(/** @type {string} */ (color));\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {module:ol/color~Color} Color.\n */\nfunction fromStringInternal_(s) {\n  var r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) { // hex\n    var n = s.length - 1; // number of hex digits\n    var d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    var hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return (\n    /** @type {module:ol/color~Color} */ (color)\n  );\n}\n\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {module:ol/color~Color} color Color.\n * @return {module:ol/color~Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n\n/**\n * @param {module:ol/color~Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  var r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  var g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  var b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  var a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n//# sourceMappingURL=color.js.map","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n\n/**\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @return {module:ol/colorlike~ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (isColorLike(color)) {\n    return /** @type {string|CanvasPattern|CanvasGradient} */ (color);\n  } else {\n    return toString(/** @type {module:ol/color~Color} */ (color));\n  }\n}\n\n\n/**\n * @param {?} color The value that is potentially an {@link ol/colorlike~ColorLike}.\n * @return {boolean} The color is an {@link ol/colorlike~ColorLike}.\n */\nexport function isColorLike(color) {\n  return (\n    typeof color === 'string' ||\n    color instanceof CanvasPattern ||\n    color instanceof CanvasGradient\n  );\n}\n\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/dom\n */\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n  var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('CANVAS'));\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  var width = element.offsetWidth;\n  var style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  var height = element.offsetHeight;\n  var style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  var parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/webgl\n */\n\n\n/**\n * Constants taken from goog.webgl\n */\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ONE = 1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var SRC_ALPHA = 0x0302;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var COLOR_ATTACHMENT0 = 0x8CE0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var COLOR_BUFFER_BIT = 0x00004000;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TRIANGLES = 0x0004;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TRIANGLE_STRIP = 0x0005;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ONE_MINUS_SRC_ALPHA = 0x0303;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ARRAY_BUFFER = 0x8892;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ELEMENT_ARRAY_BUFFER = 0x8893;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var STREAM_DRAW = 0x88E0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var STATIC_DRAW = 0x88E4;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DYNAMIC_DRAW = 0x88E8;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var CULL_FACE = 0x0B44;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var BLEND = 0x0BE2;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var STENCIL_TEST = 0x0B90;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEPTH_TEST = 0x0B71;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var SCISSOR_TEST = 0x0C11;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_BYTE = 0x1401;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_SHORT = 0x1403;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_INT = 0x1405;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var FLOAT = 0x1406;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var RGBA = 0x1908;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var FRAGMENT_SHADER = 0x8B30;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var VERTEX_SHADER = 0x8B31;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var LINK_STATUS = 0x8B82;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var LINEAR = 0x2601;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_MAG_FILTER = 0x2800;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_MIN_FILTER = 0x2801;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_WRAP_S = 0x2802;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_WRAP_T = 0x2803;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_2D = 0x0DE1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE0 = 0x84C0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var CLAMP_TO_EDGE = 0x812F;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var COMPILE_STATUS = 0x8B81;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var FRAMEBUFFER = 0x8D40;\n\n\n/** end of goog.webgl constants\n */\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nvar CONTEXT_IDS = [\n  'experimental-webgl',\n  'webgl',\n  'webkit-3d',\n  'moz-webgl'\n];\n\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object=} opt_attributes Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n  var ii = CONTEXT_IDS.length;\n  for (var i = 0; i < ii; ++i) {\n    try {\n      var context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n\n/**\n * Include debuggable shader sources.  Default is `true`. This should be set to\n * `false` for production builds.\n * @type {boolean}\n */\nexport var DEBUG = true;\n\n\n/**\n * The maximum supported WebGL texture size in pixels. If WebGL is not\n * supported, the value is set to `undefined`.\n * @type {number|undefined}\n */\nvar MAX_TEXTURE_SIZE; // value is set below\n\n\n/**\n * List of supported WebGL extensions.\n * @type {Array.<string>}\n */\nvar EXTENSIONS; // value is set below\n\n\n/**\n * True if both OpenLayers and browser support WebGL.\n * @type {boolean}\n * @api\n */\nvar HAS = false;\n\n//TODO Remove side effects\nif (typeof window !== 'undefined' && 'WebGLRenderingContext' in window) {\n  try {\n    var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('CANVAS'));\n    var gl = getContext(canvas, {failIfMajorPerformanceCaveat: true});\n    if (gl) {\n      HAS = true;\n      MAX_TEXTURE_SIZE = /** @type {number} */ (gl.getParameter(gl.MAX_TEXTURE_SIZE));\n      EXTENSIONS = gl.getSupportedExtensions();\n    }\n  } catch (e) {\n    // pass\n  }\n}\n\nexport {HAS, MAX_TEXTURE_SIZE, EXTENSIONS};\n\n//# sourceMappingURL=webgl.js.map","/**\n * @module ol/has\n */\n\nvar ua = typeof navigator !== 'undefined' ?\n  navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n\n\n/**\n * True if the browser's Canvas implementation implements {get,set}LineDash.\n * @type {boolean}\n */\nexport var CANVAS_LINE_DASH = function() {\n  var has = false;\n  try {\n    has = !!document.createElement('CANVAS').getContext('2d').setLineDash;\n  } catch (e) {\n    // pass\n  }\n  return has;\n}();\n\n\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport var GEOLOCATION = 'geolocation' in navigator;\n\n\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport var TOUCH = 'ontouchstart' in window;\n\n\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport var POINTER = 'PointerEvent' in window;\n\n\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\n\n\nexport {HAS as WEBGL} from './webgl.js';\n\n//# sourceMappingURL=has.js.map","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3\n};\n\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/css\n */\n\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object.<string>} The font families (or null if the input spec is invalid).\n */\nexport var getFontFamilies = (function() {\n  var style;\n  var cache = {};\n  return function(font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n    if (!(font in cache)) {\n      style.font = font;\n      var family = style.fontFamily;\n      style.font = '';\n      if (!family) {\n        return null;\n      }\n      cache[font] = family.split(/,\\s?/);\n    }\n    return cache[font];\n  };\n})();\n\n//# sourceMappingURL=css.js.map","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\nimport EventTarget from '../events/EventTarget.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires module:ol/events/Event~Event\n * @template T\n */\nvar LRUCache = (function (EventTarget) {\n  function LRUCache(opt_highWaterMark) {\n\n    EventTarget.call(this);\n\n    /**\n     * @type {number}\n     */\n    this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object.<string, module:ol/structs/LRUCache~Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?module:ol/structs/LRUCache~Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/structs/LRUCache~Entry}\n     */\n    this.newest_ = null;\n\n  }\n\n  if ( EventTarget ) LRUCache.__proto__ = EventTarget;\n  LRUCache.prototype = Object.create( EventTarget && EventTarget.prototype );\n  LRUCache.prototype.constructor = LRUCache;\n\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  LRUCache.prototype.canExpireCache = function canExpireCache () {\n    return this.getCount() > this.highWaterMark;\n  };\n\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  LRUCache.prototype.clear = function clear () {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n    this.dispatchEvent(EventType.CLEAR);\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  LRUCache.prototype.containsKey = function containsKey (key) {\n    return this.entries_.hasOwnProperty(key);\n  };\n\n\n  /**\n   * @param {function(this: S, T, string, module:ol/structs/LRUCache): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   * @param {S=} opt_this The object to use as `this` in `f`.\n   * @template S\n   */\n  LRUCache.prototype.forEach = function forEach (f, opt_this) {\n    var this$1 = this;\n\n    var entry = this.oldest_;\n    while (entry) {\n      f.call(opt_this, entry.value_, entry.key_, this$1);\n      entry = entry.newer;\n    }\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  LRUCache.prototype.get = function get (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined,\n      15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  };\n\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  LRUCache.prototype.remove = function remove (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @return {number} Count.\n   */\n  LRUCache.prototype.getCount = function getCount () {\n    return this.count_;\n  };\n\n\n  /**\n   * @return {Array.<string>} Keys.\n   */\n  LRUCache.prototype.getKeys = function getKeys () {\n    var keys = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  };\n\n\n  /**\n   * @return {Array.<T>} Values.\n   */\n  LRUCache.prototype.getValues = function getValues () {\n    var values = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  };\n\n\n  /**\n   * @return {T} Last value.\n   */\n  LRUCache.prototype.peekLast = function peekLast () {\n    return this.oldest_.value_;\n  };\n\n\n  /**\n   * @return {string} Last key.\n   */\n  LRUCache.prototype.peekLastKey = function peekLastKey () {\n    return this.oldest_.key_;\n  };\n\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  LRUCache.prototype.peekFirstKey = function peekFirstKey () {\n    return this.newest_.key_;\n  };\n\n\n  /**\n   * @return {T} value Value.\n   */\n  LRUCache.prototype.pop = function pop () {\n    var entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.replace = function replace (key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.set = function set (key, value) {\n    assert(!(key in this.entries_),\n      16); // Tried to set a value for a key that is used already\n    var entry = /** @type {module:ol/structs/LRUCache~Entry} */ ({\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value\n    });\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  };\n\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  LRUCache.prototype.setSize = function setSize (size) {\n    this.highWaterMark = size;\n  };\n\n\n  /**\n   * Prune the cache.\n   */\n  LRUCache.prototype.prune = function prune () {\n    var this$1 = this;\n\n    while (this.canExpireCache()) {\n      this$1.pop();\n    }\n  };\n\n  return LRUCache;\n}(EventTarget));\n\nexport default LRUCache;\n\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/render/canvas\n */\nimport {getFontFamilies} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {clear} from '../obj.js';\nimport LRUCache from '../structs/LRUCache.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * @typedef {Object} FillState\n * @property {module:ol/colorlike~ColorLike} fillStyle\n */\n\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {module:ol/colorlike~ColorLike} [currentFillStyle]\n * @property {module:ol/colorlike~ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array.<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {module:ol/colorlike~ColorLike} [fillStyle]\n * @property {module:ol/colorlike~ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array.<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array.<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {module:ol/colorlike~ColorLike} strokeStyle\n */\n\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n */\n\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array.<*>} DeclutterGroup\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport var defaultFillStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nexport var defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport var defaultStrokeStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {module:ol/structs/LRUCache.<HTMLCanvasElement>}\n * @api\n */\nexport var labelCache = new LRUCache();\n\n\n/**\n * @type {!Object.<string, number>}\n */\nexport var checkedFonts = {};\n\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n\n\n/**\n * @type {!Object.<string, number>}\n */\nexport var textHeights = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function() {\n  var retries = 60;\n  var checked = checkedFonts;\n  var size = '32px ';\n  var referenceFonts = ['monospace', 'serif'];\n  var len = referenceFonts.length;\n  var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  var interval, referenceWidth;\n\n  function isAvailable(font) {\n    var context = getMeasureContext();\n    var available = true;\n    for (var i = 0; i < len; ++i) {\n      var referenceFont = referenceFonts[i];\n      context.font = size + referenceFont;\n      referenceWidth = context.measureText(text).width;\n      if (font != referenceFont) {\n        context.font = size + font + ',' + referenceFont;\n        var width = context.measureText(text).width;\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    return available;\n  }\n\n  function check() {\n    var done = true;\n    for (var font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    var fontFamilies = getFontFamilies(fontSpec);\n    if (!fontFamilies) {\n      return;\n    }\n    for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      var fontFamily = fontFamilies[i];\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  return measureContext;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {module:ol/size~Size} Measurement.\n */\nexport var measureTextHeight = (function() {\n  var span;\n  var heights = textHeights;\n  return function(font) {\n    var height = heights[font];\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  var measureContext = getMeasureContext();\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n  return measureContext.measureText(text).width;\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n\nexport var resetTransform = createTransform();\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context,\n  transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  var alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n}\n\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/style/Image\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n * @property {boolean} snapToPixel\n */\n\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @api\n */\nvar ImageStyle = function ImageStyle(options) {\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.opacity_ = options.opacity;\n\n  /**\n  * @private\n  * @type {boolean}\n  */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.rotation_ = options.rotation;\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.scale_ = options.scale;\n\n  /**\n  * @private\n  * @type {boolean}\n  */\n  this.snapToPixel_ = options.snapToPixel;\n\n};\n\n/**\n* Get the symbolizer opacity.\n* @return {number} Opacity.\n* @api\n*/\nImageStyle.prototype.getOpacity = function getOpacity () {\n  return this.opacity_;\n};\n\n/**\n* Determine whether the symbolizer rotates with the map.\n* @return {boolean} Rotate with map.\n* @api\n*/\nImageStyle.prototype.getRotateWithView = function getRotateWithView () {\n  return this.rotateWithView_;\n};\n\n/**\n* Get the symoblizer rotation.\n* @return {number} Rotation.\n* @api\n*/\nImageStyle.prototype.getRotation = function getRotation () {\n  return this.rotation_;\n};\n\n/**\n* Get the symbolizer scale.\n* @return {number} Scale.\n* @api\n*/\nImageStyle.prototype.getScale = function getScale () {\n  return this.scale_;\n};\n\n/**\n* Determine whether the symbolizer should be snapped to a pixel.\n* @return {boolean} The symbolizer should snap to a pixel.\n* @api\n*/\nImageStyle.prototype.getSnapToPixel = function getSnapToPixel () {\n  return this.snapToPixel_;\n};\n\n/**\n* Get the anchor point in pixels. The anchor determines the center point for the\n* symbolizer.\n* @abstract\n* @return {Array.<number>} Anchor.\n*/\nImageStyle.prototype.getAnchor = function getAnchor () {};\n\n/**\n* Get the image element for the symbolizer.\n* @abstract\n* @param {number} pixelRatio Pixel ratio.\n* @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n*/\nImageStyle.prototype.getImage = function getImage (pixelRatio) {};\n\n/**\n* @abstract\n* @param {number} pixelRatio Pixel ratio.\n* @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n*/\nImageStyle.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {};\n\n/**\n* @abstract\n* @return {module:ol/ImageState} Image state.\n*/\nImageStyle.prototype.getImageState = function getImageState () {};\n\n/**\n* @abstract\n* @return {module:ol/size~Size} Image size.\n*/\nImageStyle.prototype.getImageSize = function getImageSize () {};\n\n/**\n* @abstract\n* @return {module:ol/size~Size} Size of the hit-detection image.\n*/\nImageStyle.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {};\n\n/**\n* Get the origin of the symbolizer.\n* @abstract\n* @return {Array.<number>} Origin.\n*/\nImageStyle.prototype.getOrigin = function getOrigin () {};\n\n/**\n* Get the size of the symbolizer (in pixels).\n* @abstract\n* @return {module:ol/size~Size} Size.\n*/\nImageStyle.prototype.getSize = function getSize () {};\n\n/**\n* Set the opacity.\n*\n* @param {number} opacity Opacity.\n* @api\n*/\nImageStyle.prototype.setOpacity = function setOpacity (opacity) {\n  this.opacity_ = opacity;\n};\n\n/**\n* Set whether to rotate the style with the view.\n*\n* @param {boolean} rotateWithView Rotate with map.\n* @api\n*/\nImageStyle.prototype.setRotateWithView = function setRotateWithView (rotateWithView) {\n  this.rotateWithView_ = rotateWithView;\n};\n\n/**\n* Set the rotation.\n*\n* @param {number} rotation Rotation.\n* @api\n*/\nImageStyle.prototype.setRotation = function setRotation (rotation) {\n  this.rotation_ = rotation;\n};\n\n/**\n* Set the scale.\n*\n* @param {number} scale Scale.\n* @api\n*/\nImageStyle.prototype.setScale = function setScale (scale) {\n  this.scale_ = scale;\n};\n\n/**\n* Set whether to snap the image to the closest pixel.\n*\n* @param {boolean} snapToPixel Snap to pixel?\n* @api\n*/\nImageStyle.prototype.setSnapToPixel = function setSnapToPixel (snapToPixel) {\n  this.snapToPixel_ = snapToPixel;\n};\n\n/**\n* @abstract\n* @param {function(this: T, module:ol/events/Event)} listener Listener function.\n* @param {T} thisArg Value to use as `this` when executing `listener`.\n* @return {module:ol/events~EventsKey|undefined} Listener key.\n* @template T\n*/\nImageStyle.prototype.listenImageChange = function listenImageChange (listener, thisArg) {};\n\n/**\n* Load not yet loaded URI.\n* @abstract\n*/\nImageStyle.prototype.load = function load () {};\n\n/**\n* @abstract\n* @param {function(this: T, module:ol/events/Event)} listener Listener function.\n* @param {T} thisArg Value to use as `this` when executing `listener`.\n* @template T\n*/\nImageStyle.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {};\n\nexport default ImageStyle;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/RegularShape\n */\n\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {CANVAS_LINE_DASH} from '../has.js';\nimport ImageState from '../ImageState.js';\nimport {defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit} from '../render/canvas.js';\nimport ImageStyle from '../style/Image.js';\n\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {boolean} [snapToPixel=true] If `true` integral numbers of pixels are used as the X and Y pixel coordinate\n * when drawing the shape in the output canvas. If `false` fractional numbers may be used. Using `true` allows for\n * \"sharp\" rendering (no blur), while using `false` allows for \"accurate\" rendering. Note that accuracy is important if\n * the shape's position is animated. Without it, the shape may jitter noticeably.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {module:ol/style/AtlasManager} [atlasManager] The atlas manager to use for this symbol. When\n * using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given, the\n * symbol is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @typedef {Object} RenderOptions\n * @property {module:ol/colorlike~ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array.<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = (function (ImageStyle) {\n  function RegularShape(options) {\n    /**\n     * @type {boolean}\n     */\n    var snapToPixel = options.snapToPixel !== undefined ?\n      options.snapToPixel : true;\n\n    /**\n     * @type {boolean}\n     */\n    var rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    ImageStyle.call(this, {\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: 1,\n      snapToPixel: snapToPixel\n    });\n\n    /**\n     * @private\n     * @type {Array.<string>}\n     */\n    this.checksums_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/style/Fill}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n      options.radius : options.radius1);\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {module:ol/style/Stroke}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    /**\n     * @protected\n     * @type {module:ol/style/AtlasManager|undefined}\n     */\n    this.atlasManager_ = options.atlasManager;\n\n    this.render_(this.atlasManager_);\n\n  }\n\n  if ( ImageStyle ) RegularShape.__proto__ = ImageStyle;\n  RegularShape.prototype = Object.create( ImageStyle && ImageStyle.prototype );\n  RegularShape.prototype.constructor = RegularShape;\n\n  /**\n   * Clones the style. If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n   * @return {module:ol/style/RegularShape} The cloned style.\n   * @api\n   */\n  RegularShape.prototype.clone = function clone () {\n    var style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      snapToPixel: this.getSnapToPixel(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getAnchor = function getAnchor () {\n    return this.anchor_;\n  };\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  RegularShape.prototype.getAngle = function getAngle () {\n    return this.angle_;\n  };\n\n  /**\n   * Get the fill style for the shape.\n   * @return {module:ol/style/Fill} Fill style.\n   * @api\n   */\n  RegularShape.prototype.getFill = function getFill () {\n    return this.fill_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    return this.hitDetectionCanvas_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getImage = function getImage (pixelRatio) {\n    return this.canvas_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageSize = function getImageSize () {\n    return this.imageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n    return this.hitDetectionImageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageState = function getImageState () {\n    return ImageState.LOADED;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getOrigin = function getOrigin () {\n    return this.origin_;\n  };\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  RegularShape.prototype.getPoints = function getPoints () {\n    return this.points_;\n  };\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  RegularShape.prototype.getRadius = function getRadius () {\n    return this.radius_;\n  };\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  RegularShape.prototype.getRadius2 = function getRadius2 () {\n    return this.radius2_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getSize = function getSize () {\n    return this.size_;\n  };\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {module:ol/style/Stroke} Stroke style.\n   * @api\n   */\n  RegularShape.prototype.getStroke = function getStroke () {\n    return this.stroke_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.listenImageChange = function listenImageChange (listener, thisArg) {};\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.load = function load () {};\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {};\n\n  /**\n   * @protected\n   * @param {module:ol/style/AtlasManager|undefined} atlasManager An atlas manager.\n   */\n  RegularShape.prototype.render_ = function render_ (atlasManager) {\n    var imageSize;\n    var lineCap = '';\n    var lineJoin = '';\n    var miterLimit = 0;\n    var lineDash = null;\n    var lineDashOffset = 0;\n    var strokeStyle;\n    var strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      if (!CANVAS_LINE_DASH) {\n        lineDash = null;\n        lineDashOffset = 0;\n      }\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    var size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    /** @type {module:ol/style/RegularShape~RenderOptions} */\n    var renderOptions = {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit\n    };\n\n    if (atlasManager === undefined) {\n      // no atlas manager is used, create a new canvas\n      var context = createCanvasContext2D(size, size);\n      this.canvas_ = context.canvas;\n\n      // canvas.width and height are rounded to the closest integer\n      size = this.canvas_.width;\n      imageSize = size;\n\n      this.draw_(renderOptions, context, 0, 0);\n\n      this.createHitDetectionCanvas_(renderOptions);\n    } else {\n      // an atlas manager is used, add the symbol to an atlas\n      size = Math.round(size);\n\n      var hasCustomHitDetectionImage = !this.fill_;\n      var renderHitDetectionCallback;\n      if (hasCustomHitDetectionImage) {\n        // render the hit-detection image into a separate atlas image\n        renderHitDetectionCallback =\n            this.drawHitDetectionCanvas_.bind(this, renderOptions);\n      }\n\n      var id = this.getChecksum();\n      var info = atlasManager.add(\n        id, size, size, this.draw_.bind(this, renderOptions),\n        renderHitDetectionCallback);\n\n      this.canvas_ = info.image;\n      this.origin_ = [info.offsetX, info.offsetY];\n      imageSize = info.image.width;\n\n      if (hasCustomHitDetectionImage) {\n        this.hitDetectionCanvas_ = info.hitImage;\n        this.hitDetectionImageSize_ =\n            [info.hitImage.width, info.hitImage.height];\n      } else {\n        this.hitDetectionCanvas_ = this.canvas_;\n        this.hitDetectionImageSize_ = [imageSize, imageSize];\n      }\n    }\n\n    this.anchor_ = [size / 2, size / 2];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  };\n\n  /**\n   * @private\n   * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.draw_ = function draw_ (renderOptions, context, x, y) {\n    var this$1 = this;\n\n    var i, angle0, radiusC;\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this$1.angle_;\n        radiusC = i % 2 === 0 ? this$1.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n\n    if (this.fill_) {\n      var color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @private\n   * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n   */\n  RegularShape.prototype.createHitDetectionCanvas_ = function createHitDetectionCanvas_ (renderOptions) {\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    if (this.fill_) {\n      this.hitDetectionCanvas_ = this.canvas_;\n      return;\n    }\n\n    // if no fill style is set, create an extra hit-detection image with a\n    // default fill style\n    var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n    this.hitDetectionCanvas_ = context.canvas;\n\n    this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n  };\n\n  /**\n   * @private\n   * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.drawHitDetectionCanvas_ = function drawHitDetectionCanvas_ (renderOptions, context, x, y) {\n    var this$1 = this;\n\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      var i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this$1.angle_;\n        radiusC = i % 2 === 0 ? this$1.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @return {string} The checksum.\n   */\n  RegularShape.prototype.getChecksum = function getChecksum () {\n    var strokeChecksum = this.stroke_ ?\n      this.stroke_.getChecksum() : '-';\n    var fillChecksum = this.fill_ ?\n      this.fill_.getChecksum() : '-';\n\n    var recalculate = !this.checksums_ ||\n        (strokeChecksum != this.checksums_[1] ||\n        fillChecksum != this.checksums_[2] ||\n        this.radius_ != this.checksums_[3] ||\n        this.radius2_ != this.checksums_[4] ||\n        this.angle_ != this.checksums_[5] ||\n        this.points_ != this.checksums_[6]);\n\n    if (recalculate) {\n      var checksum = 'r' + strokeChecksum + fillChecksum +\n          (this.radius_ !== undefined ? this.radius_.toString() : '-') +\n          (this.radius2_ !== undefined ? this.radius2_.toString() : '-') +\n          (this.angle_ !== undefined ? this.angle_.toString() : '-') +\n          (this.points_ !== undefined ? this.points_.toString() : '-');\n      this.checksums_ = [checksum, strokeChecksum, fillChecksum,\n        this.radius_, this.radius2_, this.angle_, this.points_];\n    }\n\n    return this.checksums_[0];\n  };\n\n  return RegularShape;\n}(ImageStyle));\n\n\nexport default RegularShape;\n\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from '../style/RegularShape.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {boolean} [snapToPixel=true] If `true` integral numbers of pixels are used as the X and Y pixel coordinate\n * when drawing the circle in the output canvas. If `false` fractional numbers may be used. Using `true` allows for\n * \"sharp\" rendering (no blur), while using `false` allows for \"accurate\" rendering. Note that accuracy is important if\n * the circle's position is animated. Without it, the circle may jitter noticeably.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/AtlasManager} [atlasManager] The atlas manager to use for this circle.\n * When using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given,\n * the circle is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = (function (RegularShape) {\n  function CircleStyle(opt_options) {\n\n    var options = opt_options || {};\n\n    RegularShape.call(this, {\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      snapToPixel: options.snapToPixel,\n      stroke: options.stroke,\n      atlasManager: options.atlasManager\n    });\n\n  }\n\n  if ( RegularShape ) CircleStyle.__proto__ = RegularShape;\n  CircleStyle.prototype = Object.create( RegularShape && RegularShape.prototype );\n  CircleStyle.prototype.constructor = CircleStyle;\n\n  /**\n  * Clones the style.  If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n  * @return {module:ol/style/Circle} The cloned style.\n  * @override\n  * @api\n  */\n  CircleStyle.prototype.clone = function clone () {\n    var style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      snapToPixel: this.getSnapToPixel(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n  * Set the circle radius.\n  *\n  * @param {number} radius Circle radius.\n  * @api\n  */\n  CircleStyle.prototype.setRadius = function setRadius (radius) {\n    this.radius_ = radius;\n    this.render_(this.atlasManager_);\n  };\n\n  return CircleStyle;\n}(RegularShape));\n\n\nexport default CircleStyle;\n\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/Fill\n */\nimport {getUid} from '../util.js';\nimport {asString} from '../color.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/color~Color|module:ol/colorlike~ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = function Fill(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {module:ol/color~Color|module:ol/colorlike~ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n * @return {module:ol/style/Fill} The cloned style.\n * @api\n */\nFill.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Fill({\n    color: (color && color.slice) ? color.slice() : color || undefined\n  });\n};\n\n/**\n * Get the fill color.\n * @return {module:ol/color~Color|module:ol/colorlike~ColorLike} Color.\n * @api\n */\nFill.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Set the color.\n *\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @api\n */\nFill.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nFill.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    if (\n      this.color_ instanceof CanvasPattern ||\n        this.color_ instanceof CanvasGradient\n    ) {\n      this.checksum_ = getUid(this.color_).toString();\n    } else {\n      this.checksum_ = 'f' + (this.color_ ? asString(this.color_) : '-');\n    }\n  }\n\n  return this.checksum_;\n};\n\nexport default Fill;\n\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/Stroke\n */\nimport {getUid} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/color~Color|module:ol/colorlike~ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array.<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = function Stroke(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {module:ol/color~Color|module:ol/colorlike~ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineCap_ = options.lineCap;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lineDashOffset_ = options.lineDashOffset;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineJoin_ = options.lineJoin;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.miterLimit_ = options.miterLimit;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = options.width;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style.\n * @return {module:ol/style/Stroke} The cloned style.\n * @api\n */\nStroke.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Stroke({\n    color: (color && color.slice) ? color.slice() : color || undefined,\n    lineCap: this.getLineCap(),\n    lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n    lineDashOffset: this.getLineDashOffset(),\n    lineJoin: this.getLineJoin(),\n    miterLimit: this.getMiterLimit(),\n    width: this.getWidth()\n  });\n};\n\n/**\n * Get the stroke color.\n * @return {module:ol/color~Color|module:ol/colorlike~ColorLike} Color.\n * @api\n */\nStroke.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Get the line cap type for the stroke.\n * @return {string|undefined} Line cap.\n * @api\n */\nStroke.prototype.getLineCap = function getLineCap () {\n  return this.lineCap_;\n};\n\n/**\n * Get the line dash style for the stroke.\n * @return {Array.<number>} Line dash.\n * @api\n */\nStroke.prototype.getLineDash = function getLineDash () {\n  return this.lineDash_;\n};\n\n/**\n * Get the line dash offset for the stroke.\n * @return {number|undefined} Line dash offset.\n * @api\n */\nStroke.prototype.getLineDashOffset = function getLineDashOffset () {\n  return this.lineDashOffset_;\n};\n\n/**\n * Get the line join type for the stroke.\n * @return {string|undefined} Line join.\n * @api\n */\nStroke.prototype.getLineJoin = function getLineJoin () {\n  return this.lineJoin_;\n};\n\n/**\n * Get the miter limit for the stroke.\n * @return {number|undefined} Miter limit.\n * @api\n */\nStroke.prototype.getMiterLimit = function getMiterLimit () {\n  return this.miterLimit_;\n};\n\n/**\n * Get the stroke width.\n * @return {number|undefined} Width.\n * @api\n */\nStroke.prototype.getWidth = function getWidth () {\n  return this.width_;\n};\n\n/**\n * Set the color.\n *\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @api\n */\nStroke.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line cap.\n *\n * @param {string|undefined} lineCap Line cap.\n * @api\n */\nStroke.prototype.setLineCap = function setLineCap (lineCap) {\n  this.lineCap_ = lineCap;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash.\n *\n * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n * property will have no visual effect in these browsers.\n *\n * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n *\n * @param {Array.<number>} lineDash Line dash.\n * @api\n */\nStroke.prototype.setLineDash = function setLineDash (lineDash) {\n  this.lineDash_ = lineDash;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash offset.\n *\n * @param {number|undefined} lineDashOffset Line dash offset.\n * @api\n */\nStroke.prototype.setLineDashOffset = function setLineDashOffset (lineDashOffset) {\n  this.lineDashOffset_ = lineDashOffset;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line join.\n *\n * @param {string|undefined} lineJoin Line join.\n * @api\n */\nStroke.prototype.setLineJoin = function setLineJoin (lineJoin) {\n  this.lineJoin_ = lineJoin;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the miter limit.\n *\n * @param {number|undefined} miterLimit Miter limit.\n * @api\n */\nStroke.prototype.setMiterLimit = function setMiterLimit (miterLimit) {\n  this.miterLimit_ = miterLimit;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the width.\n *\n * @param {number|undefined} width Width.\n * @api\n */\nStroke.prototype.setWidth = function setWidth (width) {\n  this.width_ = width;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nStroke.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    this.checksum_ = 's';\n    if (this.color_) {\n      if (typeof this.color_ === 'string') {\n        this.checksum_ += this.color_;\n      } else {\n        this.checksum_ += getUid(this.color_).toString();\n      }\n    } else {\n      this.checksum_ += '-';\n    }\n    this.checksum_ += ',' +\n        (this.lineCap_ !== undefined ?\n          this.lineCap_.toString() : '-') + ',' +\n        (this.lineDash_ ?\n          this.lineDash_.toString() : '-') + ',' +\n        (this.lineDashOffset_ !== undefined ?\n          this.lineDashOffset_ : '-') + ',' +\n        (this.lineJoin_ !== undefined ?\n          this.lineJoin_ : '-') + ',' +\n        (this.miterLimit_ !== undefined ?\n          this.miterLimit_.toString() : '-') + ',' +\n        (this.width_ !== undefined ?\n          this.width_.toString() : '-');\n  }\n\n  return this.checksum_;\n};\n\nexport default Stroke;\n\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/style/Style\n */\n\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport {assert} from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from '../style/Circle.js';\nimport Fill from '../style/Fill.js';\nimport Stroke from '../style/Stroke.js';\n\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function((module:ol/Feature|module:ol/render/Feature), number):\n *     (module:ol/style/Style|Array.<module:ol/style/Style>)} StyleFunction\n */\n\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function((module:ol/Feature|module:ol/render/Feature)):\n *     (module:ol/geom/Geometry|module:ol/render/Feature|undefined)} GeometryFunction\n */\n\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((module:ol/coordinate~Coordinate|Array<module:ol/coordinate~Coordinate>|Array.<Array.<module:ol/coordinate~Coordinate>>),module:ol/render~State)}\n * RenderFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {module:ol/style/Image} [image] Image style.\n * @property {module:ol/style/Style~RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/Text} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n * @api\n */\nvar Style = function Style(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction}\n   */\n  this.geometry_ = null;\n\n  /**\n   * @private\n   * @type {!module:ol/style/Style~GeometryFunction}\n   */\n  this.geometryFunction_ = defaultGeometryFunction;\n\n  if (options.geometry !== undefined) {\n    this.setGeometry(options.geometry);\n  }\n\n  /**\n   * @private\n   * @type {module:ol/style/Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n     * @private\n     * @type {module:ol/style/Image}\n     */\n  this.image_ = options.image !== undefined ? options.image : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Style~RenderFunction|null}\n   */\n  this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Text}\n   */\n  this.text_ = options.text !== undefined ? options.text : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zIndex_ = options.zIndex;\n\n};\n\n/**\n * Clones the style.\n * @return {module:ol/style/Style} The cloned style.\n * @api\n */\nStyle.prototype.clone = function clone () {\n  var geometry = this.getGeometry();\n  if (geometry && geometry.clone) {\n    geometry = geometry.clone();\n  }\n  return new Style({\n    geometry: geometry,\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    image: this.getImage() ? this.getImage().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    text: this.getText() ? this.getText().clone() : undefined,\n    zIndex: this.getZIndex()\n  });\n};\n\n/**\n * Get the custom renderer function that was configured with\n * {@link #setRenderer} or the `renderer` constructor option.\n * @return {module:ol/style/Style~RenderFunction|null} Custom renderer function.\n * @api\n */\nStyle.prototype.getRenderer = function getRenderer () {\n  return this.renderer_;\n};\n\n/**\n * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n * and `image` options of the style will be ignored.\n * @param {module:ol/style/Style~RenderFunction|null} renderer Custom renderer function.\n * @api\n */\nStyle.prototype.setRenderer = function setRenderer (renderer) {\n  this.renderer_ = renderer;\n};\n\n/**\n * Get the geometry to be rendered.\n * @return {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction}\n * Feature property or geometry or function that returns the geometry that will\n * be rendered with this style.\n * @api\n */\nStyle.prototype.getGeometry = function getGeometry () {\n  return this.geometry_;\n};\n\n/**\n * Get the function used to generate a geometry for rendering.\n * @return {!module:ol/style/Style~GeometryFunction} Function that is called with a feature\n * and returns the geometry to render instead of the feature's geometry.\n * @api\n */\nStyle.prototype.getGeometryFunction = function getGeometryFunction () {\n  return this.geometryFunction_;\n};\n\n/**\n * Get the fill style.\n * @return {module:ol/style/Fill} Fill style.\n * @api\n */\nStyle.prototype.getFill = function getFill () {\n  return this.fill_;\n};\n\n/**\n * Set the fill style.\n * @param {module:ol/style/Fill} fill Fill style.\n * @api\n */\nStyle.prototype.setFill = function setFill (fill) {\n  this.fill_ = fill;\n};\n\n/**\n * Get the image style.\n * @return {module:ol/style/Image} Image style.\n * @api\n */\nStyle.prototype.getImage = function getImage () {\n  return this.image_;\n};\n\n/**\n * Set the image style.\n * @param {module:ol/style/Image} image Image style.\n * @api\n */\nStyle.prototype.setImage = function setImage (image) {\n  this.image_ = image;\n};\n\n/**\n * Get the stroke style.\n * @return {module:ol/style/Stroke} Stroke style.\n * @api\n */\nStyle.prototype.getStroke = function getStroke () {\n  return this.stroke_;\n};\n\n/**\n * Set the stroke style.\n * @param {module:ol/style/Stroke} stroke Stroke style.\n * @api\n */\nStyle.prototype.setStroke = function setStroke (stroke) {\n  this.stroke_ = stroke;\n};\n\n/**\n * Get the text style.\n * @return {module:ol/style/Text} Text style.\n * @api\n */\nStyle.prototype.getText = function getText () {\n  return this.text_;\n};\n\n/**\n * Set the text style.\n * @param {module:ol/style/Text} text Text style.\n * @api\n */\nStyle.prototype.setText = function setText (text) {\n  this.text_ = text;\n};\n\n/**\n * Get the z-index for the style.\n * @return {number|undefined} ZIndex.\n * @api\n */\nStyle.prototype.getZIndex = function getZIndex () {\n  return this.zIndex_;\n};\n\n/**\n * Set a geometry that is rendered instead of the feature's geometry.\n *\n * @param {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction} geometry\n *   Feature property or geometry or function returning a geometry to render\n *   for this style.\n * @api\n */\nStyle.prototype.setGeometry = function setGeometry (geometry) {\n  if (typeof geometry === 'function') {\n    this.geometryFunction_ = geometry;\n  } else if (typeof geometry === 'string') {\n    this.geometryFunction_ = function(feature) {\n      return (\n        /** @type {module:ol/geom/Geometry} */ (feature.get(geometry))\n      );\n    };\n  } else if (!geometry) {\n    this.geometryFunction_ = defaultGeometryFunction;\n  } else if (geometry !== undefined) {\n    this.geometryFunction_ = function() {\n      return (\n        /** @type {module:ol/geom/Geometry} */ (geometry)\n      );\n    };\n  }\n  this.geometry_ = geometry;\n};\n\n/**\n * Set the z-index.\n *\n * @param {number|undefined} zIndex ZIndex.\n * @api\n */\nStyle.prototype.setZIndex = function setZIndex (zIndex) {\n  this.zIndex_ = zIndex;\n};\n\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of module:ol/style/Style or single style objects wrapped in a\n * new style function.\n * @param {module:ol/style/Style~StyleFunction|Array.<module:ol/style/Style>|module:ol/style/Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {module:ol/style/Style~StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  var styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array.<module:ol/style/Style>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(obj instanceof Style,\n        41); // Expected an `module:ol/style/Style~Style` or an array of `module:ol/style/Style~Style`\n      styles = [obj];\n    }\n    styleFunction = function() {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n\n/**\n * @type {Array.<module:ol/style/Style>}\n */\nvar defaultStyles = null;\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<module:ol/style/Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (module:ol/style/Circle~CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    var fill = new Fill({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    var stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5\n        }),\n        fill: fill,\n        stroke: stroke\n      })\n    ];\n  }\n  return defaultStyles;\n}\n\n\n/**\n * Default styles for editing features.\n * @return {Object.<module:ol/geom/GeometryType, Array.<module:ol/style/Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object.<module:ol/geom/GeometryType, Array.<module:ol/style/Style>>} */\n  var styles = {};\n  var white = [255, 255, 255, 1];\n  var blue = [0, 153, 255, 1];\n  var width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5]\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_POLYGON] =\n      styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] =\n      styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING]\n      );\n\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2\n        })\n      }),\n      zIndex: Infinity\n    })\n  ];\n  styles[GeometryType.MULTI_POINT] =\n      styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING],\n        styles[GeometryType.POINT]\n      );\n\n  return styles;\n}\n\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature to get the geometry for.\n * @return {module:ol/geom/Geometry|module:ol/render/Feature|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n\n//# sourceMappingURL=Style.js.map","/**\n * @module ol/Feature\n */\nimport {assert} from './asserts.js';\nimport {listen, unlisten, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport Geometry from './geom/Geometry.js';\nimport Style from './style/Style.js';\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n */\nvar Feature = (function (BaseObject) {\n  function Feature(opt_geometryOrProperties) {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/style/Style~StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n\n    if (opt_geometryOrProperties !== undefined) {\n      if (opt_geometryOrProperties instanceof Geometry ||\n          !opt_geometryOrProperties) {\n        var geometry = opt_geometryOrProperties;\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object.<string, *>} */\n        var properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  if ( BaseObject ) Feature.__proto__ = BaseObject;\n  Feature.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Feature.prototype.constructor = Feature;\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {module:ol/Feature} The clone.\n   * @api\n   */\n  Feature.prototype.clone = function clone () {\n    var clone = new Feature(this.getProperties());\n    clone.setGeometryName(this.getGeometryName());\n    var geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    var style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  };\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {module:ol/geom/Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  Feature.prototype.getGeometry = function getGeometry () {\n    return (\n      /** @type {module:ol/geom/Geometry|undefined} */ (this.get(this.geometryName_))\n    );\n  };\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  Feature.prototype.getId = function getId () {\n    return this.id_;\n  };\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  Feature.prototype.getGeometryName = function getGeometryName () {\n    return this.geometryName_;\n  };\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} The feature style.\n   * @api\n   */\n  Feature.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n   * Get the feature's style function.\n   * @return {module:ol/style/Style~StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  Feature.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChange_ = function handleGeometryChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChanged_ = function handleGeometryChanged_ () {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    var geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(geometry,\n        EventType.CHANGE, this.handleGeometryChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {module:ol/geom/Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  Feature.prototype.setGeometry = function setGeometry (geometry) {\n    this.set(this.geometryName_, geometry);\n  };\n\n  /**\n   * Set the style for the feature.  This can be a single style object, an array\n   * of styles, or a function that takes a resolution and returns an array of\n   * styles. If it is `null` the feature has no style (a `null` style).\n   * @param {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} style Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setStyle = function setStyle (style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  };\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setId = function setId (id) {\n    this.id_ = id;\n    this.changed();\n  };\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  Feature.prototype.setGeometryName = function setGeometryName (name) {\n    unlisten(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.geometryName_ = name;\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.handleGeometryChanged_();\n  };\n\n  return Feature;\n}(BaseObject));\n\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of module:ol/style/Style or single style objects wrapped\n * in a new feature style function.\n * @param {module:ol/style/Style~StyleFunction|!Array.<module:ol/style/Style>|!module:ol/style/Style} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {module:ol/style/Style~StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array.<module:ol/style/Style>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(obj instanceof Style,\n        41); // Expected an `module:ol/style/Style~Style` or an array of `module:ol/style/Style~Style`\n      styles = [obj];\n    }\n    return function() {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection~CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection~CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove'\n};\n\n//# sourceMappingURL=CollectionEventType.js.map","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LENGTH: 'length'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport var CollectionEvent = (function (Event) {\n  function CollectionEvent(type, opt_element) {\n    Event.call(this, type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n  }\n\n  if ( Event ) CollectionEvent.__proto__ = Event;\n  CollectionEvent.prototype = Object.create( Event && Event.prototype );\n  CollectionEvent.prototype.constructor = CollectionEvent;\n\n  return CollectionEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @template T\n * @api\n */\nvar Collection = (function (BaseObject) {\n  function Collection(opt_array, opt_options) {\n    var this$1 = this;\n\n\n    BaseObject.call(this);\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array.<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n        this$1.assertUnique_(this$1.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n\n  }\n\n  if ( BaseObject ) Collection.__proto__ = BaseObject;\n  Collection.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Collection.prototype.constructor = Collection;\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  Collection.prototype.clear = function clear () {\n    var this$1 = this;\n\n    while (this.getLength() > 0) {\n      this$1.pop();\n    }\n  };\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array.<T>} arr Array.\n   * @return {module:ol/Collection.<T>} This collection.\n   * @api\n   */\n  Collection.prototype.extend = function extend (arr) {\n    var this$1 = this;\n\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      this$1.push(arr[i]);\n    }\n    return this;\n  };\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array.<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  Collection.prototype.forEach = function forEach (f) {\n    var array = this.array_;\n    for (var i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  };\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array.<T>} Array.\n   * @api\n   */\n  Collection.prototype.getArray = function getArray () {\n    return this.array_;\n  };\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  Collection.prototype.item = function item (index) {\n    return this.array_[index];\n  };\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  Collection.prototype.getLength = function getLength () {\n    return /** @type {number} */ (this.get(Property.LENGTH));\n  };\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.insertAt = function insertAt (index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem));\n  };\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  Collection.prototype.pop = function pop () {\n    return this.removeAt(this.getLength() - 1);\n  };\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  Collection.prototype.push = function push (elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    var n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  };\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  Collection.prototype.remove = function remove (elem) {\n    var this$1 = this;\n\n    var arr = this.array_;\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this$1.removeAt(i);\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  Collection.prototype.removeAt = function removeAt (index) {\n    var prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev));\n    return prev;\n  };\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.setAt = function setAt (index, elem) {\n    var this$1 = this;\n\n    var n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      var prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev));\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem));\n    } else {\n      for (var j = n; j < index; ++j) {\n        this$1.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  };\n\n  /**\n   * @private\n   */\n  Collection.prototype.updateLength_ = function updateLength_ () {\n    this.set(Property.LENGTH, this.array_.length);\n  };\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number=} opt_except Optional index to ignore.\n   */\n  Collection.prototype.assertUnique_ = function assertUnique_ (elem, opt_except) {\n    var this$1 = this;\n\n    for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this$1.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  };\n\n  return Collection;\n}(BaseObject));\n\n\nexport default Collection;\n\n//# sourceMappingURL=Collection.js.map","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nvar MapEvent = (function (Event) {\n  function MapEvent(type, map, opt_frameState) {\n\n    Event.call(this, type);\n\n    /**\n     * The map where the event occurred.\n     * @type {module:ol/PluggableMap}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?module:ol/PluggableMap~FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n\n  }\n\n  if ( Event ) MapEvent.__proto__ = Event;\n  MapEvent.prototype = Object.create( Event && Event.prototype );\n  MapEvent.prototype.constructor = MapEvent;\n\n  return MapEvent;\n}(Event));\n\nexport default MapEvent;\n\n//# sourceMappingURL=MapEvent.js.map","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = (function (MapEvent) {\n  function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n\n    MapEvent.call(this, type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {Event}\n     * @api\n     */\n    this.originalEvent = browserEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {module:ol/pixel~Pixel}\n     * @api\n     */\n    this.pixel = map.getEventPixel(browserEvent);\n\n    /**\n     * The coordinate in view projection corresponding to the original browser event.\n     * @type {module:ol/coordinate~Coordinate}\n     * @api\n     */\n    this.coordinate = map.getCoordinateFromPixel(this.pixel);\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n\n  }\n\n  if ( MapEvent ) MapBrowserEvent.__proto__ = MapEvent;\n  MapBrowserEvent.prototype = Object.create( MapEvent && MapEvent.prototype );\n  MapBrowserEvent.prototype.constructor = MapBrowserEvent;\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.preventDefault = function preventDefault () {\n    MapEvent.prototype.preventDefault.call(this);\n    this.originalEvent.preventDefault();\n  };\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.stopPropagation = function stopPropagation () {\n    MapEvent.prototype.stopPropagation.call(this);\n    this.originalEvent.stopPropagation();\n  };\n\n  return MapBrowserEvent;\n}(MapEvent));\n\n\nexport default MapBrowserEvent;\n\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=MapBrowserEventType.js.map","/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\n\nvar MapBrowserPointerEvent = (function (MapBrowserEvent) {\n  function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n\n    MapBrowserEvent.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState);\n\n    /**\n     * @const\n     * @type {module:ol/pointer/PointerEvent}\n     */\n    this.pointerEvent = pointerEvent;\n\n  }\n\n  if ( MapBrowserEvent ) MapBrowserPointerEvent.__proto__ = MapBrowserEvent;\n  MapBrowserPointerEvent.prototype = Object.create( MapBrowserEvent && MapBrowserEvent.prototype );\n  MapBrowserPointerEvent.prototype.constructor = MapBrowserPointerEvent;\n\n  return MapBrowserPointerEvent;\n}(MapBrowserEvent));\n\nexport default MapBrowserPointerEvent;\n\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/pointer/EventSource\n */\n\nvar EventSource = function EventSource(dispatcher, mapping) {\n\n  /**\n   * @type {module:ol/pointer/PointerEventHandler}\n   */\n  this.dispatcher = dispatcher;\n\n  /**\n   * @private\n   * @const\n   * @type {!Object.<string, function(Event)>}\n   */\n  this.mapping_ = mapping;\n};\n\n/**\n * List of events supported by this source.\n * @return {Array.<string>} Event names\n */\nEventSource.prototype.getEvents = function getEvents () {\n  return Object.keys(this.mapping_);\n};\n\n/**\n * Returns the handler that should handle a given event type.\n * @param {string} eventType The event type.\n * @return {function(Event)} Handler\n */\nEventSource.prototype.getHandlerForEvent = function getHandlerForEvent (eventType) {\n  return this.mapping_[eventType];\n};\n\nexport default EventSource;\n\n//# sourceMappingURL=EventSource.js.map","/**\n * @module ol/pointer/MouseSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from '../pointer/EventSource.js';\n\n\n/**\n * @type {number}\n */\nexport var POINTER_ID = 1;\n\n\n/**\n * @type {string}\n */\nexport var POINTER_TYPE = 'mouse';\n\n\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nvar DEDUP_DIST = 25;\n\n/**\n * Handler for `mousedown`.\n *\n * @this {module:ol/pointer/MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousedown(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    // TODO(dfreedman) workaround for some elements not sending mouseup\n    // http://crbug/149091\n    if (POINTER_ID.toString() in this.pointerMap) {\n      this.cancel(inEvent);\n    }\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.pointerMap[POINTER_ID.toString()] = inEvent;\n    this.dispatcher.down(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mousemove`.\n *\n * @this {module:ol/pointer/MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousemove(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.move(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseup`.\n *\n * @this {module:ol/pointer/MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseup(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var p = this.pointerMap[POINTER_ID.toString()];\n\n    if (p && p.button === inEvent.button) {\n      var e = prepareEvent(inEvent, this.dispatcher);\n      this.dispatcher.up(e, inEvent);\n      this.cleanupMouse();\n    }\n  }\n}\n\n/**\n * Handler for `mouseover`.\n *\n * @this {module:ol/pointer/MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseover(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.enterOver(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseout`.\n *\n * @this {module:ol/pointer/MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseout(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.leaveOut(e, inEvent);\n  }\n}\n\n\nvar MouseSource = (function (EventSource) {\n  function MouseSource(dispatcher) {\n    var mapping = {\n      'mousedown': mousedown,\n      'mousemove': mousemove,\n      'mouseup': mouseup,\n      'mouseover': mouseover,\n      'mouseout': mouseout\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object.<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {Array.<module:ol/pixel~Pixel>}\n     */\n    this.lastTouches = [];\n  }\n\n  if ( EventSource ) MouseSource.__proto__ = EventSource;\n  MouseSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MouseSource.prototype.constructor = MouseSource;\n\n  /**\n   * Detect if a mouse event was simulated from a touch by\n   * checking if previously there was a touch event at the\n   * same position.\n   *\n   * FIXME - Known problem with the native Android browser on\n   * Samsung GT-I9100 (Android 4.1.2):\n   * In case the page is scrolled, this function does not work\n   * correctly when a canvas is used (WebGL or canvas renderer).\n   * Mouse listeners on canvas elements (for this browser), create\n   * two mouse events: One 'good' and one 'bad' one (on other browsers or\n   * when a div is used, there is only one event). For the 'bad' one,\n   * clientX/clientY and also pageX/pageY are wrong when the page\n   * is scrolled. Because of that, this function can not detect if\n   * the events were simulated from a touch event. As result, a\n   * pointer event at a wrong position is dispatched, which confuses\n   * the map interactions.\n   * It is unclear, how one can get the correct position for the event\n   * or detect that the positions are invalid.\n   *\n   * @private\n   * @param {MouseEvent} inEvent The in event.\n   * @return {boolean} True, if the event was generated by a touch.\n   */\n  MouseSource.prototype.isEventSimulatedFromTouch_ = function isEventSimulatedFromTouch_ (inEvent) {\n    var lts = this.lastTouches;\n    var x = inEvent.clientX;\n    var y = inEvent.clientY;\n    for (var i = 0, l = lts.length, t = (void 0); i < l && (t = lts[i]); i++) {\n      // simulated mouse events will be swallowed near a primary touchend\n      var dx = Math.abs(x - t[0]);\n      var dy = Math.abs(y - t[1]);\n      if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Dispatches a `pointercancel` event.\n   *\n   * @param {Event} inEvent The in event.\n   */\n  MouseSource.prototype.cancel = function cancel (inEvent) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanupMouse();\n  };\n\n  /**\n   * Remove the mouse from the list of active pointers.\n   */\n  MouseSource.prototype.cleanupMouse = function cleanupMouse () {\n    delete this.pointerMap[POINTER_ID.toString()];\n  };\n\n  return MouseSource;\n}(EventSource));\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nfunction prepareEvent(inEvent, dispatcher) {\n  var e = dispatcher.cloneEvent(inEvent, inEvent);\n\n  // forward mouse preventDefault\n  var pd = e.preventDefault;\n  e.preventDefault = function() {\n    inEvent.preventDefault();\n    pd();\n  };\n\n  e.pointerId = POINTER_ID;\n  e.isPrimary = true;\n  e.pointerType = POINTER_TYPE;\n\n  return e;\n}\n\n\nexport default MouseSource;\n\n//# sourceMappingURL=MouseSource.js.map","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from '../pointer/EventSource.js';\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nvar POINTER_TYPES = [\n  '',\n  'unavailable',\n  'touch',\n  'pen',\n  'mouse'\n];\n\n/**\n * Handler for `msPointerDown`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerDown(inEvent) {\n  this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.down(e, inEvent);\n}\n\n/**\n * Handler for `msPointerMove`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerMove(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.move(e, inEvent);\n}\n\n/**\n * Handler for `msPointerUp`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerUp(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.up(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msPointerOut`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOut(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.leaveOut(e, inEvent);\n}\n\n/**\n * Handler for `msPointerOver`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOver(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.enterOver(e, inEvent);\n}\n\n/**\n * Handler for `msPointerCancel`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerCancel(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msLostPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msGotPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\nvar MsSource = (function (EventSource) {\n  function MsSource(dispatcher) {\n    var mapping = {\n      'MSPointerDown': msPointerDown,\n      'MSPointerMove': msPointerMove,\n      'MSPointerUp': msPointerUp,\n      'MSPointerOut': msPointerOut,\n      'MSPointerOver': msPointerOver,\n      'MSPointerCancel': msPointerCancel,\n      'MSGotPointerCapture': msGotPointerCapture,\n      'MSLostPointerCapture': msLostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object.<string, MSPointerEvent|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n  }\n\n  if ( EventSource ) MsSource.__proto__ = EventSource;\n  MsSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MsSource.prototype.constructor = MsSource;\n\n  /**\n   * Creates a copy of the original event that will be used\n   * for the fake pointer event.\n   *\n   * @private\n   * @param {MSPointerEvent} inEvent The in event.\n   * @return {Object} The copied event.\n   */\n  MsSource.prototype.prepareEvent_ = function prepareEvent_ (inEvent) {\n    var e = inEvent;\n    if (typeof inEvent.pointerType === 'number') {\n      e = this.dispatcher.cloneEvent(inEvent, inEvent);\n      e.pointerType = POINTER_TYPES[inEvent.pointerType];\n    }\n\n    return e;\n  };\n\n  /**\n   * Remove this pointer from the list of active pointers.\n   * @param {number} pointerId Pointer identifier.\n   */\n  MsSource.prototype.cleanup = function cleanup (pointerId) {\n    delete this.pointerMap[pointerId.toString()];\n  };\n\n  return MsSource;\n}(EventSource));\n\nexport default MsSource;\n\n//# sourceMappingURL=MsSource.js.map","/**\n * @module ol/pointer/NativeSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from '../pointer/EventSource.js';\n\n/**\n * Handler for `pointerdown`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerDown(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointermove`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerMove(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerup`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerUp(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerout`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOut(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerover`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOver(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointercancel`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerCancel(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `lostpointercapture`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction lostPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `gotpointercapture`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction gotPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\nvar NativeSource = (function (EventSource) {\n  function NativeSource(dispatcher) {\n    var mapping = {\n      'pointerdown': pointerDown,\n      'pointermove': pointerMove,\n      'pointerup': pointerUp,\n      'pointerout': pointerOut,\n      'pointerover': pointerOver,\n      'pointercancel': pointerCancel,\n      'gotpointercapture': gotPointerCapture,\n      'lostpointercapture': lostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n  }\n\n  if ( EventSource ) NativeSource.__proto__ = EventSource;\n  NativeSource.prototype = Object.create( EventSource && EventSource.prototype );\n  NativeSource.prototype.constructor = NativeSource;\n\n  return NativeSource;\n}(EventSource));\n\nexport default NativeSource;\n\n//# sourceMappingURL=NativeSource.js.map","/**\n * @module ol/pointer/PointerEvent\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport Event from '../events/Event.js';\n\n\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nvar HAS_BUTTONS = false;\n\n\nvar PointerEvent = (function (Event) {\n  function PointerEvent(type, originalEvent, opt_eventDict) {\n    Event.call(this, type);\n\n    /**\n     * @const\n     * @type {Event}\n     */\n    this.originalEvent = originalEvent;\n\n    var eventDict = opt_eventDict ? opt_eventDict : {};\n\n    /**\n     * @type {number}\n     */\n    this.buttons = this.getButtons_(eventDict);\n\n    /**\n     * @type {number}\n     */\n    this.pressure = this.getPressure_(eventDict, this.buttons);\n\n    // MouseEvent related properties\n\n    /**\n     * @type {boolean}\n     */\n    this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n\n    /**\n     * @type {Object}\n     */\n    this.view = 'view' in eventDict ? eventDict['view'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n\n    /**\n     * @type {number}\n     */\n    this.button = 'button' in eventDict ? eventDict['button'] : 0;\n\n    /**\n     * @type {Node}\n     */\n    this.relatedTarget = 'relatedTarget' in eventDict ?\n      eventDict['relatedTarget'] : null;\n\n    // PointerEvent related properties\n\n    /**\n     * @const\n     * @type {number}\n     */\n    this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.width = 'width' in eventDict ? eventDict['width'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.height = 'height' in eventDict ? eventDict['height'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n\n    /**\n     * @type {string}\n     */\n    this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n\n    /**\n     * @type {number}\n     */\n    this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n\n    // keep the semantics of preventDefault\n    if (originalEvent.preventDefault) {\n      this.preventDefault = function() {\n        originalEvent.preventDefault();\n      };\n    }\n  }\n\n  if ( Event ) PointerEvent.__proto__ = Event;\n  PointerEvent.prototype = Object.create( Event && Event.prototype );\n  PointerEvent.prototype.constructor = PointerEvent;\n\n  /**\n   * @private\n   * @param {Object.<string, ?>} eventDict The event dictionary.\n   * @return {number} Button indicator.\n   */\n  PointerEvent.prototype.getButtons_ = function getButtons_ (eventDict) {\n    // According to the w3c spec,\n    // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n    // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n    // left mouse button depressed.\n    //\n    // As of now, the only way to distinguish between the two states of\n    // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n    // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n    // no mouse button is held.\n    //\n    // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n    // but initMouseEvent does not expose an argument with which to set\n    // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n    // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n    // of app developers.\n    //\n    // The only way to propagate the correct state of MouseEvent.which and\n    // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n    // is to call initMouseEvent with a buttonArg value of -1.\n    //\n    // This is fixed with DOM Level 4's use of buttons\n    var buttons;\n    if (eventDict.buttons || HAS_BUTTONS) {\n      buttons = eventDict.buttons;\n    } else {\n      switch (eventDict.which) {\n        case 1: buttons = 1; break;\n        case 2: buttons = 4; break;\n        case 3: buttons = 2; break;\n        default: buttons = 0;\n      }\n    }\n    return buttons;\n  };\n\n  /**\n   * @private\n   * @param {Object.<string, ?>} eventDict The event dictionary.\n   * @param {number} buttons Button indicator.\n   * @return {number} The pressure.\n   */\n  PointerEvent.prototype.getPressure_ = function getPressure_ (eventDict, buttons) {\n    // Spec requires that pointers without pressure specified use 0.5 for down\n    // state and 0 for up state.\n    var pressure = 0;\n    if (eventDict.pressure) {\n      pressure = eventDict.pressure;\n    } else {\n      pressure = buttons ? 0.5 : 0;\n    }\n    return pressure;\n  };\n\n  return PointerEvent;\n}(Event));\n\n\n/**\n * Checks if the `buttons` property is supported.\n */\n(function() {\n  try {\n    var ev = new MouseEvent('click', {buttons: 1});\n    HAS_BUTTONS = ev.buttons === 1;\n  } catch (e) {\n    // pass\n  }\n})();\n\nexport default PointerEvent;\n\n//# sourceMappingURL=PointerEvent.js.map","/**\n * @module ol/array\n */\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array.<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  var mid, cmp;\n  var comparator = opt_comparator || numberSafeCompareFunction;\n  var low = 0;\n  var high = haystack.length;\n  var found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array.<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n\n/**\n * @param {Array.<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  var n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    var i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n\n/**\n * @param {Array.<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    var tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n\n/**\n * @param {Array.<VALUE>} arr The array to modify.\n * @param {!Array.<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  var extension = Array.isArray(data) ? data : [data];\n  var length = extension.length;\n  for (var i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n\n/**\n * @param {Array.<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  var i = arr.indexOf(obj);\n  var found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n\n/**\n * @param {Array.<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  var length = arr.length >>> 0;\n  var value;\n\n  for (var i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  var len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (var i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array.<*>} arr The array to sort (modifies original).\n * @param {Function} compareFnc Comparison function.\n */\nexport function stableSort(arr, compareFnc) {\n  var length = arr.length;\n  var tmp = Array(arr.length);\n  var i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n\n/**\n * @param {Array.<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  var index;\n  var found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n\n/**\n * @param {Array.<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  var compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    var res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n\n//# sourceMappingURL=array.js.map","/**\n * @module ol/pointer/TouchSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {remove} from '../array.js';\nimport EventSource from '../pointer/EventSource.js';\nimport {POINTER_ID} from '../pointer/MouseSource.js';\n\n\n/**\n * @type {number}\n */\nvar CLICK_COUNT_TIMEOUT = 200;\n\n/**\n * @type {string}\n */\nvar POINTER_TYPE = 'touch';\n\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @this {module:ol/pointer/TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchstart(inEvent) {\n  this.vacuumTouches_(inEvent);\n  this.setPrimaryTouch_(inEvent.changedTouches[0]);\n  this.dedupSynthMouse_(inEvent);\n  this.clickCount_++;\n  this.processTouches_(inEvent, this.overDown_);\n}\n\n/**\n * Handler for `touchmove`.\n *\n * @this {module:ol/pointer/TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchmove(inEvent) {\n  inEvent.preventDefault();\n  this.processTouches_(inEvent, this.moveOverOut_);\n}\n\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {module:ol/pointer/TouchSource}\n * @param {TouchEvent} inEvent The event.\n */\nfunction touchend(inEvent) {\n  this.dedupSynthMouse_(inEvent);\n  this.processTouches_(inEvent, this.upOut_);\n}\n\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {module:ol/pointer/TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchcancel(inEvent) {\n  this.processTouches_(inEvent, this.cancelOut_);\n}\n\n\nvar TouchSource = (function (EventSource) {\n  function TouchSource(dispatcher, mouseSource) {\n    var mapping = {\n      'touchstart': touchstart,\n      'touchmove': touchmove,\n      'touchend': touchend,\n      'touchcancel': touchcancel\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object.<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {module:ol/pointer/MouseSource}\n     */\n    this.mouseSource = mouseSource;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.firstTouchId_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clickCount_ = 0;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.resetId_ = undefined;\n\n    /**\n     * Mouse event timeout: This should be long enough to\n     * ignore compat mouse events made by touch.\n     * @private\n     * @type {number}\n     */\n    this.dedupTimeout_ = 2500;\n  }\n\n  if ( EventSource ) TouchSource.__proto__ = EventSource;\n  TouchSource.prototype = Object.create( EventSource && EventSource.prototype );\n  TouchSource.prototype.constructor = TouchSource;\n\n  /**\n   * @private\n   * @param {Touch} inTouch The in touch.\n   * @return {boolean} True, if this is the primary touch.\n   */\n  TouchSource.prototype.isPrimaryTouch_ = function isPrimaryTouch_ (inTouch) {\n    return this.firstTouchId_ === inTouch.identifier;\n  };\n\n  /**\n   * Set primary touch if there are no pointers, or the only pointer is the mouse.\n   * @param {Touch} inTouch The in touch.\n   * @private\n   */\n  TouchSource.prototype.setPrimaryTouch_ = function setPrimaryTouch_ (inTouch) {\n    var count = Object.keys(this.pointerMap).length;\n    if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n      this.firstTouchId_ = inTouch.identifier;\n      this.cancelResetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.removePrimaryPointer_ = function removePrimaryPointer_ (inPointer) {\n    if (inPointer.isPrimary) {\n      this.firstTouchId_ = undefined;\n      this.resetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCount_ = function resetClickCount_ () {\n    this.resetId_ = setTimeout(\n      this.resetClickCountHandler_.bind(this),\n      CLICK_COUNT_TIMEOUT);\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCountHandler_ = function resetClickCountHandler_ () {\n    this.clickCount_ = 0;\n    this.resetId_ = undefined;\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.cancelResetClickCount_ = function cancelResetClickCount_ () {\n    if (this.resetId_ !== undefined) {\n      clearTimeout(this.resetId_);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent Browser event\n   * @param {Touch} inTouch Touch event\n   * @return {PointerEvent} A pointer object.\n   */\n  TouchSource.prototype.touchToPointer_ = function touchToPointer_ (browserEvent, inTouch) {\n    var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n    // Spec specifies that pointerId 1 is reserved for Mouse.\n    // Touch identifiers can start at 0.\n    // Add 2 to the touch identifier for compatibility.\n    e.pointerId = inTouch.identifier + 2;\n    // TODO: check if this is necessary?\n    //e.target = findTarget(e);\n    e.bubbles = true;\n    e.cancelable = true;\n    e.detail = this.clickCount_;\n    e.button = 0;\n    e.buttons = 1;\n    e.width = inTouch.webkitRadiusX || inTouch.radiusX || 0;\n    e.height = inTouch.webkitRadiusY || inTouch.radiusY || 0;\n    e.pressure = inTouch.webkitForce || inTouch.force || 0.5;\n    e.isPrimary = this.isPrimaryTouch_(inTouch);\n    e.pointerType = POINTER_TYPE;\n\n    // make sure that the properties that are different for\n    // each `Touch` object are not copied from the BrowserEvent object\n    e.clientX = inTouch.clientX;\n    e.clientY = inTouch.clientY;\n    e.screenX = inTouch.screenX;\n    e.screenY = inTouch.screenY;\n\n    return e;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} inEvent Touch event\n   * @param {function(TouchEvent, PointerEvent)} inFunction In function.\n   */\n  TouchSource.prototype.processTouches_ = function processTouches_ (inEvent, inFunction) {\n    var this$1 = this;\n\n    var touches = Array.prototype.slice.call(inEvent.changedTouches);\n    var count = touches.length;\n    function preventDefault() {\n      inEvent.preventDefault();\n    }\n    for (var i = 0; i < count; ++i) {\n      var pointer = this$1.touchToPointer_(inEvent, touches[i]);\n      // forward touch preventDefaults\n      pointer.preventDefault = preventDefault;\n      inFunction.call(this$1, inEvent, pointer);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchList} touchList The touch list.\n   * @param {number} searchId Search identifier.\n   * @return {boolean} True, if the `Touch` with the given id is in the list.\n   */\n  TouchSource.prototype.findTouch_ = function findTouch_ (touchList, searchId) {\n    var l = touchList.length;\n    for (var i = 0; i < l; i++) {\n      var touch = touchList[i];\n      if (touch.identifier === searchId) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * In some instances, a touchstart can happen without a touchend. This\n   * leaves the pointermap in a broken state.\n   * Therefore, on every touchstart, we remove the touches that did not fire a\n   * touchend event.\n   * To keep state globally consistent, we fire a pointercancel for\n   * this \"abandoned\" touch\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.vacuumTouches_ = function vacuumTouches_ (inEvent) {\n    var this$1 = this;\n\n    var touchList = inEvent.touches;\n    // pointerMap.getCount() should be < touchList.length here,\n    // as the touchstart has not been processed yet.\n    var keys = Object.keys(this.pointerMap);\n    var count = keys.length;\n    if (count >= touchList.length) {\n      var d = [];\n      for (var i = 0; i < count; ++i) {\n        var key = keys[i];\n        var value = this$1.pointerMap[key];\n        // Never remove pointerId == 1, which is mouse.\n        // Touch identifiers are 2 smaller than their pointerId, which is the\n        // index in pointermap.\n        if (key != POINTER_ID && !this$1.findTouch_(touchList, key - 2)) {\n          d.push(value.out);\n        }\n      }\n      for (var i$1 = 0; i$1 < d.length; ++i$1) {\n        this$1.cancelOut_(inEvent, d[i$1]);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.overDown_ = function overDown_ (browserEvent, inPointer) {\n    this.pointerMap[inPointer.pointerId] = {\n      target: inPointer.target,\n      out: inPointer,\n      outTarget: inPointer.target\n    };\n    this.dispatcher.over(inPointer, browserEvent);\n    this.dispatcher.enter(inPointer, browserEvent);\n    this.dispatcher.down(inPointer, browserEvent);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.moveOverOut_ = function moveOverOut_ (browserEvent, inPointer) {\n    var event = inPointer;\n    var pointer = this.pointerMap[event.pointerId];\n    // a finger drifted off the screen, ignore it\n    if (!pointer) {\n      return;\n    }\n    var outEvent = pointer.out;\n    var outTarget = pointer.outTarget;\n    this.dispatcher.move(event, browserEvent);\n    if (outEvent && outTarget !== event.target) {\n      outEvent.relatedTarget = event.target;\n      event.relatedTarget = outTarget;\n      // recover from retargeting by shadow\n      outEvent.target = outTarget;\n      if (event.target) {\n        this.dispatcher.leaveOut(outEvent, browserEvent);\n        this.dispatcher.enterOver(event, browserEvent);\n      } else {\n        // clean up case when finger leaves the screen\n        event.target = outTarget;\n        event.relatedTarget = null;\n        this.cancelOut_(browserEvent, event);\n      }\n    }\n    pointer.out = event;\n    pointer.outTarget = event.target;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent An event.\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.upOut_ = function upOut_ (browserEvent, inPointer) {\n    this.dispatcher.up(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.cancelOut_ = function cancelOut_ (browserEvent, inPointer) {\n    this.dispatcher.cancel(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.cleanUpPointer_ = function cleanUpPointer_ (inPointer) {\n    delete this.pointerMap[inPointer.pointerId];\n    this.removePrimaryPointer_(inPointer);\n  };\n\n  /**\n   * Prevent synth mouse events from creating pointer events.\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.dedupSynthMouse_ = function dedupSynthMouse_ (inEvent) {\n    var lts = this.mouseSource.lastTouches;\n    var t = inEvent.changedTouches[0];\n    // only the primary finger will synth mouse events\n    if (this.isPrimaryTouch_(t)) {\n      // remember x/y of last touch\n      var lt = [t.clientX, t.clientY];\n      lts.push(lt);\n\n      setTimeout(function() {\n        // remove touch after timeout\n        remove(lts, lt);\n      }, this.dedupTimeout_);\n    }\n  };\n\n  return TouchSource;\n}(EventSource));\n\nexport default TouchSource;\n\n//# sourceMappingURL=TouchSource.js.map","/**\n * @module ol/pointer/PointerEventHandler\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {listen, unlisten} from '../events.js';\nimport EventTarget from '../events/EventTarget.js';\nimport {POINTER, MSPOINTER, TOUCH} from '../has.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport MouseSource from '../pointer/MouseSource.js';\nimport MsSource from '../pointer/MsSource.js';\nimport NativeSource from '../pointer/NativeSource.js';\nimport PointerEvent from '../pointer/PointerEvent.js';\nimport TouchSource from '../pointer/TouchSource.js';\n\n\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array.<Array>}\n */\nvar CLONE_PROPS = [\n  // MouseEvent\n  ['bubbles', false],\n  ['cancelable', false],\n  ['view', null],\n  ['detail', null],\n  ['screenX', 0],\n  ['screenY', 0],\n  ['clientX', 0],\n  ['clientY', 0],\n  ['ctrlKey', false],\n  ['altKey', false],\n  ['shiftKey', false],\n  ['metaKey', false],\n  ['button', 0],\n  ['relatedTarget', null],\n  // DOM Level 3\n  ['buttons', 0],\n  // PointerEvent\n  ['pointerId', 0],\n  ['width', 0],\n  ['height', 0],\n  ['pressure', 0],\n  ['tiltX', 0],\n  ['tiltY', 0],\n  ['pointerType', ''],\n  ['hwTimestamp', 0],\n  ['isPrimary', false],\n  // event instance\n  ['type', ''],\n  ['target', null],\n  ['currentTarget', null],\n  ['which', 0]\n];\n\n\nvar PointerEventHandler = (function (EventTarget) {\n  function PointerEventHandler(element) {\n    EventTarget.call(this);\n\n    /**\n     * @const\n     * @private\n     * @type {Element|HTMLDocument}\n     */\n    this.element_ = element;\n\n    /**\n     * @const\n     * @type {!Object.<string, Event|Object>}\n     */\n    this.pointerMap = {};\n\n    /**\n     * @type {Object.<string, function(Event)>}\n     * @private\n     */\n    this.eventMap_ = {};\n\n    /**\n     * @type {Array.<module:ol/pointer/EventSource>}\n     * @private\n     */\n    this.eventSourceList_ = [];\n\n    this.registerSources();\n  }\n\n  if ( EventTarget ) PointerEventHandler.__proto__ = EventTarget;\n  PointerEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  PointerEventHandler.prototype.constructor = PointerEventHandler;\n\n  /**\n   * Set up the event sources (mouse, touch and native pointers)\n   * that generate pointer events.\n   */\n  PointerEventHandler.prototype.registerSources = function registerSources () {\n    if (POINTER) {\n      this.registerSource('native', new NativeSource(this));\n    } else if (MSPOINTER) {\n      this.registerSource('ms', new MsSource(this));\n    } else {\n      var mouseSource = new MouseSource(this);\n      this.registerSource('mouse', mouseSource);\n\n      if (TOUCH) {\n        this.registerSource('touch', new TouchSource(this, mouseSource));\n      }\n    }\n\n    // register events on the viewport element\n    this.register_();\n  };\n\n  /**\n   * Add a new event source that will generate pointer events.\n   *\n   * @param {string} name A name for the event source\n   * @param {module:ol/pointer/EventSource} source The source event.\n   */\n  PointerEventHandler.prototype.registerSource = function registerSource (name, source) {\n    var s = source;\n    var newEvents = s.getEvents();\n\n    if (newEvents) {\n      newEvents.forEach(function(e) {\n        var handler = s.getHandlerForEvent(e);\n\n        if (handler) {\n          this.eventMap_[e] = handler.bind(s);\n        }\n      }.bind(this));\n      this.eventSourceList_.push(s);\n    }\n  };\n\n  /**\n   * Set up the events for all registered event sources.\n   * @private\n   */\n  PointerEventHandler.prototype.register_ = function register_ () {\n    var this$1 = this;\n\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this$1.eventSourceList_[i];\n      this$1.addEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Remove all registered events.\n   * @private\n   */\n  PointerEventHandler.prototype.unregister_ = function unregister_ () {\n    var this$1 = this;\n\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this$1.eventSourceList_[i];\n      this$1.removeEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Calls the right handler for a new event.\n   * @private\n   * @param {Event} inEvent Browser event.\n   */\n  PointerEventHandler.prototype.eventHandler_ = function eventHandler_ (inEvent) {\n    var type = inEvent.type;\n    var handler = this.eventMap_[type];\n    if (handler) {\n      handler(inEvent);\n    }\n  };\n\n  /**\n   * Setup listeners for the given events.\n   * @private\n   * @param {Array.<string>} events List of events.\n   */\n  PointerEventHandler.prototype.addEvents_ = function addEvents_ (events) {\n    events.forEach(function(eventName) {\n      listen(this.element_, eventName, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Unregister listeners for the given events.\n   * @private\n   * @param {Array.<string>} events List of events.\n   */\n  PointerEventHandler.prototype.removeEvents_ = function removeEvents_ (events) {\n    events.forEach(function(e) {\n      unlisten(this.element_, e, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Returns a snapshot of inEvent, with writable properties.\n   *\n   * @param {Event} event Browser event.\n   * @param {Event|Touch} inEvent An event that contains\n   *    properties to copy.\n   * @return {Object} An object containing shallow copies of\n   *    `inEvent`'s properties.\n   */\n  PointerEventHandler.prototype.cloneEvent = function cloneEvent (event, inEvent) {\n    var eventCopy = {};\n    for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n      var p = CLONE_PROPS[i][0];\n      eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n    }\n\n    return eventCopy;\n  };\n\n  // EVENTS\n\n\n  /**\n   * Triggers a 'pointerdown' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.down = function down (data, event) {\n    this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n  };\n\n  /**\n   * Triggers a 'pointermove' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.move = function move (data, event) {\n    this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerup' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.up = function up (data, event) {\n    this.fireEvent(PointerEventType.POINTERUP, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerenter' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enter = function enter (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERENTER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerleave' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leave = function leave (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerover' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.over = function over (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROVER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerout' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.out = function out (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROUT, data, event);\n  };\n\n  /**\n   * Triggers a 'pointercancel' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.cancel = function cancel (data, event) {\n    this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n  };\n\n  /**\n   * Triggers a combination of 'pointerout' and 'pointerleave' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leaveOut = function leaveOut (data, event) {\n    this.out(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.leave(data, event);\n    }\n  };\n\n  /**\n   * Triggers a combination of 'pointerover' and 'pointerevents' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enterOver = function enterOver (data, event) {\n    this.over(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.enter(data, event);\n    }\n  };\n\n  /**\n   * @private\n   * @param {Element} container The container element.\n   * @param {Element} contained The contained element.\n   * @return {boolean} Returns true if the container element\n   *   contains the other element.\n   */\n  PointerEventHandler.prototype.contains_ = function contains_ (container, contained) {\n    if (!container || !contained) {\n      return false;\n    }\n    return container.contains(contained);\n  };\n\n  // EVENT CREATION AND TRACKING\n  /**\n   * Creates a new Event of type `inType`, based on the information in\n   * `data`.\n   *\n   * @param {string} inType A string representing the type of event to create.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   * @return {module:ol/pointer/PointerEvent} A PointerEvent of type `inType`.\n   */\n  PointerEventHandler.prototype.makeEvent = function makeEvent (inType, data, event) {\n    return new PointerEvent(inType, event, data);\n  };\n\n  /**\n   * Make and dispatch an event in one call.\n   * @param {string} inType A string representing the type of event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.fireEvent = function fireEvent (inType, data, event) {\n    var e = this.makeEvent(inType, data, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Creates a pointer event from a native pointer event\n   * and dispatches this event.\n   * @param {Event} event A platform event with a target.\n   */\n  PointerEventHandler.prototype.fireNativeEvent = function fireNativeEvent (event) {\n    var e = this.makeEvent(event.type, event, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Wrap a native mouse event into a pointer event.\n   * This proxy method is required for the legacy IE support.\n   * @param {string} eventType The pointer event type.\n   * @param {Event} event The event.\n   * @return {module:ol/pointer/PointerEvent} The wrapped event.\n   */\n  PointerEventHandler.prototype.wrapMouseEvent = function wrapMouseEvent (eventType, event) {\n    var pointerEvent = this.makeEvent(\n      eventType, MouseSource.prepareEvent(event, this), event);\n    return pointerEvent;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PointerEventHandler.prototype.disposeInternal = function disposeInternal () {\n    this.unregister_();\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return PointerEventHandler;\n}(EventTarget));\n\nexport default PointerEventHandler;\n\n//# sourceMappingURL=PointerEventHandler.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport EventTarget from './events/EventTarget.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\n\nvar MapBrowserEventHandler = (function (EventTarget) {\n  function MapBrowserEventHandler(map, moveTolerance) {\n\n    EventTarget.call(this);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {module:ol/PluggableMap}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.clickTimeoutId_ = 0;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array.<module:ol/events~EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance ?\n      moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {module:ol/pointer/PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    var element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object.<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * Event handler which generates pointer events for\n     * the viewport element.\n     *\n     * @type {module:ol/pointer/PointerEventHandler}\n     * @private\n     */\n    this.pointerEventHandler_ = new PointerEventHandler(element);\n\n    /**\n     * Event handler which generates pointer events for\n     * the document (used when dragging).\n     *\n     * @type {module:ol/pointer/PointerEventHandler}\n     * @private\n     */\n    this.documentPointerEventHandler_ = null;\n\n    /**\n     * @type {?module:ol/events~EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_, this);\n\n    /**\n     * @type {?module:ol/events~EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_, this);\n\n  }\n\n  if ( EventTarget ) MapBrowserEventHandler.__proto__ = EventTarget;\n  MapBrowserEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  MapBrowserEventHandler.prototype.constructor = MapBrowserEventHandler;\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.emulateClick_ = function emulateClick_ (pointerEvent) {\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.CLICK, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== 0) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = 0;\n      newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(function() {\n        this.clickTimeoutId_ = 0;\n        var newEvent = new MapBrowserPointerEvent(\n          MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n      }.bind(this), 250);\n    }\n  };\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.updateActivePointers_ = function updateActivePointers_ (pointerEvent) {\n    var event = pointerEvent;\n\n    if (event.type == MapBrowserEventType.POINTERUP ||\n        event.type == MapBrowserEventType.POINTERCANCEL) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  };\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerUp_ = function handlePointerUp_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.stopPropagation() or event.preventDefault().\n    if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n  };\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMouseActionButton_ = function isMouseActionButton_ (pointerEvent) {\n    return pointerEvent.button === 0;\n  };\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerDown_ = function handlePointerDown_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    this.down_ = pointerEvent;\n\n    if (this.dragListenerKeys_.length === 0) {\n      /* Set up a pointer event handler on the `document`,\n       * which is required when the pointer is moved outside\n       * the viewport when dragging.\n       */\n      this.documentPointerEventHandler_ =\n          new PointerEventHandler(document);\n\n      this.dragListenerKeys_.push(\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_, this),\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERUP,\n          this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(this.pointerEventHandler_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_, this)\n      );\n    }\n  };\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerMove_ = function handlePointerMove_ (pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      var newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent,\n        this.dragging_);\n      this.dispatchEvent(newEvent);\n    }\n\n    // Some native android browser triggers mousemove events during small period\n    // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n    // https://code.google.com/p/android/issues/detail?id=19827\n    // ex: Galaxy Tab P3110 + Android 4.1.1\n    pointerEvent.preventDefault();\n  };\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserPointerEvent matches the PointerEvent type.\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.relayEvent_ = function relayEvent_ (pointerEvent) {\n    var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(new MapBrowserPointerEvent(\n      pointerEvent.type, this.map_, pointerEvent, dragging));\n  };\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMoving_ = function isMoving_ (pointerEvent) {\n    return this.dragging_ ||\n        Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n        Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MapBrowserEventHandler.prototype.disposeInternal = function disposeInternal () {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    if (this.documentPointerEventHandler_) {\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n    if (this.pointerEventHandler_) {\n      this.pointerEventHandler_.dispose();\n      this.pointerEventHandler_ = null;\n    }\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return MapBrowserEventHandler;\n}(EventTarget));\n\n\nexport default MapBrowserEventHandler;\n\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend'\n\n};\n\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view'\n};\n\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n  ABORT: 5\n};\n\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = function PriorityQueue(priorityFunction, keyFunction) {\n\n  /**\n   * @type {function(T): number}\n   * @private\n   */\n  this.priorityFunction_ = priorityFunction;\n\n  /**\n   * @type {function(T): string}\n   * @private\n   */\n  this.keyFunction_ = keyFunction;\n\n  /**\n   * @type {Array.<T>}\n   * @private\n   */\n  this.elements_ = [];\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.priorities_ = [];\n\n  /**\n   * @type {!Object.<string, boolean>}\n   * @private\n   */\n  this.queuedElements_ = {};\n\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.clear = function clear$1 () {\n  this.elements_.length = 0;\n  this.priorities_.length = 0;\n  clear(this.queuedElements_);\n};\n\n\n/**\n * Remove and return the highest-priority element. O(log N).\n * @return {T} Element.\n */\nPriorityQueue.prototype.dequeue = function dequeue () {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[0];\n  if (elements.length == 1) {\n    elements.length = 0;\n    priorities.length = 0;\n  } else {\n    elements[0] = elements.pop();\n    priorities[0] = priorities.pop();\n    this.siftUp_(0);\n  }\n  var elementKey = this.keyFunction_(element);\n  delete this.queuedElements_[elementKey];\n  return element;\n};\n\n\n/**\n * Enqueue an element. O(log N).\n * @param {T} element Element.\n * @return {boolean} The element was added to the queue.\n */\nPriorityQueue.prototype.enqueue = function enqueue (element) {\n  assert(!(this.keyFunction_(element) in this.queuedElements_),\n    31); // Tried to enqueue an `element` that was already added to the queue\n  var priority = this.priorityFunction_(element);\n  if (priority != DROP) {\n    this.elements_.push(element);\n    this.priorities_.push(priority);\n    this.queuedElements_[this.keyFunction_(element)] = true;\n    this.siftDown_(0, this.elements_.length - 1);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @return {number} Count.\n */\nPriorityQueue.prototype.getCount = function getCount () {\n  return this.elements_.length;\n};\n\n\n/**\n * Gets the index of the left child of the node at the given index.\n * @param {number} index The index of the node to get the left child for.\n * @return {number} The index of the left child.\n * @private\n */\nPriorityQueue.prototype.getLeftChildIndex_ = function getLeftChildIndex_ (index) {\n  return index * 2 + 1;\n};\n\n\n/**\n * Gets the index of the right child of the node at the given index.\n * @param {number} index The index of the node to get the right child for.\n * @return {number} The index of the right child.\n * @private\n */\nPriorityQueue.prototype.getRightChildIndex_ = function getRightChildIndex_ (index) {\n  return index * 2 + 2;\n};\n\n\n/**\n * Gets the index of the parent of the node at the given index.\n * @param {number} index The index of the node to get the parent for.\n * @return {number} The index of the parent.\n * @private\n */\nPriorityQueue.prototype.getParentIndex_ = function getParentIndex_ (index) {\n  return (index - 1) >> 1;\n};\n\n\n/**\n * Make this a heap. O(N).\n * @private\n */\nPriorityQueue.prototype.heapify_ = function heapify_ () {\n    var this$1 = this;\n\n  var i;\n  for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n    this$1.siftUp_(i);\n  }\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nPriorityQueue.prototype.isEmpty = function isEmpty () {\n  return this.elements_.length === 0;\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Is key queued.\n */\nPriorityQueue.prototype.isKeyQueued = function isKeyQueued (key) {\n  return key in this.queuedElements_;\n};\n\n\n/**\n * @param {T} element Element.\n * @return {boolean} Is queued.\n */\nPriorityQueue.prototype.isQueued = function isQueued (element) {\n  return this.isKeyQueued(this.keyFunction_(element));\n};\n\n\n/**\n * @param {number} index The index of the node to move down.\n * @private\n */\nPriorityQueue.prototype.siftUp_ = function siftUp_ (index) {\n    var this$1 = this;\n\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var count = elements.length;\n  var element = elements[index];\n  var priority = priorities[index];\n  var startIndex = index;\n\n  while (index < (count >> 1)) {\n    var lIndex = this$1.getLeftChildIndex_(index);\n    var rIndex = this$1.getRightChildIndex_(index);\n\n    var smallerChildIndex = rIndex < count &&\n        priorities[rIndex] < priorities[lIndex] ?\n      rIndex : lIndex;\n\n    elements[index] = elements[smallerChildIndex];\n    priorities[index] = priorities[smallerChildIndex];\n    index = smallerChildIndex;\n  }\n\n  elements[index] = element;\n  priorities[index] = priority;\n  this.siftDown_(startIndex, index);\n};\n\n\n/**\n * @param {number} startIndex The index of the root.\n * @param {number} index The index of the node to move up.\n * @private\n */\nPriorityQueue.prototype.siftDown_ = function siftDown_ (startIndex, index) {\n    var this$1 = this;\n\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[index];\n  var priority = priorities[index];\n\n  while (index > startIndex) {\n    var parentIndex = this$1.getParentIndex_(index);\n    if (priorities[parentIndex] > priority) {\n      elements[index] = elements[parentIndex];\n      priorities[index] = priorities[parentIndex];\n      index = parentIndex;\n    } else {\n      break;\n    }\n  }\n  elements[index] = element;\n  priorities[index] = priority;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.reprioritize = function reprioritize () {\n    var this$1 = this;\n\n  var priorityFunction = this.priorityFunction_;\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var index = 0;\n  var n = elements.length;\n  var element, i, priority;\n  for (i = 0; i < n; ++i) {\n    element = elements[i];\n    priority = priorityFunction(element);\n    if (priority == DROP) {\n      delete this$1.queuedElements_[this$1.keyFunction_(element)];\n    } else {\n      priorities[index] = priority;\n      elements[index++] = element;\n    }\n  }\n  elements.length = index;\n  priorities.length = index;\n  this.heapify_();\n};\n\n\nexport default PriorityQueue;\n\n//# sourceMappingURL=PriorityQueue.js.map","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport {listen, unlisten} from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n\n\n/**\n * @typedef {function(module:ol/Tile, string, module:ol/coordinate~Coordinate, number): number} PriorityFunction\n */\n\n\nvar TileQueue = (function (PriorityQueue) {\n  function TileQueue(tilePriorityFunction, tileChangeCallback) {\n\n    PriorityQueue.call(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      this, function(element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function(element) {\n        return (/** @type {module:ol/Tile} */ (element[0]).getKey());\n      });\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object.<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n\n  }\n\n  if ( PriorityQueue ) TileQueue.__proto__ = PriorityQueue;\n  TileQueue.prototype = Object.create( PriorityQueue && PriorityQueue.prototype );\n  TileQueue.prototype.constructor = TileQueue;\n\n  /**\n   * @inheritDoc\n   */\n  TileQueue.prototype.enqueue = function enqueue (element) {\n    var added = PriorityQueue.prototype.enqueue.call(this, element);\n    if (added) {\n      var tile = element[0];\n      listen(tile, EventType.CHANGE, this.handleTileChange, this);\n    }\n    return added;\n  };\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  TileQueue.prototype.getTilesLoading = function getTilesLoading () {\n    return this.tilesLoading_;\n  };\n\n  /**\n   * @param {module:ol/events/Event} event Event.\n   * @protected\n   */\n  TileQueue.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {module:ol/Tile} */ (event.target);\n    var state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR ||\n        state === TileState.EMPTY || state === TileState.ABORT) {\n      unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n      var tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  };\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  TileQueue.prototype.loadMoreTiles = function loadMoreTiles (maxTotalLoading, maxNewLoads) {\n    var this$1 = this;\n\n    var newLoads = 0;\n    var abortedTiles = false;\n    var state, tile, tileKey;\n    while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n           this.getCount() > 0) {\n      tile = /** @type {module:ol/Tile} */ (this$1.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.ABORT) {\n        abortedTiles = true;\n      } else if (state === TileState.IDLE && !(tileKey in this$1.tilesLoadingKeys_)) {\n        this$1.tilesLoadingKeys_[tileKey] = true;\n        ++this$1.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n    if (newLoads === 0 && abortedTiles) {\n      // Do not stop the render loop when all wanted tiles were aborted due to\n      // a small, saturated tile cache.\n      this.tileChangeCallback_();\n    }\n  };\n\n  return TileQueue;\n}(PriorityQueue));\n\n\nexport default TileQueue;\n\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((module:ol/coordinate~Coordinate|undefined)): (module:ol/coordinate~Coordinate|undefined)} Type\n */\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/centerconstraint~Type} The constraint.\n */\nexport function createExtent(extent) {\n  return (\n    /**\n     * @param {module:ol/coordinate~Coordinate=} center Center.\n     * @return {module:ol/coordinate~Coordinate|undefined} Center.\n     */\n    function(center) {\n      if (center) {\n        return [\n          clamp(center[0], extent[0], extent[2]),\n          clamp(center[1], extent[1], extent[3])\n        ];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate=} center Center.\n * @return {module:ol/coordinate~Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number, number): (number|undefined)} Type\n */\n\n\n/**\n * @param {Array.<number>} resolutions Resolutions.\n * @return {module:ol/resolutionconstraint~Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var z = linearFindNearest(resolutions, resolution, direction);\n        z = clamp(z + delta, 0, resolutions.length - 1);\n        var index = Math.floor(z);\n        if (z != index && index < resolutions.length - 1) {\n          var power = resolutions[index] / resolutions[index + 1];\n          return resolutions[index] / Math.pow(power, z - index);\n        } else {\n          return resolutions[index];\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_maxLevel Maximum level.\n * @return {module:ol/resolutionconstraint~Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_maxLevel) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var offset = -direction / 2 + 0.5;\n        var oldLevel = Math.floor(\n          Math.log(maxResolution / resolution) / Math.log(power) + offset);\n        var newLevel = Math.max(oldLevel + delta, 0);\n        if (opt_maxLevel !== undefined) {\n          newLevel = Math.min(newLevel, opt_maxLevel);\n        }\n        return maxResolution / Math.pow(power, newLevel);\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number): (number|undefined)} Type\n */\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation, delta) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation, delta) {\n  if (rotation !== undefined) {\n    return rotation + delta;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number} n N.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  var theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    });\n}\n\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  var tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        if (Math.abs(rotation + delta) <= tolerance) {\n          return 0;\n        } else {\n          return rotation + delta;\n        }\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1\n};\n\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation'\n};\n\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  var numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  var decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width ? numberString : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n  var s1 = ('' + v1).split('.');\n  var s2 = ('' + v2).split('.');\n\n  for (var i = 0; i < Math.max(s1.length, s2.length); i++) {\n    var n1 = parseInt(s1[i] || '0', 10);\n    var n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n\n//# sourceMappingURL=string.js.map","/**\n * @module ol/coordinate\n */\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array.<number>} Coordinate\n * @api\n */\n\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((module:ol/coordinate~Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/coordinate~Coordinate} delta Delta.\n * @return {module:ol/coordinate~Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += delta[0];\n  coordinate[1] += delta[1];\n  return coordinate;\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @param {module:ol/geom/Circle} circle The circle.\n * @return {module:ol/coordinate~Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  var r = circle.getRadius();\n  var center = circle.getCenter();\n  var x0 = center[0];\n  var y0 = center[1];\n  var x1 = coordinate[0];\n  var y1 = coordinate[1];\n\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  var d = Math.sqrt(dx * dx + dy * dy);\n\n  var x = x0 + r * dx / d;\n  var y = y0 + r * dy / d;\n\n  return [x, y];\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @param {Array.<module:ol/coordinate~Coordinate>} segment The two coordinates\n * of the segment.\n * @return {module:ol/coordinate~Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  var x0 = coordinate[0];\n  var y0 = coordinate[1];\n  var start = segment[0];\n  var end = segment[1];\n  var x1 = start[0];\n  var y1 = start[1];\n  var x2 = end[0];\n  var y2 = end[1];\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  var along = (dx === 0 && dy === 0) ? 0 :\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n  var x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {module:ol/coordinate~Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {module:ol/coordinate~CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function(coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  var x = Math.abs(3600 * normalizedDegrees);\n  var dflPrecision = opt_fractionDigits || 0;\n  var precision = Math.pow(10, dflPrecision);\n\n  var deg = Math.floor(x / 3600);\n  var min = Math.floor((x - deg * 3600) / 60);\n  var sec = x - (deg * 3600) - (min * 60);\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) + '\\u2033' +\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  var equals = true;\n  for (var i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  var cosAngle = Math.cos(angle);\n  var sinAngle = Math.sin(angle);\n  var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coord1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  var dx = coord1[0] - coord2[0];\n  var dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coord1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate of the point.\n * @param {Array.<module:ol/coordinate~Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate,\n    closestOnSegment(coordinate, segment));\n}\n\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/easing\n */\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {FALSE} from '../functions.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport {rotate, scale, translate, transform2D} from '../geom/flat/transform.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = (function (Geometry) {\n  function SimpleGeometry() {\n\n    Geometry.call(this);\n\n    /**\n     * @protected\n     * @type {module:ol/geom/GeometryLayout}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array.<number>}\n     */\n    this.flatCoordinates = null;\n\n  }\n\n  if ( Geometry ) SimpleGeometry.__proto__ = Geometry;\n  SimpleGeometry.prototype = Object.create( Geometry && Geometry.prototype );\n  SimpleGeometry.prototype.constructor = SimpleGeometry;\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\n      0, this.flatCoordinates.length, this.stride, extent);\n  };\n\n  /**\n   * @abstract\n   * @return {Array} Coordinates.\n   */\n  SimpleGeometry.prototype.getCoordinates = function getCoordinates () {};\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {module:ol/coordinate~Coordinate} First coordinate.\n   * @api\n   */\n  SimpleGeometry.prototype.getFirstCoordinate = function getFirstCoordinate () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @return {Array.<number>} Flat coordinates.\n   */\n  SimpleGeometry.prototype.getFlatCoordinates = function getFlatCoordinates () {\n    return this.flatCoordinates;\n  };\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {module:ol/coordinate~Coordinate} Last point.\n   * @api\n   */\n  SimpleGeometry.prototype.getLastCoordinate = function getLastCoordinate () {\n    return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n  };\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout~GeometryLayout layout} of the geometry.\n   * @return {module:ol/geom/GeometryLayout} Layout.\n   * @api\n   */\n  SimpleGeometry.prototype.getLayout = function getLayout () {\n    return this.layout;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    var key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometry =\n          this.getSimplifiedGeometryInternal(squaredTolerance);\n      var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n      if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n        this.simplifiedGeometryCache[key] = simplifiedGeometry;\n        return simplifiedGeometry;\n      } else {\n        // Simplification did not actually remove any coordinates.  We now know\n        // that any calls to getSimplifiedGeometry with a squaredTolerance less\n        // than or equal to the current squaredTolerance will also not have any\n        // effect.  This allows us to short circuit simplification (saving CPU\n        // cycles) and prevents the cache of simplified geometries from filling\n        // up with useless identical copies of this geometry (saving memory).\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {module:ol/geom/SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    return this;\n  };\n\n  /**\n   * @return {number} Stride.\n   */\n  SimpleGeometry.prototype.getStride = function getStride () {\n    return this.stride;\n  };\n\n  /**\n   * @param {module:ol/geom/GeometryLayout} layout Layout.\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n    */\n  SimpleGeometry.prototype.setFlatCoordinates = function setFlatCoordinates (layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  };\n\n  /**\n   * @abstract\n   * @param {!Array} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   */\n  SimpleGeometry.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {};\n\n  /**\n   * @param {module:ol/geom/GeometryLayout|undefined} layout Layout.\n   * @param {Array} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  SimpleGeometry.prototype.setLayout = function setLayout (layout, coordinates, nesting) {\n    var this$1 = this;\n\n    /** @type {number} */\n    var stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (var i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this$1.layout = GeometryLayout.XY;\n          this$1.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.applyTransform = function applyTransform (transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.rotate = function rotate$1 (angle, anchor) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      rotate(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, angle, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.scale = function scale$1 (sx, opt_sy, opt_anchor) {\n    var sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    var anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      scale(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, sx, sy, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.translate = function translate$1 (deltaX, deltaY) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      translate(\n        flatCoordinates, 0, flatCoordinates.length, stride,\n        deltaX, deltaY, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  return SimpleGeometry;\n}(Geometry));\n\n\n/**\n * @param {number} stride Stride.\n * @return {module:ol/geom/GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  var layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return (\n    /** @type {module:ol/geom/GeometryLayout} */ (layout)\n  );\n}\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  var stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n\n/**\n * @inheritDoc\n */\nSimpleGeometry.prototype.containsXY = FALSE;\n\n\n/**\n * @param {module:ol/geom/SimpleGeometry} simpleGeometry Simple geometry.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  var flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    var stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      transform, opt_dest);\n  }\n}\n\nexport default SimpleGeometry;\n\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/area\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  var twiceArea = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  var area = 0;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var area = 0;\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n\n//# sourceMappingURL=area.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  var x1 = flatCoordinates[offset1];\n  var y1 = flatCoordinates[offset1 + 1];\n  var dx = flatCoordinates[offset2] - x1;\n  var dy = flatCoordinates[offset2 + 1] - y1;\n  var offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (var i$1 = 0; i$1 < stride; ++i$1) {\n    closestPoint[i$1] = flatCoordinates[offset + i$1];\n  }\n  closestPoint.length = stride;\n}\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    max = maxSquaredDelta(\n      flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    max = arrayMaxSquaredDelta(\n      flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  var i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  var index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n        ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates, offset, end, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates, offset, ends, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    var coordinate = coordinates[i];\n    for (var j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array.<number>=} opt_ends Ends.\n * @return {Array.<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  var ends = opt_ends ? opt_ends : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n    var end = deflateCoordinates(\n      flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array.<Array.<number>>=} opt_endss Endss.\n * @return {Array.<Array.<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  var endss = opt_endss ? opt_endss : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    var ends = deflateCoordinatesArray(\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/inflate\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array.<module:ol/coordinate~Coordinate>=} opt_coordinates Coordinates.\n * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array.<Array.<module:ol/coordinate~Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  var i = 0;\n  for (var j = 0, jj = ends.length; j < jj; ++j) {\n    var end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  var i = 0;\n  for (var j = 0, jj = endss.length; j < jj; ++j) {\n    var ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array.<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array.<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end,\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(flatCoordinates, offset, end,\n      stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates, offset, end, stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  var n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array.<number>} */\n  var markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array.<number>} */\n  var stack = [offset, end - stride];\n  var index = 0;\n  while (stack.length > 0) {\n    var last = stack.pop();\n    var first = stack.pop();\n    var maxSquaredDistance = 0;\n    var x1 = flatCoordinates[first];\n    var y1 = flatCoordinates[first + 1];\n    var x2 = flatCoordinates[last];\n    var y2 = flatCoordinates[last + 1];\n    for (var i = first + stride; i < last; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      var squaredDistance = squaredSegmentDistance(\n        x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (var i$1 = 0; i$1 < n; ++i$1) {\n    if (markers[i$1]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset,\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n  simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<Array.<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates, offset, endss, stride, squaredTolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates, offset, ends, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  var x2 = x1;\n  var y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride,\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  var x1 = snap(flatCoordinates[offset], tolerance);\n  var y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  var x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    var x3 = snap(flatCoordinates[offset], tolerance);\n    var y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    var dx1 = x2 - x1;\n    var dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    var dx2 = x3 - x1;\n    var dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates, offset, ends, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates, offset, end, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<Array.<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates, offset, endss, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates, offset, ends, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {linearRing as linearRingArea} from '../geom/flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {douglasPeucker} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = (function (SimpleGeometry) {\n  function LinearRing(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n    } else {\n      this.setCoordinates(coordinates, opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LinearRing.__proto__ = SimpleGeometry;\n  LinearRing.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LinearRing.prototype.constructor = LinearRing;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/LinearRing} Clone.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.clone = function clone () {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  LinearRing.prototype.getArea = function getArea () {\n    return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LinearRing.prototype.getType = function getType () {\n    return GeometryType.LINEAR_RING;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.intersectsExtent = function intersectsExtent (extent) {};\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LinearRing;\n}(SimpleGeometry));\n\n\nexport default LinearRing;\n\n//# sourceMappingURL=LinearRing.js.map","/**\n * @module ol/geom/Point\n */\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinate} from '../geom/flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = (function (SimpleGeometry) {\n  function Point(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  if ( SimpleGeometry ) Point.__proto__ = SimpleGeometry;\n  Point.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Point.prototype.constructor = Point;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/Point} Clone.\n   * @override\n   * @api\n   */\n  Point.prototype.clone = function clone () {\n    var point = new Point(this.flatCoordinates.slice(), this.layout);\n    return point;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n    if (squaredDistance < minSquaredDistance) {\n      var stride = this.stride;\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * Return the coordinate of the point.\n   * @return {module:ol/coordinate~Coordinate} Coordinates.\n   * @override\n   * @api\n   */\n  Point.prototype.getCoordinates = function getCoordinates () {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.getType = function getType () {\n    return GeometryType.POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return Point;\n}(SimpleGeometry));\n\n\nexport default Point;\n\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  var outside = forEachCorner(extent,\n    /**\n     * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function(coordinate) {\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n  return !outside;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  var wn = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {linearRingsContainsXY} from '../flat/contains.js';\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array.<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset,\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  var i, ii, x, x1, x2, y1, y2;\n  var y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array.<number>} */\n  var intersections = [];\n  // Calculate intersections with the horizontal line\n  for (var r = 0, rr = ends.length; r < rr; ++r) {\n    var end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  var pointX = NaN;\n  var maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    var segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array.<number>} flatCenters Flat centers.\n * @return {Array.<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  var interiorPoints = [];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/segments\n */\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, module:ol/coordinate~Coordinate, module:ol/coordinate~Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback, opt_this) {\n  var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  var point2 = [];\n  var ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\nimport {linearRingContainsXY, linearRingContainsExtent} from '../flat/contains.js';\nimport {forEach as forEachSegment} from '../flat/segments.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  var coordinatesExtent = extendFlatCoordinates(\n    createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(flatCoordinates, offset, end, stride,\n    /**\n     * @param {module:ol/coordinate~Coordinate} point1 Start point.\n     * @param {module:ol/coordinate~Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function(point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    });\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(\n      flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(\n    flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(\n    flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (intersectsLinearRingArray(\n      flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/reverse\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (var i = 0; i < stride; ++i) {\n      var tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from '../flat/reverse.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  var edge = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingIsOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    if (!linearRingIsOriented(\n      flatCoordinates, offset, endss[i], stride, opt_right)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    var reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n}\n\n//# sourceMappingURL=orient.js.map","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport {linearRings as linearRingsArea} from '../geom/flat/area.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {linearRingsContainsXY} from '../geom/flat/contains.js';\nimport {deflateCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateCoordinatesArray} from '../geom/flat/inflate.js';\nimport {getInteriorPointOfArray} from '../geom/flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from '../geom/flat/intersectsextent.js';\nimport {linearRingIsOriented, orientLinearRings} from '../geom/flat/orient.js';\nimport {quantizeArray} from '../geom/flat/simplify.js';\nimport {modulo} from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = (function (SimpleGeometry) {\n  function Polygon(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array.<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(coordinates, opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) Polygon.__proto__ = SimpleGeometry;\n  Polygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Polygon.prototype.constructor = Polygon;\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {module:ol/geom/LinearRing} linearRing Linear ring.\n   * @api\n   */\n  Polygon.prototype.appendLinearRing = function appendLinearRing (linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/Polygon} Clone.\n   * @override\n   * @api\n   */\n  Polygon.prototype.clone = function clone () {\n    return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  Polygon.prototype.getArea = function getArea () {\n    return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array.<Array.<module:ol/coordinate~Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  Polygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(\n        flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(\n      flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array.<number>} Ends.\n   */\n  Polygon.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * @return {Array.<number>} Interior point.\n   */\n  Polygon.prototype.getFlatInteriorPoint = function getFlatInteriorPoint () {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      var flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n        flatCenter, 0);\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  };\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {module:ol/geom/Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  Polygon.prototype.getInteriorPoint = function getInteriorPoint () {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  };\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRingCount = function getLinearRingCount () {\n    return this.ends_.length;\n  };\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {module:ol/geom/LinearRing} Linear ring.\n   * @api\n   */\n  Polygon.prototype.getLinearRing = function getLinearRing (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array.<module:ol/geom/LinearRing>} Linear rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRings = function getLinearRings () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var linearRings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  };\n\n  /**\n   * @return {Array.<number>} Oriented flat coordinates.\n   */\n  Polygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingIsOriented(\n        flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRings(\n              this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.getType = function getType () {\n    return GeometryType.POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array.<Array.<module:ol/coordinate~Coordinate>>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  Polygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return Polygon;\n}(SimpleGeometry));\n\n\nexport default Polygon;\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {module:ol/coordinate~Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {module:ol/geom/Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  var n = opt_n ? opt_n : 32;\n  /** @type {Array.<number>} */\n  var flatCoordinates = [];\n  for (var i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {module:ol/extent~Extent} extent The extent.\n * @return {module:ol/geom/Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {module:ol/geom/Circle} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {module:ol/geom/Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  var sides = opt_sides ? opt_sides : 32;\n  var stride = circle.getStride();\n  var layout = circle.getLayout();\n  var center = circle.getCenter();\n  var arrayLength = stride * (sides + 1);\n  var flatCoordinates = new Array(arrayLength);\n  for (var i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (var j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  var ends = [flatCoordinates.length];\n  var polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {module:ol/geom/Polygon} polygon Polygon geometry.\n * @param {module:ol/coordinate~Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  var flatCoordinates = polygon.getFlatCoordinates();\n  var stride = polygon.getStride();\n  var sides = flatCoordinates.length / stride - 1;\n  var startAngle = opt_angle ? opt_angle : 0;\n  for (var i = 0; i <= sides; ++i) {\n    var offset = i * stride;\n    var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.changed();\n}\n\n//# sourceMappingURL=Polygon.js.map","/**\n * @module ol/View\n */\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {getUid} from './util.js';\nimport {UNDEFINED} from './functions.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport {createSnapToResolutions, createSnapToPower} from './resolutionconstraint.js';\nimport {createSnapToZero, createSnapToN, none as rotationNone, disable} from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual} from './coordinate.js';\nimport {inAndOut} from './easing.js';\nimport {getForViewAndSize, getCenter, getHeight, getWidth, isEmpty} from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport SimpleGeometry from './geom/SimpleGeometry.js';\nimport {clamp, modulo} from './math.js';\nimport {assign} from './obj.js';\nimport {createProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\n\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {module:ol/coordinate~Coordinate} [sourceCenter]\n * @property {module:ol/coordinate~Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {module:ol/coordinate~Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n\n\n/**\n * @typedef {Object} Constraints\n * @property {module:ol/centerconstraint~Type} center\n * @property {module:ol/resolutionconstraint~Type} resolution\n * @property {module:ol/rotationconstraint~Type} rotation\n */\n\n\n/**\n * @typedef {Object} FitOptions\n * @property {module:ol/size~Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array.<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [constrainResolution=true] Constrain the resolution.\n * @property {boolean} [nearest=false] If `constrainResolution` is `true`, get\n * the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n\n/**\n * @typedef {Object} ViewOptions\n * @property {module:ol/coordinate~Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {module:ol/extent~Extent} [extent] The extent that constrains the\n * center, in other words, center cannot be set outside this extent.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array.<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view. The initial\n * resolution is determined using the {@link #constrainResolution} method.\n * @property {number} [zoomFactor=2] The zoom factor used to determine the\n * resolution constraint.\n */\n\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {module:ol/coordinate~Coordinate|undefined} center The center of the view at the end of\n * the animation.\n * @property {number|undefined} zoom The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number|undefined} resolution The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number|undefined} rotation The rotation of the view at the end of\n * the animation.\n * @property {module:ol/coordinate~Coordinate|undefined} anchor Optional anchor to remained fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {module:ol/coordinate~Coordinate} center\n * @property {module:ol/proj/Projection} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * An View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view. Any value can be passed to the setters. And the value\n * that is passed to a setter will effectively be the value set in the view,\n * and returned by the corresponding getter.\n *\n * But a View object also has a *resolution constraint*, a\n * *rotation constraint* and a *center constraint*.\n *\n * As said above, no constraints are applied when the setters are used to set\n * new states for the view. Applying constraints is done explicitly through\n * the use of the `constrain*` functions (`constrainResolution` and\n * `constrainRotation` and `constrainCenter`).\n *\n * The main users of the constraints are the interactions and the\n * controls. For example, double-clicking on the map changes the view to\n * the \"next\" resolution. And releasing the fingers after pinch-zooming\n * snaps to the closest resolution (with an animation).\n *\n * The *resolution constraint* snaps to specific resolutions. It is\n * determined by the following options: `resolutions`, `maxResolution`,\n * `maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\n * options are ignored. See documentation for each option for more\n * information.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the center is not constrained at all.\n *\n  * @api\n */\nvar View = (function (BaseObject) {\n  function View(opt_options) {\n    BaseObject.call(this);\n\n    var options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array.<Array.<module:ol/View~Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    this.updateAnimations_ = this.updateAnimations_.bind(this);\n\n    /**\n     * @private\n     * @const\n     * @type {module:ol/proj/Projection}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    this.applyOptions_(options);\n  }\n\n  if ( BaseObject ) View.__proto__ = BaseObject;\n  View.prototype = Object.create( BaseObject && BaseObject.prototype );\n  View.prototype.constructor = View;\n\n  /**\n   * Set up the view with the given options.\n   * @param {module:ol/View~ViewOptions} options View options.\n   */\n  View.prototype.applyOptions_ = function applyOptions_ (options) {\n\n    /**\n     * @type {Object.<string, *>}\n     */\n    var properties = {};\n    properties[ViewProperty.CENTER] = options.center !== undefined ?\n      options.center : null;\n\n    var resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array.<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    var centerConstraint = createCenterConstraint(options);\n    var resolutionConstraint = resolutionConstraintInfo.constraint;\n    var rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {module:ol/View~Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint\n    };\n\n    if (options.resolution !== undefined) {\n      properties[ViewProperty.RESOLUTION] = options.resolution;\n    } else if (options.zoom !== undefined) {\n      properties[ViewProperty.RESOLUTION] = this.constrainResolution(\n        this.maxResolution_, options.zoom - this.minZoom_);\n\n      if (this.resolutions_) { // in case map zoom is out of min/max zoom range\n        properties[ViewProperty.RESOLUTION] = clamp(\n          Number(this.getResolution() || properties[ViewProperty.RESOLUTION]),\n          this.minResolution_, this.maxResolution_);\n      }\n    }\n    properties[ViewProperty.ROTATION] = options.rotation !== undefined ? options.rotation : 0;\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {module:ol/View~ViewOptions}\n     */\n    this.options_ = options;\n\n  };\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {module:ol/View~ViewOptions} newOptions New options to be applied.\n   * @return {module:ol/View~ViewOptions} New options updated with the current view state.\n   */\n  View.prototype.getUpdatedOptions_ = function getUpdatedOptions_ (newOptions) {\n    var options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenter();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  };\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(module:ol/View~AnimationOptions|function(boolean))} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  View.prototype.animate = function animate (var_args) {\n    var arguments$1 = arguments;\n    var this$1 = this;\n\n    var animationCount = arguments.length;\n    var callback;\n    if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      var state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenter(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        setTimeout(function() {\n          callback(true);\n        }, 0);\n      }\n      return;\n    }\n    var start = Date.now();\n    var center = this.getCenter().slice();\n    var resolution = this.getResolution();\n    var rotation = this.getRotation();\n    var series = [];\n    for (var i = 0; i < animationCount; ++i) {\n      var options = /** @type {module:ol/View~AnimationOptions} */ (arguments$1[i]);\n\n      var animation = /** @type {module:ol/View~Animation} */ ({\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut\n      });\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center;\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this$1.constrainResolution(\n          this$1.maxResolution_, options.zoom - this$1.minZoom_, 0);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      animation.callback = callback;\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  };\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  View.prototype.getAnimating = function getAnimating () {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  };\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  View.prototype.getInteracting = function getInteracting () {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  };\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  View.prototype.cancelAnimations = function cancelAnimations () {\n    var this$1 = this;\n\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n      var series = this$1.animations_[i];\n      if (series[0].callback) {\n        series[0].callback(false);\n      }\n    }\n    this.animations_.length = 0;\n  };\n\n  /**\n   * Update all animations.\n   */\n  View.prototype.updateAnimations_ = function updateAnimations_ () {\n    var this$1 = this;\n\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    var now = Date.now();\n    var more = false;\n    for (var i = this.animations_.length - 1; i >= 0; --i) {\n      var series = this$1.animations_[i];\n      var seriesComplete = true;\n      for (var j = 0, jj = series.length; j < jj; ++j) {\n        var animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        var elapsed = now - animation.start;\n        var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        var progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          var x0 = animation.sourceCenter[0];\n          var y0 = animation.sourceCenter[1];\n          var x1 = animation.targetCenter[0];\n          var y1 = animation.targetCenter[1];\n          var x = x0 + progress * (x1 - x0);\n          var y = y0 + progress * (y1 - y0);\n          this$1.set(ViewProperty.CENTER, [x, y]);\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          var resolution = progress === 1 ?\n            animation.targetResolution :\n            animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            this$1.set(ViewProperty.CENTER,\n              this$1.calculateCenterZoom(resolution, animation.anchor));\n          }\n          this$1.set(ViewProperty.RESOLUTION, resolution);\n        }\n        if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n          var rotation = progress === 1 ?\n            modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n            animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            this$1.set(ViewProperty.CENTER,\n              this$1.calculateCenterRotate(rotation, animation.anchor));\n          }\n          this$1.set(ViewProperty.ROTATION, rotation);\n        }\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this$1.animations_[i] = null;\n        this$1.setHint(ViewHint.ANIMATING, -1);\n        var callback = series[0].callback;\n        if (callback) {\n          setTimeout(function() {\n            callback(true);\n          }, 0);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_);\n    }\n  };\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {module:ol/coordinate~Coordinate} anchor Rotation anchor.\n   * @return {module:ol/coordinate~Coordinate|undefined} Center for rotation and anchor.\n   */\n  View.prototype.calculateCenterRotate = function calculateCenterRotate (rotation, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  };\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {module:ol/coordinate~Coordinate} anchor Zoom anchor.\n   * @return {module:ol/coordinate~Coordinate|undefined} Center for resolution and anchor.\n   */\n  View.prototype.calculateCenterZoom = function calculateCenterZoom (resolution, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    var currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n      var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  };\n\n  /**\n   * @private\n   * @return {module:ol/size~Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  View.prototype.getSizeFromViewport_ = function getSizeFromViewport_ () {\n    var size = [100, 100];\n    var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n    var element = document.querySelector(selector);\n    if (element) {\n      var metrics = getComputedStyle(element);\n      size[0] = parseInt(metrics.width, 10);\n      size[1] = parseInt(metrics.height, 10);\n    }\n    return size;\n  };\n\n  /**\n   * Get the constrained center of this view.\n   * @param {module:ol/coordinate~Coordinate|undefined} center Center.\n   * @return {module:ol/coordinate~Coordinate|undefined} Constrained center.\n   * @api\n   */\n  View.prototype.constrainCenter = function constrainCenter (center) {\n    return this.constraints_.center(center);\n  };\n\n  /**\n   * Get the constrained resolution of this view.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @param {number=} opt_direction Direction. Default is `0`.\n   * @return {number|undefined} Constrained resolution.\n   * @api\n   */\n  View.prototype.constrainResolution = function constrainResolution (resolution, opt_delta, opt_direction) {\n    var delta = opt_delta || 0;\n    var direction = opt_direction || 0;\n    return this.constraints_.resolution(resolution, delta, direction);\n  };\n\n  /**\n   * Get the constrained rotation of this view.\n   * @param {number|undefined} rotation Rotation.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @return {number|undefined} Constrained rotation.\n   * @api\n   */\n  View.prototype.constrainRotation = function constrainRotation (rotation, opt_delta) {\n    var delta = opt_delta || 0;\n    return this.constraints_.rotation(rotation, delta);\n  };\n\n  /**\n   * Get the view center.\n   * @return {module:ol/coordinate~Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getCenter = function getCenter () {\n    return (\n      /** @type {module:ol/coordinate~Coordinate|undefined} */ (this.get(ViewProperty.CENTER))\n    );\n  };\n\n  /**\n   * @return {module:ol/View~Constraints} Constraints.\n   */\n  View.prototype.getConstraints = function getConstraints () {\n    return this.constraints_;\n  };\n\n  /**\n   * @param {Array.<number>=} opt_hints Destination array.\n   * @return {Array.<number>} Hint.\n   */\n  View.prototype.getHints = function getHints (opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  };\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {module:ol/size~Size=} opt_size Box pixel size. If not provided, the size of the\n   * first map that uses this view will be used.\n   * @return {module:ol/extent~Extent} Extent.\n   * @api\n   */\n  View.prototype.calculateExtent = function calculateExtent (opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var center = /** @type {!module:ol/coordinate~Coordinate} */ (this.getCenter());\n    assert(center, 1); // The view center is not defined\n    var resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    var rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  };\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  View.prototype.getMaxResolution = function getMaxResolution () {\n    return this.maxResolution_;\n  };\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  View.prototype.getMinResolution = function getMinResolution () {\n    return this.minResolution_;\n  };\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  View.prototype.getMaxZoom = function getMaxZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n  };\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  View.prototype.setMaxZoom = function setMaxZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  };\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  View.prototype.getMinZoom = function getMinZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n  };\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  View.prototype.setMinZoom = function setMinZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  };\n\n  /**\n   * Get the view projection.\n   * @return {module:ol/proj/Projection} The projection of the view.\n   * @api\n   */\n  View.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getResolution = function getResolution () {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  };\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array.<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  View.prototype.getResolutions = function getResolutions () {\n    return this.resolutions_;\n  };\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {module:ol/size~Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  View.prototype.getResolutionForExtent = function getResolutionForExtent (extent, opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var xResolution = getWidth(extent) / size[0];\n    var yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  };\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  View.prototype.getResolutionForValueFunction = function getResolutionForValueFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function(value) {\n        var resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      });\n  };\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.getRotation = function getRotation () {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  };\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  View.prototype.getValueForResolutionFunction = function getValueForResolutionFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function(resolution) {\n        var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n        return value;\n      });\n  };\n\n  /**\n   * @return {module:ol/View~State} View state.\n   */\n  View.prototype.getState = function getState () {\n    var center = /** @type {module:ol/coordinate~Coordinate} */ (this.getCenter());\n    var projection = this.getProjection();\n    var resolution = /** @type {number} */ (this.getResolution());\n    var rotation = this.getRotation();\n    return (\n      /** @type {module:ol/View~State} */ ({\n        center: center.slice(),\n        projection: projection !== undefined ? projection : null,\n        resolution: resolution,\n        rotation: rotation,\n        zoom: this.getZoom()\n      })\n    );\n  };\n\n  /**\n   * Get the current zoom level.  If you configured your view with a resolutions\n   * array (this is rare), this method may return non-integer zoom levels (so\n   * the zoom level is not safe to use as an index into a resolutions array).\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  View.prototype.getZoom = function getZoom () {\n    var zoom;\n    var resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  };\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  View.prototype.getZoomForResolution = function getZoomForResolution (resolution) {\n    var offset = this.minZoom_ || 0;\n    var max, zoomFactor;\n    if (this.resolutions_) {\n      var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  };\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  View.prototype.getResolutionForZoom = function getResolutionForZoom (zoom) {\n    return /** @type {number} */ (this.constrainResolution(\n      this.maxResolution_, zoom - this.minZoom_, 0));\n  };\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {module:ol/geom/SimpleGeometry|module:ol/extent~Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {module:ol/View~FitOptions=} opt_options Options.\n   * @api\n   */\n  View.prototype.fit = function fit (geometryOrExtent, opt_options) {\n    var options = opt_options || {};\n    var size = options.size;\n    if (!size) {\n      size = this.getSizeFromViewport_();\n    }\n    /** @type {module:ol/geom/SimpleGeometry} */\n    var geometry;\n    if (!(geometryOrExtent instanceof SimpleGeometry)) {\n      assert(Array.isArray(geometryOrExtent),\n        24); // Invalid extent or geometry provided as `geometry`\n      assert(!isEmpty(geometryOrExtent),\n        25); // Cannot fit empty extent provided as `geometry`\n      geometry = polygonFromExtent(geometryOrExtent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      geometryOrExtent = geometryOrExtent.getExtent();\n      geometry = polygonFromExtent(geometryOrExtent);\n      geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n    } else {\n      geometry = geometryOrExtent;\n    }\n\n    var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    var constrainResolution = options.constrainResolution !== undefined ?\n      options.constrainResolution : true;\n    var nearest = options.nearest !== undefined ? options.nearest : false;\n    var minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.constrainResolution(\n        this.maxResolution_, options.maxZoom - this.minZoom_, 0);\n    } else {\n      minResolution = 0;\n    }\n    var coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var minRotX = +Infinity;\n    var minRotY = +Infinity;\n    var maxRotX = -Infinity;\n    var maxRotY = -Infinity;\n    var stride = geometry.getStride();\n    for (var i = 0, ii = coords.length; i < ii; i += stride) {\n      var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    var resolution = this.getResolutionForExtent(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n    resolution = isNaN(resolution) ? minResolution :\n      Math.max(resolution, minResolution);\n    if (constrainResolution) {\n      var constrainedResolution = this.constrainResolution(resolution, 0, 0);\n      if (!nearest && constrainedResolution < resolution) {\n        constrainedResolution = this.constrainResolution(\n          constrainedResolution, -1, 0);\n      }\n      resolution = constrainedResolution;\n    }\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerRotX = (minRotX + maxRotX) / 2;\n    var centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n    centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n    var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    var center = [centerX, centerY];\n    var callback = options.callback ? options.callback : UNDEFINED;\n\n    if (options.duration !== undefined) {\n      this.animate({\n        resolution: resolution,\n        center: center,\n        duration: options.duration,\n        easing: options.easing\n      }, callback);\n    } else {\n      this.setResolution(resolution);\n      this.setCenter(center);\n      setTimeout(callback.bind(undefined, true), 0);\n    }\n  };\n\n  /**\n   * Center on coordinate and view position.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/size~Size} size Box pixel size.\n   * @param {module:ol/pixel~Pixel} position Position on the view to center on.\n   * @api\n   */\n  View.prototype.centerOn = function centerOn (coordinate, size, position) {\n    // calculate rotated position\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    var resolution = this.getResolution();\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerX = rotX * cosAngle - rotY * sinAngle;\n    var centerY = rotY * cosAngle + rotX * sinAngle;\n\n    this.setCenter([centerX, centerY]);\n  };\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  View.prototype.isDef = function isDef () {\n    return !!this.getCenter() && this.getResolution() !== undefined;\n  };\n\n  /**\n   * Rotate the view around a given coordinate.\n   * @param {number} rotation New rotation value for the view.\n   * @param {module:ol/coordinate~Coordinate=} opt_anchor The rotation center.\n   * @api\n   */\n  View.prototype.rotate = function rotate (rotation, opt_anchor) {\n    if (opt_anchor !== undefined) {\n      var center = this.calculateCenterRotate(rotation, opt_anchor);\n      this.setCenter(center);\n    }\n    this.setRotation(rotation);\n  };\n\n  /**\n   * Set the center of the current view.\n   * @param {module:ol/coordinate~Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setCenter = function setCenter (center) {\n    this.set(ViewProperty.CENTER, center);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * @param {module:ol/ViewHint} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  View.prototype.setHint = function setHint (hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  };\n\n  /**\n   * Set the resolution for this view.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setResolution = function setResolution (resolution) {\n    this.set(ViewProperty.RESOLUTION, resolution);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Set the rotation for this view.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.setRotation = function setRotation (rotation) {\n    this.set(ViewProperty.ROTATION, rotation);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Zoom to a specific zoom level.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  View.prototype.setZoom = function setZoom (zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  };\n\n  return View;\n}(BaseObject));\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {module:ol/centerconstraint~Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    return createExtent(options.extent);\n  } else {\n    return centerNone;\n  }\n}\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {{constraint: module:ol/resolutionconstraint~Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  var resolutionConstraint;\n  var maxResolution;\n  var minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  var defaultMaxZoom = 28;\n  var defaultZoomFactor = 2;\n\n  var minZoom = options.minZoom !== undefined ?\n    options.minZoom : DEFAULT_MIN_ZOOM;\n\n  var maxZoom = options.maxZoom !== undefined ?\n    options.maxZoom : defaultMaxZoom;\n\n  var zoomFactor = options.zoomFactor !== undefined ?\n    options.zoomFactor : defaultZoomFactor;\n\n  if (options.resolutions !== undefined) {\n    var resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution = resolutions[maxZoom] !== undefined ?\n      resolutions[maxZoom] : resolutions[resolutions.length - 1];\n    resolutionConstraint = createSnapToResolutions(\n      resolutions);\n  } else {\n    // calculate the default min and max resolution\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var extent = projection.getExtent();\n    var size = !extent ?\n      // use an extent that can fit the whole world if need be\n      360 * METERS_PER_UNIT[Units.DEGREES] /\n            projection.getMetersPerUnit() :\n      Math.max(getWidth(extent), getHeight(extent));\n\n    var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(\n      defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    var defaultMinResolution = defaultMaxResolution / Math.pow(\n      defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom = minZoom + Math.floor(\n      Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    resolutionConstraint = createSnapToPower(\n      zoomFactor, maxResolution, maxZoom - minZoom);\n  }\n  return {constraint: resolutionConstraint, maxResolution: maxResolution,\n    minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor};\n}\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  var enableRotation = options.enableRotation !== undefined ?\n    options.enableRotation : true;\n  if (enableRotation) {\n    var constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n\n/**\n * Determine if an animation involves no view change.\n * @param {module:ol/View~Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\nexport default View;\n\n//# sourceMappingURL=View.js.map","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  SOURCE: 'source'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from '../layer/Property.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = (function (BaseObject) {\n  function BaseLayer(options) {\n\n    BaseObject.call(this);\n\n    /**\n    * @type {Object.<string, *>}\n    */\n    var properties = assign({}, options);\n    properties[LayerProperty.OPACITY] =\n       options.opacity !== undefined ? options.opacity : 1;\n    properties[LayerProperty.VISIBLE] =\n       options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] =\n       options.zIndex !== undefined ? options.zIndex : 0;\n    properties[LayerProperty.MAX_RESOLUTION] =\n       options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n       options.minResolution !== undefined ? options.minResolution : 0;\n\n    this.setProperties(properties);\n\n    /**\n    * @type {module:ol/layer/Layer~State}\n    * @private\n    */\n    this.state_ = /** @type {module:ol/layer/Layer~State} */ ({\n      layer: /** @type {module:ol/layer/Layer} */ (this),\n      managed: true\n    });\n\n    /**\n    * The layer type.\n    * @type {module:ol/LayerType}\n    * @protected;\n    */\n    this.type;\n\n  }\n\n  if ( BaseObject ) BaseLayer.__proto__ = BaseObject;\n  BaseLayer.prototype = Object.create( BaseObject && BaseObject.prototype );\n  BaseLayer.prototype.constructor = BaseLayer;\n\n  /**\n  * Get the layer type (used when creating a layer renderer).\n  * @return {module:ol/LayerType} The layer type.\n  */\n  BaseLayer.prototype.getType = function getType () {\n    return this.type;\n  };\n\n  /**\n  * @return {module:ol/layer/Layer~State} Layer state.\n  */\n  BaseLayer.prototype.getLayerState = function getLayerState () {\n    this.state_.opacity = clamp(this.getOpacity(), 0, 1);\n    this.state_.sourceState = this.getSourceState();\n    this.state_.visible = this.getVisible();\n    this.state_.extent = this.getExtent();\n    this.state_.zIndex = this.getZIndex();\n    this.state_.maxResolution = this.getMaxResolution();\n    this.state_.minResolution = Math.max(this.getMinResolution(), 0);\n\n    return this.state_;\n  };\n\n  /**\n  * @abstract\n  * @param {Array.<module:ol/layer/Layer>=} opt_array Array of layers (to be\n  *     modified in place).\n  * @return {Array.<module:ol/layer/Layer>} Array of layers.\n  */\n  BaseLayer.prototype.getLayersArray = function getLayersArray (opt_array) {};\n\n  /**\n  * @abstract\n  * @param {Array.<module:ol/layer/Layer~State>=} opt_states Optional list of layer\n  *     states (to be modified in place).\n  * @return {Array.<module:ol/layer/Layer~State>} List of layer states.\n  */\n  BaseLayer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {};\n\n  /**\n  * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n  * will be visible regardless of extent.\n  * @return {module:ol/extent~Extent|undefined} The layer extent.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.getExtent = function getExtent () {\n    return (\n    /** @type {module:ol/extent~Extent|undefined} */ (this.get(LayerProperty.EXTENT))\n    );\n  };\n\n  /**\n  * Return the maximum resolution of the layer.\n  * @return {number} The maximum resolution of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.getMaxResolution = function getMaxResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  };\n\n  /**\n  * Return the minimum resolution of the layer.\n  * @return {number} The minimum resolution of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.getMinResolution = function getMinResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  };\n\n  /**\n  * Return the opacity of the layer (between 0 and 1).\n  * @return {number} The opacity of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.getOpacity = function getOpacity () {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  };\n\n  /**\n  * @abstract\n  * @return {module:ol/source/State} Source state.\n  */\n  BaseLayer.prototype.getSourceState = function getSourceState () {};\n\n  /**\n  * Return the visibility of the layer (`true` or `false`).\n  * @return {boolean} The visibility of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.getVisible = function getVisible () {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  };\n\n  /**\n  * Return the Z-index of the layer, which is used to order layers before\n  * rendering. The default Z-index is 0.\n  * @return {number} The Z-index of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.getZIndex = function getZIndex () {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  };\n\n  /**\n  * Set the extent at which the layer is visible.  If `undefined`, the layer\n  * will be visible at all extents.\n  * @param {module:ol/extent~Extent|undefined} extent The extent of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.setExtent = function setExtent (extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  };\n\n  /**\n  * Set the maximum resolution at which the layer is visible.\n  * @param {number} maxResolution The maximum resolution of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.setMaxResolution = function setMaxResolution (maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  };\n\n  /**\n  * Set the minimum resolution at which the layer is visible.\n  * @param {number} minResolution The minimum resolution of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.setMinResolution = function setMinResolution (minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  };\n\n  /**\n  * Set the opacity of the layer, allowed values range from 0 to 1.\n  * @param {number} opacity The opacity of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.setOpacity = function setOpacity (opacity) {\n    this.set(LayerProperty.OPACITY, opacity);\n  };\n\n  /**\n  * Set the visibility of the layer (`true` or `false`).\n  * @param {boolean} visible The visibility of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.setVisible = function setVisible (visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  };\n\n  /**\n  * Set Z-index of the layer, which is used to order layers before rendering.\n  * The default Z-index is 0.\n  * @param {number} zindex The z-index of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.setZIndex = function setZIndex (zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  };\n\n  return BaseLayer;\n}(BaseObject));\n\n\nexport default BaseLayer;\n\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/source/State\n */\n\n/**\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n * @enum {string}\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};\n\n//# sourceMappingURL=State.js.map","/**\n * @module ol/layer/Group\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getIntersection} from '../extent.js';\nimport BaseLayer from '../layer/Base.js';\nimport {assign, clear} from '../obj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {(Array.<module:ol/layer/Base>|module:ol/Collection.<module:ol/layer/Base>)} [layers] Child layers.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LAYERS: 'layers'\n};\n\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = (function (BaseLayer) {\n  function LayerGroup(opt_options) {\n\n    var options = opt_options || {};\n    var baseOptions = /** @type {module:ol/layer/Group~Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    var layers = options.layers;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object.<string, Array.<module:ol/events~EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    listen(this,\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_, this);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(layers instanceof Collection,\n          43); // Expected `layers` to be an array or a `Collection`\n        layers = layers;\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n\n  }\n\n  if ( BaseLayer ) LayerGroup.__proto__ = BaseLayer;\n  LayerGroup.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  LayerGroup.prototype.constructor = LayerGroup;\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayerChange_ = function handleLayerChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @param {module:ol/events/Event} event Event.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersChanged_ = function handleLayersChanged_ () {\n    var this$1 = this;\n\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    var layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (var id in this$1.listenerKeys_) {\n      this$1.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    var layersArray = layers.getArray();\n    for (var i = 0, ii = layersArray.length; i < ii; i++) {\n      var layer = layersArray[i];\n      this$1.listenerKeys_[getUid(layer).toString()] = [\n        listen(layer, ObjectEventType.PROPERTYCHANGE, this$1.handleLayerChange_, this$1),\n        listen(layer, EventType.CHANGE, this$1.handleLayerChange_, this$1)\n      ];\n    }\n\n    this.changed();\n  };\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersAdd_ = function handleLayersAdd_ (collectionEvent) {\n    var layer = /** @type {module:ol/layer/Base} */ (collectionEvent.element);\n    var key = getUid(layer).toString();\n    this.listenerKeys_[key] = [\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n    ];\n    this.changed();\n  };\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersRemove_ = function handleLayersRemove_ (collectionEvent) {\n    var layer = /** @type {module:ol/layer/Base} */ (collectionEvent.element);\n    var key = getUid(layer).toString();\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  };\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!module:ol/Collection.<module:ol/layer/Base>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.getLayers = function getLayers () {\n    return (\n      /** @type {!module:ol/Collection.<module:ol/layer/Base>} */ (this.get(Property.LAYERS))\n    );\n  };\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!module:ol/Collection.<module:ol/layer/Base>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.setLayers = function setLayers (layers) {\n    this.set(Property.LAYERS, layers);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function(layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states !== undefined ? opt_states : [];\n\n    var pos = states.length;\n\n    this.getLayers().forEach(function(layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    var ownLayerState = this.getLayerState();\n    for (var i = pos, ii = states.length; i < ii; i++) {\n      var layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(\n        layerState.minResolution, ownLayerState.minResolution);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getSourceState = function getSourceState () {\n    return SourceState.READY;\n  };\n\n  return LayerGroup;\n}(BaseLayer));\n\n\nexport default LayerGroup;\n\n//# sourceMappingURL=Group.js.map","/**\n * @module ol/size\n */\n\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array.<number>} Size\n * @api\n */\n\n\n/**\n * Returns a buffered size.\n * @param {module:ol/size~Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n\n/**\n * Determines if a size has a positive area.\n * @param {module:ol/size~Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {module:ol/size~Size} size Size.\n * @param {number} ratio Ratio.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n\n/**\n * Returns an `module:ol/size~Size` array for the passed in number (meaning: square) or\n * `module:ol/size~Size` array.\n * (meaning: non-square),\n * @param {number|module:ol/size~Size} size Width and height.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n    }\n    return opt_size;\n  }\n}\n\n//# sourceMappingURL=size.js.map","/**\n * @module ol/PluggableMap\n */\nimport {getUid} from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {assert} from './asserts.js';\nimport {removeNode} from './dom.js';\nimport {listen, unlistenByKey, unlisten} from './events.js';\nimport {stopPropagation} from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport {createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, TOUCH} from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport {hasArea} from './size.js';\nimport {DROP} from './structs/PriorityQueue.js';\nimport {create as createTransform, apply as applyTransform} from './transform.js';\n\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {module:ol/View~State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {module:ol/transform~Transform} coordinateToPixelTransform\n * @property {null|module:ol/extent~Extent} extent\n * @property {module:ol/coordinate~Coordinate} focus\n * @property {number} index\n * @property {Object.<number, module:ol/layer/Layer~State>} layerStates\n * @property {Array.<module:ol/layer/Layer~State>} layerStatesArray\n * @property {module:ol/transform~Transform} pixelToCoordinateTransform\n * @property {Array.<module:ol/PluggableMap~PostRenderFunction>} postRenderFunctions\n * @property {module:ol/size~Size} size\n * @property {!Object.<string, boolean>} skippedFeatureUids\n * @property {module:ol/TileQueue} tileQueue\n * @property {Object.<string, Object.<string, module:ol/TileRange>>} usedTiles\n * @property {Array.<number>} viewHints\n * @property {!Object.<string, Object.<string, boolean>>} wantedTiles\n */\n\n\n/**\n * @typedef {function(module:ol/PluggableMap, ?module:ol/PluggableMap~FrameState): boolean} PostRenderFunction\n */\n\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {((function(module:ol/layer/Layer): boolean)|undefined)} layerFilter Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {module:ol/Collection.<module:ol/control/Control>} [controls]\n * @property {module:ol/Collection.<module:ol/interaction/Interaction>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {module:ol/Collection.<module:ol/Overlay>} overlays\n * @property {Object.<string, *>} values\n */\n\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {module:ol/Collection.<module:ol/control/Control>|Array.<module:ol/control/Control>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/util~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {module:ol/Collection.<module:ol/interaction/Interaction>|Array.<module:ol/interaction/Interaction>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array.<module:ol/layer/Base>|module:ol/Collection.<module:ol/layer/Base>} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {boolean} [loadTilesWhileAnimating=false] When set to `true`, tiles\n * will be loaded during animations. This may improve the user experience, but\n * can also make animations stutter on devices with slow memory.\n * @property {boolean} [loadTilesWhileInteracting=false] When set to `true`,\n * tiles will be loaded while interacting with the map. This may improve the\n * user experience, but can also make map panning and zooming choppy on devices\n * with slow memory.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {module:ol/Collection.<module:ol/Overlay>|Array.<module:ol/Overlay>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {module:ol/View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n\n/**\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\n * @fires module:ol/MapEvent~MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nvar PluggableMap = (function (BaseObject) {\n  function PluggableMap(options) {\n    var this$1 = this;\n\n\n    BaseObject.call(this);\n\n    var optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileAnimating_ =\n        options.loadTilesWhileAnimating !== undefined ?\n          options.loadTilesWhileAnimating : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileInteracting_ =\n        options.loadTilesWhileInteracting !== undefined ?\n          options.loadTilesWhileInteracting : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio !== undefined ?\n      options.pixelRatio : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = function() {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_.call(this, Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?module:ol/PluggableMap~FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('DIV');\n    this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n    // prevent page zoom on IE >= 10 browsers\n    this.viewport_.style.msTouchAction = 'none';\n    this.viewport_.style.touchAction = 'none';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('DIV');\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('DIV');\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    var overlayEvents = [\n      EventType.CLICK,\n      EventType.DBLCLICK,\n      EventType.MOUSEDOWN,\n      EventType.TOUCHSTART,\n      EventType.MSPOINTERDOWN,\n      MapBrowserEventType.POINTERDOWN,\n      EventType.MOUSEWHEEL,\n      EventType.WHEEL\n    ];\n    for (var i = 0, ii = overlayEvents.length; i < ii; ++i) {\n      listen(this$1.overlayContainerStopEvent_, overlayEvents[i], stopPropagation);\n    }\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {module:ol/MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, options.moveTolerance);\n    for (var key in MapBrowserEventType) {\n      listen(this$1.mapBrowserEventHandler_, MapBrowserEventType[key],\n        this$1.handleMapBrowserEvent, this$1);\n    }\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    listen(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n\n    /**\n     * @type {module:ol/Collection.<module:ol/control/Control>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {module:ol/Collection.<module:ol/interaction/Interaction>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {module:ol/Collection.<module:ol/Overlay>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object.<string, module:ol/Overlay>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {module:ol/renderer/Map}\n     * @private\n     */\n    this.renderer_ = this.createRenderer();\n\n    /**\n     * @type {function(Event)|undefined}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.focus_ = null;\n\n    /**\n     * @private\n     * @type {!Array.<module:ol/PluggableMap~PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {module:ol/TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this));\n\n    /**\n     * Uids of features to skip at rendering time.\n     * @type {Object.<string, boolean>}\n     * @private\n     */\n    this.skippedFeatureUids_ = {};\n\n    listen(\n      this, getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_, this);\n    listen(this, getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_, this);\n    listen(this, getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_, this);\n    listen(this, getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_, this);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {module:ol/control/Control} control Control.\n       * @this {module:ol/PluggableMap}\n       */\n      (function(control) {\n        control.setMap(this);\n      }).bind(this));\n\n    listen(this.controls, CollectionEventType.ADD,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.controls, CollectionEventType.REMOVE,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.interactions.forEach(\n      /**\n       * @param {module:ol/interaction/Interaction} interaction Interaction.\n       * @this {module:ol/PluggableMap}\n       */\n      (function(interaction) {\n        interaction.setMap(this);\n      }).bind(this));\n\n    listen(this.interactions, CollectionEventType.ADD,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.interactions, CollectionEventType.REMOVE,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    listen(this.overlays_, CollectionEventType.ADD,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        this.addOverlayInternal_(/** @type {module:ol/Overlay} */ (event.element));\n      }, this);\n\n    listen(this.overlays_, CollectionEventType.REMOVE,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        var overlay = /** @type {module:ol/Overlay} */ (event.element);\n        var id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }, this);\n\n  }\n\n  if ( BaseObject ) PluggableMap.__proto__ = BaseObject;\n  PluggableMap.prototype = Object.create( BaseObject && BaseObject.prototype );\n  PluggableMap.prototype.constructor = PluggableMap;\n\n  PluggableMap.prototype.createRenderer = function createRenderer () {\n    throw new Error('Use a map type that has a createRenderer method');\n  };\n\n  /**\n   * Add the given control to the map.\n   * @param {module:ol/control/Control} control Control.\n   * @api\n   */\n  PluggableMap.prototype.addControl = function addControl (control) {\n    this.getControls().push(control);\n  };\n\n  /**\n   * Add the given interaction to the map.\n   * @param {module:ol/interaction/Interaction} interaction Interaction to add.\n   * @api\n   */\n  PluggableMap.prototype.addInteraction = function addInteraction (interaction) {\n    this.getInteractions().push(interaction);\n  };\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {module:ol/layer/Base} layer Layer.\n   * @api\n   */\n  PluggableMap.prototype.addLayer = function addLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  };\n\n  /**\n   * Add the given overlay to the map.\n   * @param {module:ol/Overlay} overlay Overlay.\n   * @api\n   */\n  PluggableMap.prototype.addOverlay = function addOverlay (overlay) {\n    this.getOverlays().push(overlay);\n  };\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {module:ol/Overlay} overlay Overlay.\n   * @private\n   */\n  PluggableMap.prototype.addOverlayInternal_ = function addOverlayInternal_ (overlay) {\n    var id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  };\n\n  /**\n   *\n   * @inheritDoc\n   */\n  PluggableMap.prototype.disposeInternal = function disposeInternal () {\n    this.mapBrowserEventHandler_.dispose();\n    unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n    if (this.handleResize_ !== undefined) {\n      removeEventListener(EventType.RESIZE, this.handleResize_, false);\n      this.handleResize_ = undefined;\n    }\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n      this.animationDelayKey_ = undefined;\n    }\n    this.setTarget(null);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature),\n   *     module:ol/layer/Layer): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachFeatureAtPixel = function forEachFeatureAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = opt_options.layerFilter !== undefined ?\n      opt_options.layerFilter : TRUE;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, callback, null,\n      layerFilter, null);\n  };\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n   * @return {Array.<module:ol/Feature|module:ol/render/Feature>} The detected features or\n   * `null` if none were found.\n   * @api\n   */\n  PluggableMap.prototype.getFeaturesAtPixel = function getFeaturesAtPixel (pixel, opt_options) {\n    var features = null;\n    this.forEachFeatureAtPixel(pixel, function(feature) {\n      if (!features) {\n        features = [];\n      }\n      features.push(feature);\n    }, opt_options);\n    return features;\n  };\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var options = opt_options || {};\n    var hitTolerance = options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n  };\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @template U\n   * @api\n   */\n  PluggableMap.prototype.hasFeatureAtPixel = function hasFeatureAtPixel (pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, layerFilter, null);\n  };\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {Event} event Event.\n   * @return {module:ol/coordinate~Coordinate} Coordinate.\n   * @api\n   */\n  PluggableMap.prototype.getEventCoordinate = function getEventCoordinate (event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  };\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {Event} event Event.\n   * @return {module:ol/pixel~Pixel} Pixel.\n   * @api\n   */\n  PluggableMap.prototype.getEventPixel = function getEventPixel (event) {\n    var viewportPosition = this.viewport_.getBoundingClientRect();\n    var eventPosition = event.changedTouches ? event.changedTouches[0] : event;\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top\n    ];\n  };\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getTarget = function getTarget () {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n  };\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  PluggableMap.prototype.getTargetElement = function getTargetElement () {\n    var target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string' ? document.getElementById(target) : target;\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {module:ol/pixel~Pixel} pixel Pixel position in the map viewport.\n   * @return {module:ol/coordinate~Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  PluggableMap.prototype.getCoordinateFromPixel = function getCoordinateFromPixel (pixel) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n    }\n  };\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {module:ol/Collection.<module:ol/control/Control>} Controls.\n   * @api\n   */\n  PluggableMap.prototype.getControls = function getControls () {\n    return this.controls;\n  };\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {module:ol/Collection.<module:ol/Overlay>} Overlays.\n   * @api\n   */\n  PluggableMap.prototype.getOverlays = function getOverlays () {\n    return this.overlays_;\n  };\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {module:ol/Overlay} Overlay.\n   * @api\n   */\n  PluggableMap.prototype.getOverlayById = function getOverlayById (id) {\n    var overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  };\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {module:ol/Collection.<module:ol/interaction/Interaction>} Interactions.\n   * @api\n   */\n  PluggableMap.prototype.getInteractions = function getInteractions () {\n    return this.interactions;\n  };\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {module:ol/layer/Group} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getLayerGroup = function getLayerGroup () {\n    return (\n      /** @type {module:ol/layer/Group} */ (this.get(MapProperty.LAYERGROUP))\n    );\n  };\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!module:ol/Collection.<module:ol/layer/Base>} Layers.\n   * @api\n   */\n  PluggableMap.prototype.getLayers = function getLayers () {\n    var layers = this.getLayerGroup().getLayers();\n    return layers;\n  };\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {module:ol/coordinate~Coordinate} coordinate A map coordinate.\n   * @return {module:ol/pixel~Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.getPixelFromCoordinate = function getPixelFromCoordinate (coordinate) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n    }\n  };\n\n  /**\n   * Get the map renderer.\n   * @return {module:ol/renderer/Map} Renderer\n   */\n  PluggableMap.prototype.getRenderer = function getRenderer () {\n    return this.renderer_;\n  };\n\n  /**\n   * Get the size of this map.\n   * @return {module:ol/size~Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getSize = function getSize () {\n    return (\n      /** @type {module:ol/size~Size|undefined} */ (this.get(MapProperty.SIZE))\n    );\n  };\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {module:ol/View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getView = function getView () {\n    return (\n      /** @type {module:ol/View} */ (this.get(MapProperty.VIEW))\n    );\n  };\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  PluggableMap.prototype.getViewport = function getViewport () {\n    return this.viewport_;\n  };\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  PluggableMap.prototype.getOverlayContainer = function getOverlayContainer () {\n    return this.overlayContainer_;\n  };\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  PluggableMap.prototype.getOverlayContainerStopEvent = function getOverlayContainerStopEvent () {\n    return this.overlayContainerStopEvent_;\n  };\n\n  /**\n   * @param {module:ol/Tile} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {module:ol/coordinate~Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  PluggableMap.prototype.getTilePriority = function getTilePriority (tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    var frameState = this.frameState_;\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n      return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n      return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels\n    // between the center of the tile and the focus.  The factor of 65536 means\n    // that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var deltaX = tileCenter[0] - frameState.focus[0];\n    var deltaY = tileCenter[1] - frameState.focus[1];\n    return 65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n  };\n\n  /**\n   * @param {Event} browserEvent Browser event.\n   * @param {string=} opt_type Type.\n   */\n  PluggableMap.prototype.handleBrowserEvent = function handleBrowserEvent (browserEvent, opt_type) {\n    var type = opt_type || browserEvent.type;\n    var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  };\n\n  /**\n   * @param {module:ol/MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  PluggableMap.prototype.handleMapBrowserEvent = function handleMapBrowserEvent (mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    this.focus_ = mapBrowserEvent.coordinate;\n    mapBrowserEvent.frameState = this.frameState_;\n    var interactionsArray = this.getInteractions().getArray();\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      for (var i = interactionsArray.length - 1; i >= 0; i--) {\n        var interaction = interactionsArray[i];\n        if (!interaction.getActive()) {\n          continue;\n        }\n        var cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont) {\n          break;\n        }\n      }\n    }\n  };\n\n  /**\n   * @protected\n   */\n  PluggableMap.prototype.handlePostRender = function handlePostRender () {\n    var this$1 = this;\n\n\n    var frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    var tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      var maxTotalLoading = this.maxTilesLoading_;\n      var maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        var hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING]) {\n          maxTotalLoading = this.loadTilesWhileAnimating_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n        if (hints[ViewHint.INTERACTING]) {\n          maxTotalLoading = this.loadTilesWhileInteracting_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    var postRenderFunctions = this.postRenderFunctions_;\n    for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this$1, frameState);\n    }\n    postRenderFunctions.length = 0;\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleSizeChanged_ = function handleSizeChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTargetChanged_ = function handleTargetChanged_ () {\n    var this$1 = this;\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    var targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.keyHandlerKeys_) {\n      for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this$1.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n    }\n\n    if (!targetElement) {\n      this.renderer_.removeLayerRenderers();\n      removeNode(this.viewport_);\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n\n      var keyboardEventTarget = !this.keyboardEventTarget_ ?\n        targetElement : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n        listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTileChange_ = function handleTileChange_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewPropertyChanged_ = function handleViewPropertyChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewChanged_ = function handleViewChanged_ () {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    var view = this.getView();\n    if (view) {\n      this.viewport_.setAttribute('data-view', getUid(view));\n      this.viewPropertyListenerKey_ = listen(\n        view, ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_, this);\n      this.viewChangeListenerKey_ = listen(\n        view, EventType.CHANGE,\n        this.handleViewPropertyChanged_, this);\n    }\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleLayerGroupChanged_ = function handleLayerGroupChanged_ () {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    var layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(\n          layerGroup, ObjectEventType.PROPERTYCHANGE,\n          this.render, this),\n        listen(\n          layerGroup, EventType.CHANGE,\n          this.render, this)\n      ];\n    }\n    this.render();\n  };\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  PluggableMap.prototype.isRendered = function isRendered () {\n    return !!this.frameState_;\n  };\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  PluggableMap.prototype.renderSync = function renderSync () {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  };\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  PluggableMap.prototype.render = function render () {\n    if (this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  };\n\n  /**\n   * Remove the given control from the map.\n   * @param {module:ol/control/Control} control Control.\n   * @return {module:ol/control/Control|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeControl = function removeControl (control) {\n    return this.getControls().remove(control);\n  };\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {module:ol/interaction/Interaction} interaction Interaction to remove.\n   * @return {module:ol/interaction/Interaction|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeInteraction = function removeInteraction (interaction) {\n    return this.getInteractions().remove(interaction);\n  };\n\n  /**\n   * Removes the given layer from the map.\n   * @param {module:ol/layer/Base} layer Layer.\n   * @return {module:ol/layer/Base|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeLayer = function removeLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  };\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {module:ol/Overlay} overlay Overlay.\n   * @return {module:ol/Overlay|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeOverlay = function removeOverlay (overlay) {\n    return this.getOverlays().remove(overlay);\n  };\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  PluggableMap.prototype.renderFrame_ = function renderFrame_ (time) {\n    var viewState;\n\n    var size = this.getSize();\n    var view = this.getView();\n    var extent = createEmpty();\n    var previousFrameState = this.frameState_;\n    /** @type {?module:ol/PluggableMap~FrameState} */\n    var frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n      var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n      var layerStates = {};\n      for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n        layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n      }\n      viewState = view.getState();\n      var focus = this.focus_;\n      if (!focus) {\n        focus = viewState.center;\n        var pixelResolution = viewState.resolution / this.pixelRatio_;\n        focus[0] = Math.round(focus[0] / pixelResolution) * pixelResolution;\n        focus[1] = Math.round(focus[1] / pixelResolution) * pixelResolution;\n      }\n      frameState = /** @type {module:ol/PluggableMap~FrameState} */ ({\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        extent: extent,\n        focus: focus,\n        index: this.frameIndex_++,\n        layerStates: layerStates,\n        layerStatesArray: layerStatesArray,\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        skippedFeatureUids: this.skippedFeatureUids_,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {}\n      });\n    }\n\n    if (frameState) {\n      frameState.extent = getForViewAndSize(viewState.center,\n        viewState.resolution, viewState.rotation, frameState.size, extent);\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n\n      if (previousFrameState) {\n        var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                    !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      var idle = this.previousExtent_ &&\n          !frameState.viewHints[ViewHint.ANIMATING] &&\n          !frameState.viewHints[ViewHint.INTERACTING] &&\n          !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    setTimeout(this.handlePostRender.bind(this), 0);\n\n  };\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {module:ol/layer/Group} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setLayerGroup = function setLayerGroup (layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  };\n\n  /**\n   * Set the size of this map.\n   * @param {module:ol/size~Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setSize = function setSize (size) {\n    this.set(MapProperty.SIZE, size);\n  };\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setTarget = function setTarget (target) {\n    this.set(MapProperty.TARGET, target);\n  };\n\n  /**\n   * Set the view for this map.\n   * @param {module:ol/View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setView = function setView (view) {\n    this.set(MapProperty.VIEW, view);\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   */\n  PluggableMap.prototype.skipFeature = function skipFeature (feature) {\n    var featureUid = getUid(feature).toString();\n    this.skippedFeatureUids_[featureUid] = true;\n    this.render();\n  };\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.updateSize = function updateSize () {\n    var targetElement = this.getTargetElement();\n\n    if (!targetElement) {\n      this.setSize(undefined);\n    } else {\n      var computedStyle = getComputedStyle(targetElement);\n      this.setSize([\n        targetElement.offsetWidth -\n            parseFloat(computedStyle['borderLeftWidth']) -\n            parseFloat(computedStyle['paddingLeft']) -\n            parseFloat(computedStyle['paddingRight']) -\n            parseFloat(computedStyle['borderRightWidth']),\n        targetElement.offsetHeight -\n            parseFloat(computedStyle['borderTopWidth']) -\n            parseFloat(computedStyle['paddingTop']) -\n            parseFloat(computedStyle['paddingBottom']) -\n            parseFloat(computedStyle['borderBottomWidth'])\n      ]);\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   */\n  PluggableMap.prototype.unskipFeature = function unskipFeature (feature) {\n    var featureUid = getUid(feature).toString();\n    delete this.skippedFeatureUids_[featureUid];\n    this.render();\n  };\n\n  return PluggableMap;\n}(BaseObject));\n\n\n/**\n * @param {MapOptions} options Map options.\n * @return {module:ol/PluggableMap~MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n\n  /**\n   * @type {HTMLElement|Document}\n   */\n  var keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n      document.getElementById(options.keyboardEventTarget) :\n      options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object.<string, *>}\n   */\n  var values = {};\n\n  var layerGroup = (options.layers instanceof LayerGroup) ?\n    options.layers : new LayerGroup({layers: options.layers});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] = options.view !== undefined ?\n    options.view : new View();\n\n  var controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(options.controls instanceof Collection,\n        47); // Expected `controls` to be an array or an `module:ol/Collection~Collection`\n      controls = options.controls;\n    }\n  }\n\n  var interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(options.interactions instanceof Collection,\n        48); // Expected `interactions` to be an array or an `module:ol/Collection~Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  var overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(options.overlays instanceof Collection,\n        49); // Expected `overlays` to be an array or an `module:ol/Collection~Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values\n  };\n\n}\nexport default PluggableMap;\n\n//# sourceMappingURL=PluggableMap.js.map","/**\n * @module ol/control/Control\n */\nimport {UNDEFINED} from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {removeNode} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(module:ol/MapEvent)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = (function (BaseObject) {\n  function Control(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = options.element ? options.element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/PluggableMap}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array.<module:ol/events~EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    /**\n     * @type {function(module:ol/MapEvent)}\n     */\n    this.render = options.render ? options.render : UNDEFINED;\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n\n  }\n\n  if ( BaseObject ) Control.__proto__ = BaseObject;\n  Control.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Control.prototype.constructor = Control;\n\n  /**\n   * @inheritDoc\n   */\n  Control.prototype.disposeInternal = function disposeInternal () {\n    removeNode(this.element);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the map associated with this control.\n   * @return {module:ol/PluggableMap} Map.\n   * @api\n   */\n  Control.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {module:ol/PluggableMap} map Map.\n   * @api\n   */\n  Control.prototype.setMap = function setMap (map) {\n    var this$1 = this;\n\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this$1.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      var target = this.target_ ?\n        this.target_ : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== UNDEFINED) {\n        this.listenerKeys.push(listen(map,\n          MapEventType.POSTRENDER, this.render, this));\n      }\n      map.render();\n    }\n  };\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  Control.prototype.setTarget = function setTarget (target) {\n    this.target_ = typeof target === 'string' ?\n      document.getElementById(target) :\n      target;\n  };\n\n  return Control;\n}(BaseObject));\n\n\nexport default Control;\n\n//# sourceMappingURL=Control.js.map","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#render\n   * @api\n   */\n  RENDER: 'render'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/layer/Layer\n */\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {getChangeEventType} from '../Object.js';\nimport BaseLayer from '../layer/Base.js';\nimport LayerProperty from '../layer/Property.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/source/Source} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {module:ol/layer/Layer} layer\n * @property {number} opacity\n * @property {module:ol/source/Source~State} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {module:ol/extent~Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires module:ol/render/Event~RenderEvent\n */\nvar Layer = (function (BaseLayer) {\n  function Layer(options) {\n\n    var baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    listen(this,\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_, this);\n\n    var source = options.source ? options.source : null;\n    this.setSource(source);\n  }\n\n  if ( BaseLayer ) Layer.__proto__ = BaseLayer;\n  Layer.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  Layer.prototype.constructor = Layer;\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  };\n\n  /**\n   * Get the layer source.\n   * @return {module:ol/source/Source} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  Layer.prototype.getSource = function getSource () {\n    var source = this.get(LayerProperty.SOURCE);\n    return (\n      /** @type {module:ol/source/Source} */ (source) || null\n    );\n  };\n\n  /**\n    * @inheritDoc\n    */\n  Layer.prototype.getSourceState = function getSourceState () {\n    var source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourceChange_ = function handleSourceChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourcePropertyChange_ = function handleSourcePropertyChange_ () {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    var source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(source,\n        EventType.CHANGE, this.handleSourceChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {module:ol/PluggableMap} map Map.\n   * @api\n   */\n  Layer.prototype.setMap = function setMap (map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\n        var layerState = this.getLayerState();\n        layerState.managed = false;\n        layerState.zIndex = Infinity;\n        evt.frameState.layerStatesArray.push(layerState);\n        evt.frameState.layerStates[getUid(this)] = layerState;\n      }, this);\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the layer source.\n   * @param {module:ol/source/Source} source The layer source.\n   * @observable\n   * @api\n   */\n  Layer.prototype.setSource = function setSource (source) {\n    this.set(LayerProperty.SOURCE, source);\n  };\n\n  return Layer;\n}(BaseLayer));\n\n\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n  return layerState.visible && resolution >= layerState.minResolution &&\n      resolution < layerState.maxResolution;\n}\n\n\nexport default Layer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible=true] Specify if attributions can\n * be collapsed. If you use an OSM source, should be set to `false` — see\n * {@link https://www.openstreetmap.org/copyright OSM Copyright} —\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(module:ol/MapEvent)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = (function (Control) {\n  function Attribution(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('UL');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    var className = options.className !== undefined ? options.className : 'ol-attribution';\n\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    var label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n\n    var activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array.<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n  }\n\n  if ( Control ) Attribution.__proto__ = Control;\n  Attribution.prototype = Object.create( Control && Control.prototype );\n  Attribution.prototype.constructor = Attribution;\n\n  /**\n   * Get a list of visible attributions.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @return {Array.<string>} Attributions.\n   * @private\n   */\n  Attribution.prototype.getSourceAttributions_ = function getSourceAttributions_ (frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object.<string, boolean>}\n     */\n    var lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array.<string>}\n     */\n    var visibleAttributions = [];\n\n    var layerStatesArray = frameState.layerStatesArray;\n    var resolution = frameState.viewState.resolution;\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      if (!visibleAtResolution(layerState, resolution)) {\n        continue;\n      }\n\n      var source = layerState.layer.getSource();\n      if (!source) {\n        continue;\n      }\n\n      var attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      var attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      if (Array.isArray(attributions)) {\n        for (var j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    return visibleAttributions;\n  };\n\n  /**\n   * @private\n   * @param {?module:ol/PluggableMap~FrameState} frameState Frame state.\n   */\n  Attribution.prototype.updateElement_ = function updateElement_ (frameState) {\n    var this$1 = this;\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var attributions = this.getSourceAttributions_(frameState);\n\n    var visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (var i = 0, ii = attributions.length; i < ii; ++i) {\n      var element = document.createElement('LI');\n      element.innerHTML = attributions[i];\n      this$1.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  };\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Attribution.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleToggle_();\n  };\n\n  /**\n   * @private\n   */\n  Attribution.prototype.handleToggle_ = function handleToggle_ () {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  };\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.getCollapsible = function getCollapsible () {\n    return this.collapsible_;\n  };\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.setCollapsible = function setCollapsible (collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  };\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.setCollapsed = function setCollapsed (collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  };\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.getCollapsed = function getCollapsed () {\n    return this.collapsed_;\n  };\n\n  return Attribution;\n}(Control));\n\n\n/**\n * Update the attribution element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/Attribution}\n * @api\n */\nexport function render(mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n}\n\n\nexport default Attribution;\n\n//# sourceMappingURL=Attribution.js.map","/**\n * @module ol/control/Rotate\n */\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = (function (Control) {\n  function Rotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-rotate';\n\n    var label = options.label !== undefined ? options.label : '\\u21E7';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = 'ol-compass';\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add('ol-compass');\n    }\n\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    var button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n\n  }\n\n  if ( Control ) Rotate.__proto__ = Control;\n  Rotate.prototype = Object.create( Control && Control.prototype );\n  Rotate.prototype.constructor = Rotate;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Rotate.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  Rotate.prototype.resetNorth_ = function resetNorth_ () {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    if (view.getRotation() !== undefined) {\n      if (this.duration_ > 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  };\n\n  return Rotate;\n}(Control));\n\n\n/**\n * Update the rotate control element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/Rotate}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    return;\n  }\n  var rotation = frameState.viewState.rotation;\n  if (rotation != this.rotation_) {\n    var transform = 'rotate(' + rotation + 'rad)';\n    if (this.autoHide_) {\n      var contains = this.element.classList.contains(CLASS_HIDDEN);\n      if (!contains && rotation === 0) {\n        this.element.classList.add(CLASS_HIDDEN);\n      } else if (contains && rotation !== 0) {\n        this.element.classList.remove(CLASS_HIDDEN);\n      }\n    }\n    this.label_.style.msTransform = transform;\n    this.label_.style.webkitTransform = transform;\n    this.label_.style.transform = transform;\n  }\n  this.rotation_ = rotation;\n}\n\nexport default Rotate;\n\n//# sourceMappingURL=Rotate.js.map","/**\n * @module ol/control/Zoom\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = (function (Control) {\n  function Zoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-zoom';\n\n    var delta = options.delta !== undefined ? options.delta : 1;\n\n    var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n      options.zoomInTipLabel : 'Zoom in';\n    var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n      options.zoomOutTipLabel : 'Zoom out';\n\n    var inElement = document.createElement('button');\n    inElement.className = className + '-in';\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\n    );\n\n    listen(inElement, EventType.CLICK, this.handleClick_.bind(this, delta));\n\n    var outElement = document.createElement('button');\n    outElement.className = className + '-out';\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\n    );\n\n    listen(outElement, EventType.CLICK, this.handleClick_.bind(this, -delta));\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Control ) Zoom.__proto__ = Control;\n  Zoom.prototype = Object.create( Control && Control.prototype );\n  Zoom.prototype.constructor = Zoom;\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Zoom.prototype.handleClick_ = function handleClick_ (delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  };\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  Zoom.prototype.zoomByDelta_ = function zoomByDelta_ (delta) {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    var currentResolution = view.getResolution();\n    if (currentResolution) {\n      var newResolution = view.constrainResolution(currentResolution, delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          resolution: newResolution,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setResolution(newResolution);\n      }\n    }\n  };\n\n  return Zoom;\n}(Control));\n\n\nexport default Zoom;\n\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {module:ol/control/Attribution~Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {module:ol/control/Rotate~Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {module:ol/control/Zoom~Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {module:ol/control/util~DefaultsOptions=} opt_options\n * Defaults options.\n * @return {module:ol/Collection.<module:ol/control/Control>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var controls = new Collection();\n\n  var zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  var rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  var attributionControl = options.attribution !== undefined ?\n    options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = function Kinetic(decay, minVelocity, delay) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.decay_ = decay;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minVelocity_ = minVelocity;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delay_ = delay;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.points_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.initialVelocity_ = 0;\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nKinetic.prototype.begin = function begin () {\n  this.points_.length = 0;\n  this.angle_ = 0;\n  this.initialVelocity_ = 0;\n};\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n */\nKinetic.prototype.update = function update (x, y) {\n  this.points_.push(x, y, Date.now());\n};\n\n/**\n * @return {boolean} Whether we should do kinetic animation.\n */\nKinetic.prototype.end = function end () {\n  if (this.points_.length < 6) {\n    // at least 2 points are required (i.e. there must be at least 6 elements\n    // in the array)\n    return false;\n  }\n  var delay = Date.now() - this.delay_;\n  var lastIndex = this.points_.length - 3;\n  if (this.points_[lastIndex + 2] < delay) {\n    // the last tracked point is too old, which means that the user stopped\n    // panning before releasing the map\n    return false;\n  }\n\n  // get the first point which still falls into the delay time\n  var firstIndex = lastIndex - 3;\n  while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n    firstIndex -= 3;\n  }\n\n  var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n  // we don't want a duration of 0 (divide by zero)\n  // we also make sure the user panned for a duration of at least one frame\n  // (1/60s) to compute sane displacement values\n  if (duration < 1000 / 60) {\n    return false;\n  }\n\n  var dx = this.points_[lastIndex] - this.points_[firstIndex];\n  var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n  this.angle_ = Math.atan2(dy, dx);\n  this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n  return this.initialVelocity_ > this.minVelocity_;\n};\n\n/**\n * @return {number} Total distance travelled (pixels).\n */\nKinetic.prototype.getDistance = function getDistance () {\n  return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n};\n\n/**\n * @return {number} Angle of the kinetic panning animation (radians).\n */\nKinetic.prototype.getAngle = function getAngle () {\n  return this.angle_;\n};\n\nexport default Kinetic;\n\n//# sourceMappingURL=Kinetic.js.map","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(module:ol/MapBrowserEvent):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return).\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = (function (BaseObject) {\n  function Interaction(options) {\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {module:ol/PluggableMap}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n\n    /**\n     * @type {function(module:ol/MapBrowserEvent):boolean}\n     */\n    this.handleEvent = options.handleEvent;\n\n  }\n\n  if ( BaseObject ) Interaction.__proto__ = BaseObject;\n  Interaction.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Interaction.prototype.constructor = Interaction;\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.getActive = function getActive () {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  };\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {module:ol/PluggableMap} Map.\n   * @api\n   */\n  Interaction.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.setActive = function setActive (active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  };\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {module:ol/PluggableMap} map Map.\n   */\n  Interaction.prototype.setMap = function setMap (map) {\n    this.map_ = map;\n  };\n\n  return Interaction;\n}(BaseObject));\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {module:ol/coordinate~Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  var currentCenter = view.getCenter();\n  if (currentCenter) {\n    var center = view.constrainCenter(\n      [currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\n    if (opt_duration) {\n      view.animate({\n        duration: opt_duration,\n        easing: linear,\n        center: center\n      });\n    } else {\n      view.setCenter(center);\n    }\n  }\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotate(view, rotation, opt_anchor, opt_duration) {\n  rotation = view.constrainRotation(rotation, 0);\n  rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration) {\n  if (rotation !== undefined) {\n    var currentRotation = view.getRotation();\n    var currentCenter = view.getCenter();\n    if (currentRotation !== undefined && currentCenter && opt_duration > 0) {\n      view.animate({\n        rotation: rotation,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      view.rotate(rotation, opt_anchor);\n    }\n  }\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n * @param {number=} opt_direction Zooming direction; > 0 indicates\n *     zooming out, in which case the constraints system will select\n *     the largest nearest resolution; < 0 indicates zooming in, in\n *     which case the constraints system will select the smallest\n *     nearest resolution; == 0 indicates that the zooming direction\n *     is unknown/not relevant, in which case the constraints system\n *     will select the nearest resolution. If not defined 0 is\n *     assumed.\n */\nexport function zoom(view, resolution, opt_anchor, opt_duration, opt_direction) {\n  resolution = view.constrainResolution(resolution, 0, opt_direction);\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  var currentResolution = view.getResolution();\n  var resolution = view.constrainResolution(currentResolution, delta, 0);\n\n  if (resolution !== undefined) {\n    var resolutions = view.getResolutions();\n    resolution = clamp(\n      resolution,\n      view.getMinResolution() || resolutions[resolutions.length - 1],\n      view.getMaxResolution() || resolutions[0]);\n  }\n\n  // If we have a constraint on center, we need to change the anchor so that the\n  // new center is within the extent. We first calculate the new center, apply\n  // the constraint to it, and then calculate back the anchor\n  if (opt_anchor && resolution !== undefined && resolution !== currentResolution) {\n    var currentCenter = view.getCenter();\n    var center = view.calculateCenterZoom(resolution, opt_anchor);\n    center = view.constrainCenter(center);\n\n    opt_anchor = [\n      (resolution * currentCenter[0] - currentResolution * center[0]) /\n          (resolution - currentResolution),\n      (resolution * currentCenter[1] - currentResolution * center[1]) /\n          (resolution - currentResolution)\n    ];\n  }\n\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration) {\n  if (resolution) {\n    var currentResolution = view.getResolution();\n    var currentCenter = view.getCenter();\n    if (currentResolution !== undefined && currentCenter &&\n        resolution !== currentResolution && opt_duration) {\n      view.animate({\n        resolution: resolution,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      if (opt_anchor) {\n        var center = view.calculateCenterZoom(resolution, opt_anchor);\n        view.setCenter(center);\n      }\n      view.setResolution(resolution);\n    }\n  }\n}\n\nexport default Interaction;\n\n//# sourceMappingURL=Interaction.js.map","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = (function (Interaction) {\n  function DoubleClickZoom(opt_options) {\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Interaction ) DoubleClickZoom.__proto__ = Interaction;\n  DoubleClickZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  DoubleClickZoom.prototype.constructor = DoubleClickZoom;\n\n  return DoubleClickZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  var browserEvent = mapBrowserEvent.originalEvent;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    var map = mapBrowserEvent.map;\n    var anchor = mapBrowserEvent.coordinate;\n    var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    var view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;\n\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport {WEBKIT, MAC} from '../has.js';\n\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, module:ol/MapBrowserEvent): boolean} Condition\n */\n\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {module:ol/MapBrowserEvent} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function(event) {\n  return event.target.getTargetElement() === document.activeElement;\n};\n\n\n/**\n * Return always true.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @function\n * @api\n */\nexport var always = TRUE;\n\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return originalEvent.button == 0 &&\n      !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n\n/**\n * Return always false.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @function\n * @api\n */\nexport var never = FALSE;\n\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey;\n};\n\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function(mapBrowserEvent) {\n  var target = mapBrowserEvent.originalEvent.target;\n  var tagName = target.tagName;\n  return (\n    tagName !== 'INPUT' &&\n      tagName !== 'SELECT' &&\n      tagName !== 'TEXTAREA');\n};\n\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function(mapBrowserEvent) {\n  assert(mapBrowserEvent.pointerEvent, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return (\n    /** @type {module:ol/MapBrowserEvent} */ (mapBrowserEvent).pointerEvent.pointerType == 'mouse'\n  );\n};\n\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function(mapBrowserEvent) {\n  var pointerEvent = mapBrowserEvent.pointerEvent;\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n\n//# sourceMappingURL=condition.js.map","/**\n * @module ol/interaction/Pointer\n */\nimport {FALSE, UNDEFINED} from '../functions.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport Interaction from '../interaction/Interaction.js';\nimport {getValues} from '../obj.js';\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/Pointer}\n */\nvar handleDragEvent = UNDEFINED;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Capture dragging.\n * @this {module:ol/interaction/Pointer}\n */\nvar handleUpEvent = FALSE;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Capture dragging.\n * @this {module:ol/interaction/Pointer}\n */\nvar handleDownEvent = FALSE;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/Pointer}\n */\nvar handleMoveEvent = UNDEFINED;\n\n\n/**\n * @typedef {Object} Options\n * @property {(function(module:ol/MapBrowserPointerEvent):boolean)} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {(function(module:ol/MapBrowserPointerEvent))} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {(function(module:ol/MapBrowserEvent):boolean)} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {(function(module:ol/MapBrowserPointerEvent))} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {(function(module:ol/MapBrowserPointerEvent):boolean)} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} stopDown\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = (function (Interaction) {\n  function PointerInteraction(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(this, {\n      handleEvent: options.handleEvent || handleEvent\n    });\n\n    /**\n     * @type {function(module:ol/MapBrowserPointerEvent):boolean}\n     * @private\n     */\n    this.handleDownEvent_ = options.handleDownEvent ?\n      options.handleDownEvent : handleDownEvent;\n\n    /**\n     * @type {function(module:ol/MapBrowserPointerEvent)}\n     * @private\n     */\n    this.handleDragEvent_ = options.handleDragEvent ?\n      options.handleDragEvent : handleDragEvent;\n\n    /**\n     * @type {function(module:ol/MapBrowserPointerEvent)}\n     * @private\n     */\n    this.handleMoveEvent_ = options.handleMoveEvent ?\n      options.handleMoveEvent : handleMoveEvent;\n\n    /**\n     * @type {function(module:ol/MapBrowserPointerEvent):boolean}\n     * @private\n     */\n    this.handleUpEvent_ = options.handleUpEvent ?\n      options.handleUpEvent : handleUpEvent;\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @type {function(boolean):boolean}\n     * @protected\n     */\n    this.stopDown = options.stopDown ? options.stopDown : stopDown;\n\n    /**\n     * @type {!Object.<string, module:ol/pointer/PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array.<module:ol/pointer/PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n\n  }\n\n  if ( Interaction ) PointerInteraction.__proto__ = Interaction;\n  PointerInteraction.prototype = Object.create( Interaction && Interaction.prototype );\n  PointerInteraction.prototype.constructor = PointerInteraction;\n\n  /**\n   * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n   * @private\n   */\n  PointerInteraction.prototype.updateTrackedPointers_ = function updateTrackedPointers_ (mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      var event = mapBrowserEvent.pointerEvent;\n\n      var id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type ==\n          MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  };\n\n  return PointerInteraction;\n}(Interaction));\n\n\n/**\n * @param {Array.<module:ol/pointer/PointerEvent>} pointerEvents List of events.\n * @return {module:ol/pixel~Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  var length = pointerEvents.length;\n  var clientX = 0;\n  var clientY = 0;\n  for (var i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  var type = mapBrowserEvent.type;\n  return type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP;\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n * detected.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Pointer}\n * @api\n */\nexport function handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n\n  var stopEvent = false;\n  this.updateTrackedPointers_(mapBrowserEvent);\n  if (this.handlingDownUpSequence) {\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n      this.handleDragEvent_(mapBrowserEvent);\n    } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n      var handledUp = this.handleUpEvent_(mapBrowserEvent);\n      this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n    }\n  } else {\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n      var handled = this.handleDownEvent_(mapBrowserEvent);\n      this.handlingDownUpSequence = handled;\n      stopEvent = this.stopDown(handled);\n    } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n      this.handleMoveEvent_(mapBrowserEvent);\n    }\n  }\n  return !stopEvent;\n}\n\n\nexport default PointerInteraction;\n\n/**\n * @param {boolean} handled Was the event handled by the interaction?\n * @return {boolean} Should the `down` event be stopped?\n */\nfunction stopDown(handled) {\n  return handled;\n}\n\n//# sourceMappingURL=Pointer.js.map","/**\n * @module ol/interaction/DragPan\n */\nimport ViewHint from '../ViewHint.js';\nimport {scale as scaleCoordinate, rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {noModifierKeys} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {module:ol/Kinetic} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = (function (PointerInteraction) {\n  function DragPan(opt_options) {\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {module:ol/Kinetic|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {module:ol/pixel~Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n\n  }\n\n  if ( PointerInteraction ) DragPan.__proto__ = PointerInteraction;\n  DragPan.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragPan.prototype.constructor = DragPan;\n\n  return DragPan;\n}(PointerInteraction));\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  var targetPointers = this.targetPointers;\n  var centroid = centroidFromPointers(targetPointers);\n  if (targetPointers.length == this.lastPointersCount_) {\n    if (this.kinetic_) {\n      this.kinetic_.update(centroid[0], centroid[1]);\n    }\n    if (this.lastCentroid) {\n      var deltaX = this.lastCentroid[0] - centroid[0];\n      var deltaY = centroid[1] - this.lastCentroid[1];\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      var center = [deltaX, deltaY];\n      scaleCoordinate(center, view.getResolution());\n      rotateCoordinate(center, view.getRotation());\n      addCoordinate(center, view.getCenter());\n      center = view.constrainCenter(center);\n      view.setCenter(center);\n    }\n  } else if (this.kinetic_) {\n    // reset so we don't overestimate the kinetic energy after\n    // after one finger down, tiny drag, second finger down\n    this.kinetic_.begin();\n  }\n  this.lastCentroid = centroid;\n  this.lastPointersCount_ = targetPointers.length;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  if (this.targetPointers.length === 0) {\n    if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n      var distance = this.kinetic_.getDistance();\n      var angle = this.kinetic_.getAngle();\n      var center = /** @type {!module:ol/coordinate~Coordinate} */ (view.getCenter());\n      var centerpx = map.getPixelFromCoordinate(center);\n      var dest = map.getCoordinateFromPixel([\n        centerpx[0] - distance * Math.cos(angle),\n        centerpx[1] - distance * Math.sin(angle)\n      ]);\n      view.animate({\n        center: view.constrainCenter(dest),\n        duration: 500,\n        easing: easeOut\n      });\n    }\n    view.setHint(ViewHint.INTERACTING, -1);\n    return false;\n  } else {\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    this.lastCentroid = null;\n    if (!this.handlingDownUpSequence) {\n      view.setHint(ViewHint.INTERACTING, 1);\n    }\n    // stop any current animation\n    if (view.getAnimating()) {\n      view.setCenter(mapBrowserEvent.frameState.viewState.center);\n    }\n    if (this.kinetic_) {\n      this.kinetic_.begin();\n    }\n    // No kinetic as soon as more than one pointer on the screen is\n    // detected. This is to prevent nasty pans after pinch.\n    this.noKinetic_ = this.targetPointers.length > 1;\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\nexport default DragPan;\n\n//# sourceMappingURL=DragPan.js.map","/**\n * @module ol/interaction/DragRotate\n */\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {altShiftKeysOnly, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = (function (PointerInteraction) {\n  function DragRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) DragRotate.__proto__ = PointerInteraction;\n  DragRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragRotate.prototype.constructor = DragRotate;\n\n  return DragRotate;\n}(PointerInteraction));\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  if (view.getConstraints().rotation === disable) {\n    return;\n  }\n  var size = map.getSize();\n  var offset = mapBrowserEvent.pixel;\n  var theta =\n      Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n  if (this.lastAngle_ !== undefined) {\n    var delta = theta - this.lastAngle_;\n    var rotation = view.getRotation();\n    rotateWithoutConstraints(view, rotation - delta);\n  }\n  this.lastAngle_ = theta;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  view.setHint(ViewHint.INTERACTING, -1);\n  var rotation = view.getRotation();\n  rotate(view, rotation, undefined, this.duration_);\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n    var map = mapBrowserEvent.map;\n    map.getView().setHint(ViewHint.INTERACTING, 1);\n    this.lastAngle_ = undefined;\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default DragRotate;\n\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nvar RenderBox = (function (Disposable) {\n  function RenderBox(className) {\n    Disposable.call(this);\n\n    /**\n     * @type {module:ol/geom/Polygon}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = /** @type {HTMLDivElement} */ (document.createElement('div'));\n    this.element_.style.position = 'absolute';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {module:ol/PluggableMap}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/pixel~Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/pixel~Pixel}\n     */\n    this.endPixel_ = null;\n\n  }\n\n  if ( Disposable ) RenderBox.__proto__ = Disposable;\n  RenderBox.prototype = Object.create( Disposable && Disposable.prototype );\n  RenderBox.prototype.constructor = RenderBox;\n\n  /**\n   * @inheritDoc\n   */\n  RenderBox.prototype.disposeInternal = function disposeInternal () {\n    this.setMap(null);\n  };\n\n  /**\n   * @private\n   */\n  RenderBox.prototype.render_ = function render_ () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var px = 'px';\n    var style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  };\n\n  /**\n   * @param {module:ol/PluggableMap} map Map.\n   */\n  RenderBox.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      var style = this.element_.style;\n      style.left = style.top = style.width = style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  };\n\n  /**\n   * @param {module:ol/pixel~Pixel} startPixel Start pixel.\n   * @param {module:ol/pixel~Pixel} endPixel End pixel.\n   */\n  RenderBox.prototype.setPixels = function setPixels (startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  };\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  RenderBox.prototype.createOrUpdateGeometry = function createOrUpdateGeometry () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]]\n    ];\n    var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  };\n\n  /**\n   * @return {module:ol/geom/Polygon} Geometry.\n   */\n  RenderBox.prototype.getGeometry = function getGeometry () {\n    return this.geometry_;\n  };\n\n  return RenderBox;\n}(Disposable));\n\n\nexport default RenderBox;\n\n//# sourceMappingURL=Box.js.map","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {always, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {UNDEFINED} from '../functions.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport RenderBox from '../render/Box.js';\n\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, module:ol/MapBrowserEvent, module:ol/pixel~Pixel, module:ol/pixel~Pixel):boolean} EndCondition\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {module:ol/interaction/DragBox~EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:module:ol/interaction/DragBox, module:ol/MapBrowserEvent)} onBoxEnd Code to execute just\n * before `boxend` is fired.\n */\n\n\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = (function (Event) {\n  function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n    Event.call(this, type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {module:ol/coordinate~Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {module:ol/MapBrowserEvent}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n  if ( Event ) DragBoxEvent.__proto__ = Event;\n  DragBoxEvent.prototype = Object.create( Event && Event.prototype );\n  DragBoxEvent.prototype.constructor = DragBoxEvent;\n\n  return DragBoxEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires module:ol/interaction/DragBox~DragBoxEvent\n * @api\n */\nvar DragBox = (function (PointerInteraction) {\n  function DragBox(opt_options) {\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n    * @type {module:ol/render/Box}\n    * @private\n    */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @type {function(this:module:ol/interaction/DragBox, module:ol/MapBrowserEvent)}\n     * @private\n     */\n    this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : UNDEFINED;\n\n    /**\n    * @type {module:ol/pixel~Pixel}\n    * @private\n    */\n    this.startPixel_ = null;\n\n    /**\n    * @private\n    * @type {module:ol/events/condition~Condition}\n    */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n    * @private\n    * @type {module:ol/interaction/DragBox~EndCondition}\n    */\n    this.boxEndCondition_ = options.boxEndCondition ?\n      options.boxEndCondition : defaultBoxEndCondition;\n  }\n\n  if ( PointerInteraction ) DragBox.__proto__ = PointerInteraction;\n  DragBox.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragBox.prototype.constructor = DragBox;\n\n  /**\n  * Returns geometry of last drawn box.\n  * @return {module:ol/geom/Polygon} Geometry.\n  * @api\n  */\n  DragBox.prototype.getGeometry = function getGeometry () {\n    return this.box_.getGeometry();\n  };\n\n  return DragBox;\n}(PointerInteraction));\n\n\n/**\n * The default condition for determining whether the boxend event\n * should fire.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent The originating MapBrowserEvent\n *     leading to the box end.\n * @param {module:ol/pixel~Pixel} startPixel The starting pixel of the box.\n * @param {module:ol/pixel~Pixel} endPixel The end pixel of the box.\n * @return {boolean} Whether or not the boxend condition should be fired.\n * @this {module:ol/interaction/DragBox}\n */\nfunction defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n  var width = endPixel[0] - startPixel[0];\n  var height = endPixel[1] - startPixel[1];\n  return width * width + height * height >= this.minArea_;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n  this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG,\n    mapBrowserEvent.coordinate, mapBrowserEvent));\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  this.box_.setMap(null);\n\n  if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n    this.onBoxEnd_(mapBrowserEvent);\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)) {\n    this.startPixel_ = mapBrowserEvent.pixel;\n    this.box_.setMap(mapBrowserEvent.map);\n    this.box_.setPixels(this.startPixel_, this.startPixel_);\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\nexport default DragBox;\n\n//# sourceMappingURL=DragBox.js.map","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from '../interaction/DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = (function (DragBox) {\n  function DragZoom(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var condition = options.condition ? options.condition : shiftKeyOnly;\n\n    DragBox.call(this, {\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      onBoxEnd: onBoxEnd\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  if ( DragBox ) DragZoom.__proto__ = DragBox;\n  DragZoom.prototype = Object.create( DragBox && DragBox.prototype );\n  DragZoom.prototype.constructor = DragZoom;\n\n  return DragZoom;\n}(DragBox));\n\n\n/**\n * @this {module:ol/interaction/DragZoom}\n */\nfunction onBoxEnd() {\n  var map = this.getMap();\n  var view = /** @type {!module:ol/View} */ (map.getView());\n  var size = /** @type {!module:ol/size~Size} */ (map.getSize());\n  var extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    var mapExtent = view.calculateExtent(size);\n    var boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(getBottomLeft(extent)),\n      map.getPixelFromCoordinate(getTopRight(extent))]);\n    var factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  var resolution = view.constrainResolution(\n    view.getResolutionForExtent(extent, size));\n\n  var center = getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n}\n\n\nexport default DragZoom;\n\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n\n//# sourceMappingURL=KeyCode.js.map","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = (function (Interaction) {\n  function KeyboardPan(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @param {module:ol/MapBrowserEvent} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function(mapBrowserEvent) {\n      return noModifierKeys(mapBrowserEvent) &&\n        targetNotEditable(mapBrowserEvent);\n    };\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition !== undefined ?\n      options.condition : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ = options.pixelDelta !== undefined ?\n      options.pixelDelta : 128;\n\n  }\n\n  if ( Interaction ) KeyboardPan.__proto__ = Interaction;\n  KeyboardPan.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardPan.prototype.constructor = KeyboardPan;\n\n  return KeyboardPan;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\n    var keyEvent = mapBrowserEvent.originalEvent;\n    var keyCode = keyEvent.keyCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n        keyCode == KeyCode.LEFT ||\n        keyCode == KeyCode.RIGHT ||\n        keyCode == KeyCode.UP)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n      var deltaX = 0, deltaY = 0;\n      if (keyCode == KeyCode.DOWN) {\n        deltaY = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.LEFT) {\n        deltaX = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.RIGHT) {\n        deltaX = mapUnitsDelta;\n      } else {\n        deltaY = mapUnitsDelta;\n      }\n      var delta = [deltaX, deltaY];\n      rotateCoordinate(delta, view.getRotation());\n      pan(view, delta, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardPan;\n\n//# sourceMappingURL=KeyboardPan.js.map","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link moudle:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = (function (Interaction) {\n  function KeyboardZoom(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n  }\n\n  if ( Interaction ) KeyboardZoom.__proto__ = Interaction;\n  KeyboardZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardZoom.prototype.constructor = KeyboardZoom;\n\n  return KeyboardZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS) {\n    var keyEvent = mapBrowserEvent.originalEvent;\n    var charCode = keyEvent.charCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n      var map = mapBrowserEvent.map;\n      var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n      var view = map.getView();\n      zoomByDelta(view, delta, undefined, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardZoom;\n\n//# sourceMappingURL=KeyboardZoom.js.map","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {always} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX, SAFARI} from '../has.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Maximum mouse wheel delta.\n * @type {number}\n */\nvar MAX_DELTA = 1;\n\n\n/**\n * @enum {string}\n */\nexport var Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [constrainResolution=false] When using a trackpad or\n * magic mouse, zoom to the closest integer zoom level after the scroll gesture\n * ends.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = (function (Interaction) {\n  function MouseWheelZoom(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {?module:ol/coordinate~Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.timeoutId_ = undefined;\n\n    /**\n     * @private\n     * @type {module:ol/interaction/MouseWheelZoom~Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {number|undefined}\n     */\n    this.trackpadTimeoutId_ = undefined;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.trackpadDeltaPerZoom_ = 300;\n\n    /**\n     * The zoom factor by which scroll zooming is allowed to exceed the limits.\n     * @private\n     * @type {number}\n     */\n    this.trackpadZoomBuffer_ = 1.5;\n\n  }\n\n  if ( Interaction ) MouseWheelZoom.__proto__ = Interaction;\n  MouseWheelZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  MouseWheelZoom.prototype.constructor = MouseWheelZoom;\n\n  /**\n   * @private\n   */\n  MouseWheelZoom.prototype.decrementInteractingHint_ = function decrementInteractingHint_ () {\n    this.trackpadTimeoutId_ = undefined;\n    var view = this.getMap().getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n  };\n\n  /**\n   * @private\n   * @param {module:ol/PluggableMap} map Map.\n   */\n  MouseWheelZoom.prototype.handleWheelZoom_ = function handleWheelZoom_ (map) {\n    var view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    var maxDelta = MAX_DELTA;\n    var delta = clamp(this.delta_, -maxDelta, maxDelta);\n    zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n    this.mode_ = undefined;\n    this.delta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  };\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  MouseWheelZoom.prototype.setMouseAnchor = function setMouseAnchor (useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  };\n\n  return MouseWheelZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * mousewheel-event) and eventually zooms the map.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} Allow event propagation.\n * @this {module:ol/interaction/MouseWheelZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n  var type = mapBrowserEvent.type;\n  if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n    return true;\n  }\n\n  mapBrowserEvent.preventDefault();\n\n  var map = mapBrowserEvent.map;\n  var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n\n  if (this.useAnchor_) {\n    this.lastAnchor_ = mapBrowserEvent.coordinate;\n  }\n\n  // Delta normalisation inspired by\n  // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n  var delta;\n  if (mapBrowserEvent.type == EventType.WHEEL) {\n    delta = wheelEvent.deltaY;\n    if (FIREFOX &&\n        wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      delta /= DEVICE_PIXEL_RATIO;\n    }\n    if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      delta *= 40;\n    }\n  } else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n    delta = -wheelEvent.wheelDeltaY;\n    if (SAFARI) {\n      delta /= 3;\n    }\n  }\n\n  if (delta === 0) {\n    return false;\n  }\n\n  var now = Date.now();\n\n  if (this.startTime_ === undefined) {\n    this.startTime_ = now;\n  }\n\n  if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n    this.mode_ = Math.abs(delta) < 4 ?\n      Mode.TRACKPAD :\n      Mode.WHEEL;\n  }\n\n  if (this.mode_ === Mode.TRACKPAD) {\n    var view = map.getView();\n    if (this.trackpadTimeoutId_) {\n      clearTimeout(this.trackpadTimeoutId_);\n    } else {\n      view.setHint(ViewHint.INTERACTING, 1);\n    }\n    this.trackpadTimeoutId_ = setTimeout(this.decrementInteractingHint_.bind(this), this.trackpadEventGap_);\n    var resolution = view.getResolution() * Math.pow(2, delta / this.trackpadDeltaPerZoom_);\n    var minResolution = view.getMinResolution();\n    var maxResolution = view.getMaxResolution();\n    var rebound = 0;\n    if (resolution < minResolution) {\n      resolution = Math.max(resolution, minResolution / this.trackpadZoomBuffer_);\n      rebound = 1;\n    } else if (resolution > maxResolution) {\n      resolution = Math.min(resolution, maxResolution * this.trackpadZoomBuffer_);\n      rebound = -1;\n    }\n    if (this.lastAnchor_) {\n      var center = view.calculateCenterZoom(resolution, this.lastAnchor_);\n      view.setCenter(view.constrainCenter(center));\n    }\n    view.setResolution(resolution);\n\n    if (rebound === 0 && this.constrainResolution_) {\n      view.animate({\n        resolution: view.constrainResolution(resolution, delta > 0 ? -1 : 1),\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: this.duration_\n      });\n    }\n\n    if (rebound > 0) {\n      view.animate({\n        resolution: minResolution,\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: 500\n      });\n    } else if (rebound < 0) {\n      view.animate({\n        resolution: maxResolution,\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: 500\n      });\n    }\n    this.startTime_ = now;\n    return false;\n  }\n\n  this.delta_ += delta;\n\n  var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n  clearTimeout(this.timeoutId_);\n  this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n\n  return false;\n}\n\n\nexport default MouseWheelZoom;\n\n//# sourceMappingURL=MouseWheelZoom.js.map","/**\n * @module ol/interaction/PinchRotate\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\nimport {disable} from '../rotationconstraint.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = (function (PointerInteraction) {\n  function PinchRotate(opt_options) {\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) PinchRotate.__proto__ = PointerInteraction;\n  PinchRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchRotate.prototype.constructor = PinchRotate;\n\n  return PinchRotate;\n}(PointerInteraction));\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  var rotationDelta = 0.0;\n\n  var touch0 = this.targetPointers[0];\n  var touch1 = this.targetPointers[1];\n\n  // angle between touches\n  var angle = Math.atan2(\n    touch1.clientY - touch0.clientY,\n    touch1.clientX - touch0.clientX);\n\n  if (this.lastAngle_ !== undefined) {\n    var delta = angle - this.lastAngle_;\n    this.rotationDelta_ += delta;\n    if (!this.rotating_ &&\n        Math.abs(this.rotationDelta_) > this.threshold_) {\n      this.rotating_ = true;\n    }\n    rotationDelta = delta;\n  }\n  this.lastAngle_ = angle;\n\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  if (view.getConstraints().rotation === disable) {\n    return;\n  }\n\n  // rotate anchor point.\n  // FIXME: should be the intersection point between the lines:\n  //     touch0,touch1 and previousTouch0,previousTouch1\n  var viewportPosition = map.getViewport().getBoundingClientRect();\n  var centroid = centroidFromPointers(this.targetPointers);\n  centroid[0] -= viewportPosition.left;\n  centroid[1] -= viewportPosition.top;\n  this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n  // rotate\n  if (this.rotating_) {\n    var rotation = view.getRotation();\n    map.render();\n    rotateWithoutConstraints(view, rotation + rotationDelta, this.anchor_);\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (this.targetPointers.length < 2) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    if (this.rotating_) {\n      var rotation = view.getRotation();\n      rotate(view, rotation, this.anchor_, this.duration_);\n    }\n    return false;\n  } else {\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length >= 2) {\n    var map = mapBrowserEvent.map;\n    this.anchor_ = null;\n    this.lastAngle_ = undefined;\n    this.rotating_ = false;\n    this.rotationDelta_ = 0.0;\n    if (!this.handlingDownUpSequence) {\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default PinchRotate;\n\n//# sourceMappingURL=PinchRotate.js.map","/**\n * @module ol/interaction/PinchZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {zoom, zoomWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the pinch gesture ends.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = (function (PointerInteraction) {\n  function PinchZoom(opt_options) {\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n\n  }\n\n  if ( PointerInteraction ) PinchZoom.__proto__ = PointerInteraction;\n  PinchZoom.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchZoom.prototype.constructor = PinchZoom;\n\n  return PinchZoom;\n}(PointerInteraction));\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  var scaleDelta = 1.0;\n\n  var touch0 = this.targetPointers[0];\n  var touch1 = this.targetPointers[1];\n  var dx = touch0.clientX - touch1.clientX;\n  var dy = touch0.clientY - touch1.clientY;\n\n  // distance between touches\n  var distance = Math.sqrt(dx * dx + dy * dy);\n\n  if (this.lastDistance_ !== undefined) {\n    scaleDelta = this.lastDistance_ / distance;\n  }\n  this.lastDistance_ = distance;\n\n\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  var resolution = view.getResolution();\n  var maxResolution = view.getMaxResolution();\n  var minResolution = view.getMinResolution();\n  var newResolution = resolution * scaleDelta;\n  if (newResolution > maxResolution) {\n    scaleDelta = maxResolution / resolution;\n    newResolution = maxResolution;\n  } else if (newResolution < minResolution) {\n    scaleDelta = minResolution / resolution;\n    newResolution = minResolution;\n  }\n\n  if (scaleDelta != 1.0) {\n    this.lastScaleDelta_ = scaleDelta;\n  }\n\n  // scale anchor point.\n  var viewportPosition = map.getViewport().getBoundingClientRect();\n  var centroid = centroidFromPointers(this.targetPointers);\n  centroid[0] -= viewportPosition.left;\n  centroid[1] -= viewportPosition.top;\n  this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n  // scale, bypass the resolution constraint\n  map.render();\n  zoomWithoutConstraints(view, newResolution, this.anchor_);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (this.targetPointers.length < 2) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    var resolution = view.getResolution();\n    if (this.constrainResolution_ ||\n        resolution < view.getMinResolution() ||\n        resolution > view.getMaxResolution()) {\n      // Zoom to final resolution, with an animation, and provide a\n      // direction not to zoom out/in if user was pinching in/out.\n      // Direction is > 0 if pinching out, and < 0 if pinching in.\n      var direction = this.lastScaleDelta_ - 1;\n      zoom(view, resolution, this.anchor_, this.duration_, direction);\n    }\n    return false;\n  } else {\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length >= 2) {\n    var map = mapBrowserEvent.map;\n    this.anchor_ = null;\n    this.lastDistance_ = undefined;\n    this.lastScaleDelta_ = 1;\n    if (!this.handlingDownUpSequence) {\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default PinchZoom;\n\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport {TRUE} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from '../interaction/Interaction.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array.<function(new: module:ol/format/Feature)>} [formatConstructors] Format constructors.\n * @property {module:ol/source/Vector} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {module:ol/proj~ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {Element} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n\n/**\n * @enum {string}\n */\nvar DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event module:ol/interaction/DragAndDrop~DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nvar DragAndDropEvent = (function (Event) {\n  function DragAndDropEvent(type, file, opt_features, opt_projection) {\n\n    Event.call(this, type);\n\n    /**\n     * The features parsed from dropped data.\n     * @type {Array.<module:ol/Feature>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n\n    /**\n     * The dropped file.\n     * @type {File}\n     * @api\n     */\n    this.file = file;\n\n    /**\n     * The feature projection.\n     * @type {module:ol/proj/Projection|undefined}\n     * @api\n     */\n    this.projection = opt_projection;\n\n  }\n\n  if ( Event ) DragAndDropEvent.__proto__ = Event;\n  DragAndDropEvent.prototype = Object.create( Event && Event.prototype );\n  DragAndDropEvent.prototype.constructor = DragAndDropEvent;\n\n  return DragAndDropEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n * @api\n *\n * @fires module:ol/interaction/DragAndDrop~DragAndDropEvent\n */\nvar DragAndDrop = (function (Interaction) {\n  function DragAndDrop(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(this, {\n      handleEvent: TRUE\n    });\n\n    /**\n     * @private\n     * @type {Array.<function(new: module:ol/format/Feature)>}\n     */\n    this.formatConstructors_ = options.formatConstructors ?\n      options.formatConstructors : [];\n\n    /**\n     * @private\n     * @type {module:ol/proj/Projection}\n     */\n    this.projection_ = options.projection ?\n      getProjection(options.projection) : null;\n\n    /**\n     * @private\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.dropListenKeys_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/source/Vector}\n     */\n    this.source_ = options.source || null;\n\n    /**\n     * @private\n     * @type {Element}\n     */\n    this.target = options.target ? options.target : null;\n\n  }\n\n  if ( Interaction ) DragAndDrop.__proto__ = Interaction;\n  DragAndDrop.prototype = Object.create( Interaction && Interaction.prototype );\n  DragAndDrop.prototype.constructor = DragAndDrop;\n\n  /**\n   * @param {File} file File.\n   * @param {Event} event Load event.\n   * @private\n   */\n  DragAndDrop.prototype.handleResult_ = function handleResult_ (file, event) {\n    var this$1 = this;\n\n    var result = event.target.result;\n    var map = this.getMap();\n    var projection = this.projection_;\n    if (!projection) {\n      var view = map.getView();\n      projection = view.getProjection();\n    }\n\n    var formatConstructors = this.formatConstructors_;\n    var features = [];\n    for (var i = 0, ii = formatConstructors.length; i < ii; ++i) {\n      /**\n       * Avoid \"cannot instantiate abstract class\" error.\n       * @type {Function}\n       */\n      var formatConstructor = formatConstructors[i];\n      /**\n       * @type {module:ol/format/Feature}\n       */\n      var format = new formatConstructor();\n      features = this$1.tryReadFeatures_(format, result, {\n        featureProjection: projection\n      });\n      if (features && features.length > 0) {\n        break;\n      }\n    }\n    if (this.source_) {\n      this.source_.clear();\n      this.source_.addFeatures(features);\n    }\n    this.dispatchEvent(\n      new DragAndDropEvent(\n        DragAndDropEventType.ADD_FEATURES, file,\n        features, projection));\n  };\n\n  /**\n   * @private\n   */\n  DragAndDrop.prototype.registerListeners_ = function registerListeners_ () {\n    var map = this.getMap();\n    if (map) {\n      var dropArea = this.target ? this.target : map.getViewport();\n      this.dropListenKeys_ = [\n        listen(dropArea, EventType.DROP, handleDrop, this),\n        listen(dropArea, EventType.DRAGENTER, handleStop, this),\n        listen(dropArea, EventType.DRAGOVER, handleStop, this),\n        listen(dropArea, EventType.DROP, handleStop, this)\n      ];\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragAndDrop.prototype.setActive = function setActive (active) {\n    Interaction.prototype.setActive.call(this, active);\n    if (active) {\n      this.registerListeners_();\n    } else {\n      this.unregisterListeners_();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragAndDrop.prototype.setMap = function setMap (map) {\n    this.unregisterListeners_();\n    Interaction.prototype.setMap.call(this, map);\n    if (this.getActive()) {\n      this.registerListeners_();\n    }\n  };\n\n  /**\n   * @param {module:ol/format/Feature} format Format.\n   * @param {string} text Text.\n   * @param {module:ol/format/Feature~ReadOptions} options Read options.\n   * @private\n   * @return {Array.<module:ol/Feature>} Features.\n   */\n  DragAndDrop.prototype.tryReadFeatures_ = function tryReadFeatures_ (format, text, options) {\n    try {\n      return format.readFeatures(text, options);\n    } catch (e) {\n      return null;\n    }\n  };\n\n  /**\n   * @private\n   */\n  DragAndDrop.prototype.unregisterListeners_ = function unregisterListeners_ () {\n    if (this.dropListenKeys_) {\n      this.dropListenKeys_.forEach(unlistenByKey);\n      this.dropListenKeys_ = null;\n    }\n  };\n\n  return DragAndDrop;\n}(Interaction));\n\n\n/**\n * @param {DragEvent} event Event.\n * @this {module:ol/interaction/DragAndDrop}\n */\nfunction handleDrop(event) {\n  var this$1 = this;\n\n  var files = event.dataTransfer.files;\n  for (var i = 0, ii = files.length; i < ii; ++i) {\n    var file = files.item(i);\n    var reader = new FileReader();\n    reader.addEventListener(EventType.LOAD, this$1.handleResult_.bind(this$1, file));\n    reader.readAsText(file);\n  }\n}\n\n\n/**\n * @param {DragEvent} event Event.\n */\nfunction handleStop(event) {\n  event.stopPropagation();\n  event.preventDefault();\n  event.dataTransfer.dropEffect = 'copy';\n}\n\n\nexport default DragAndDrop;\n\n//# sourceMappingURL=DragAndDrop.js.map","/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {shiftKeyOnly, mouseOnly} from '../events/condition.js';\nimport {rotate, rotateWithoutConstraints, zoom, zoomWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nvar DragRotateAndZoom = (function (PointerInteraction) {\n  function DragRotateAndZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent\n    });\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastMagnitude_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n  }\n\n  if ( PointerInteraction ) DragRotateAndZoom.__proto__ = PointerInteraction;\n  DragRotateAndZoom.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragRotateAndZoom.prototype.constructor = DragRotateAndZoom;\n\n  return DragRotateAndZoom;\n}(PointerInteraction));\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  var map = mapBrowserEvent.map;\n  var size = map.getSize();\n  var offset = mapBrowserEvent.pixel;\n  var deltaX = offset[0] - size[0] / 2;\n  var deltaY = size[1] / 2 - offset[1];\n  var theta = Math.atan2(deltaY, deltaX);\n  var magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n  var view = map.getView();\n  if (view.getConstraints().rotation !== disable && this.lastAngle_ !== undefined) {\n    var angleDelta = theta - this.lastAngle_;\n    rotateWithoutConstraints(view, view.getRotation() - angleDelta);\n  }\n  this.lastAngle_ = theta;\n  if (this.lastMagnitude_ !== undefined) {\n    var resolution = this.lastMagnitude_ * (view.getResolution() / magnitude);\n    zoomWithoutConstraints(view, resolution);\n  }\n  if (this.lastMagnitude_ !== undefined) {\n    this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n  }\n  this.lastMagnitude_ = magnitude;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  view.setHint(ViewHint.INTERACTING, -1);\n  var direction = this.lastScaleDelta_ - 1;\n  rotate(view, view.getRotation());\n  zoom(view, view.getResolution(), undefined, this.duration_, direction);\n  this.lastScaleDelta_ = 0;\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (this.condition_(mapBrowserEvent)) {\n    mapBrowserEvent.map.getView().setHint(ViewHint.INTERACTING, 1);\n    this.lastAngle_ = undefined;\n    this.lastMagnitude_ = undefined;\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default DragRotateAndZoom;\n\n//# sourceMappingURL=DragRotateAndZoom.js.map","/**\n * @module ol/geom/Circle\n */\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinate} from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nvar Circle = (function (SimpleGeometry) {\n  function Circle(center, opt_radius, opt_layout) {\n    SimpleGeometry.call(this);\n    if (opt_layout !== undefined && opt_radius === undefined) {\n      this.setFlatCoordinates(opt_layout, center);\n    } else {\n      var radius = opt_radius ? opt_radius : 0;\n      this.setCenterAndRadius(center, radius, opt_layout);\n    }\n  }\n\n  if ( SimpleGeometry ) Circle.__proto__ = SimpleGeometry;\n  Circle.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Circle.prototype.constructor = Circle;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/Circle} Clone.\n   * @override\n   * @api\n   */\n  Circle.prototype.clone = function clone () {\n    return new Circle(this.flatCoordinates.slice(), undefined, this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var dx = x - flatCoordinates[0];\n    var dy = y - flatCoordinates[1];\n    var squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (var i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        var delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (var i$1 = 2; i$1 < this.stride; ++i$1) {\n          closestPoint[i$1] = flatCoordinates[i$1];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.containsXY = function containsXY (x, y) {\n    var flatCoordinates = this.flatCoordinates;\n    var dx = x - flatCoordinates[0];\n    var dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  };\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {module:ol/coordinate~Coordinate} Center.\n   * @api\n   */\n  Circle.prototype.getCenter = function getCenter () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.computeExtent = function computeExtent (extent) {\n    var flatCoordinates = this.flatCoordinates;\n    var radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n      extent);\n  };\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  Circle.prototype.getRadius = function getRadius () {\n    return Math.sqrt(this.getRadiusSquared_());\n  };\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  Circle.prototype.getRadiusSquared_ = function getRadiusSquared_ () {\n    var dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    var dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Circle.prototype.getType = function getType () {\n    return GeometryType.CIRCLE;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Circle.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      var center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate, this);\n    }\n    return false;\n\n  };\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {module:ol/coordinate~Coordinate} center Center.\n   * @api\n   */\n  Circle.prototype.setCenter = function setCenter (center) {\n    var stride = this.stride;\n    var radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    var flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (var i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  };\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!module:ol/coordinate~Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @api\n   */\n  Circle.prototype.setCenterAndRadius = function setCenterAndRadius (center, radius, opt_layout) {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array.<number>} */\n    var flatCoordinates = this.flatCoordinates;\n    var offset = deflateCoordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (var i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.getCoordinates = function getCoordinates () {};\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {};\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  Circle.prototype.setRadius = function setRadius (radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  };\n\n  return Circle;\n}(SimpleGeometry));\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {module:ol/proj~ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {module:ol/proj~ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {module:ol/geom/Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n  var pointX = NaN;\n  var pointY = NaN;\n  var n = (end - offset) / stride;\n  if (n === 1) {\n    pointX = flatCoordinates[offset];\n    pointY = flatCoordinates[offset + 1];\n  } else if (n == 2) {\n    pointX = (1 - fraction) * flatCoordinates[offset] +\n        fraction * flatCoordinates[offset + stride];\n    pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n        fraction * flatCoordinates[offset + stride + 1];\n  } else if (n !== 0) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    var cumulativeLengths = [0];\n    for (var i = offset + stride; i < end; i += stride) {\n      var x2 = flatCoordinates[i];\n      var y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    var target = fraction * length;\n    var index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      var t = (target - cumulativeLengths[-index - 2]) /\n          (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      var o = offset + (-index - 2) * stride;\n      pointX = lerp(\n        flatCoordinates[o], flatCoordinates[o + stride], t);\n      pointY = lerp(\n        flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n    } else {\n      pointX = flatCoordinates[offset + index * stride];\n      pointY = flatCoordinates[offset + index * stride + 1];\n    }\n  }\n  if (opt_dest) {\n    opt_dest[0] = pointX;\n    opt_dest[1] = pointY;\n    return opt_dest;\n  } else {\n    return [pointX, pointY];\n  }\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n  if (end == offset) {\n    return null;\n  }\n  var coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  var lo = offset / stride;\n  var hi = end / stride;\n  while (lo < hi) {\n    var mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  var m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  var m1 = flatCoordinates[(lo + 1) * stride - 1];\n  var t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (var i = 0; i < stride - 1; ++i) {\n    coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i],\n      flatCoordinates[lo * stride + i], t));\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n  }\n  var coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates, offset, end, stride, m, false);\n    }\n    offset = end;\n  }\n  return null;\n}\n\n//# sourceMappingURL=interpolate.js.map","/**\n * @module ol/geom/flat/length\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  var length = 0;\n  for (var i = offset + stride; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n\n//# sourceMappingURL=length.js.map","/**\n * @module ol/geom/LineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from '../geom/flat/interpolate.js';\nimport {intersectsLineString} from '../geom/flat/intersectsextent.js';\nimport {lineStringLength} from '../geom/flat/length.js';\nimport {forEach as forEachSegment} from '../geom/flat/segments.js';\nimport {douglasPeucker} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = (function (SimpleGeometry) {\n  function LineString(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n    } else {\n      this.setCoordinates(coordinates, opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LineString.__proto__ = SimpleGeometry;\n  LineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LineString.prototype.constructor = LineString;\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @api\n   */\n  LineString.prototype.appendCoordinate = function appendCoordinate (coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/LineString} Clone.\n   * @override\n   * @api\n   */\n  LineString.prototype.clone = function clone () {\n    return new LineString(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, module:ol/coordinate~Coordinate, module:ol/coordinate~Coordinate): T} callback Function\n   *     called for each segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  LineString.prototype.forEachSegment = function forEachSegment$1 (callback) {\n    return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @return {module:ol/coordinate~Coordinate} Coordinate.\n   * @api\n   */\n  LineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate) {\n    if (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(this.flatCoordinates, 0,\n      this.flatCoordinates.length, this.stride, m, extrapolate);\n  };\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {module:ol/coordinate~Coordinate=} opt_dest Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {module:ol/coordinate~Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  LineString.prototype.getCoordinateAt = function getCoordinateAt (fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      fraction, opt_dest);\n  };\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  LineString.prototype.getLength = function getLength () {\n    return lineStringLength(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @return {Array.<number>} Flat midpoint.\n   */\n  LineString.prototype.getFlatMidpoint = function getFlatMidpoint () {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.getType = function getType () {\n    return GeometryType.LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineString(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      extent);\n  };\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LineString;\n}(SimpleGeometry));\n\n\nexport default LineString;\n\n//# sourceMappingURL=LineString.js.map","/**\n * @module ol/geom/MultiLineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateCoordinatesArray} from '../geom/flat/inflate.js';\nimport {interpolatePoint, lineStringsCoordinateAtM} from '../geom/flat/interpolate.js';\nimport {intersectsLineStringArray} from '../geom/flat/intersectsextent.js';\nimport {douglasPeuckerArray} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = (function (SimpleGeometry) {\n  function MultiLineString(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array.<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(coordinates, opt_layout);\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n      this.ends_ = opt_ends;\n    } else {\n      var layout = this.getLayout();\n      var flatCoordinates = [];\n      var ends = [];\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var lineString = coordinates[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n\n  }\n\n  if ( SimpleGeometry ) MultiLineString.__proto__ = SimpleGeometry;\n  MultiLineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiLineString.prototype.constructor = MultiLineString;\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {module:ol/geom/LineString} lineString LineString.\n   * @api\n   */\n  MultiLineString.prototype.appendLineString = function appendLineString (lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/MultiLineString} Clone.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.clone = function clone () {\n    return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiLineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n   * @return {module:ol/coordinate~Coordinate} Coordinate.\n   * @api\n   */\n  MultiLineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate, opt_interpolate) {\n    if ((this.layout != GeometryLayout.XYM &&\n         this.layout != GeometryLayout.XYZM) ||\n        this.flatCoordinates.length === 0) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(this.flatCoordinates, 0,\n      this.ends_, this.stride, m, extrapolate, interpolate);\n  };\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array.<Array.<module:ol/coordinate~Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinatesArray(\n      this.flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array.<number>} Ends.\n   */\n  MultiLineString.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {module:ol/geom/LineString} LineString.\n   * @api\n   */\n  MultiLineString.prototype.getLineString = function getLineString (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array.<module:ol/geom/LineString>} LineStrings.\n   * @api\n   */\n  MultiLineString.prototype.getLineStrings = function getLineStrings () {\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var layout = this.layout;\n    /** @type {Array.<module:ol/geom/LineString>} */\n    var lineStrings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  };\n\n  /**\n   * @return {Array.<number>} Flat midpoints.\n   */\n  MultiLineString.prototype.getFlatMidpoints = function getFlatMidpoints () {\n    var midpoints = [];\n    var flatCoordinates = this.flatCoordinates;\n    var offset = 0;\n    var ends = this.ends_;\n    var stride = this.stride;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var midpoint = interpolatePoint(\n        flatCoordinates, offset, end, stride, 0.5);\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiLineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiLineString.prototype.getType = function getType () {\n    return GeometryType.MULTI_LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiLineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array.<Array.<module:ol/coordinate~Coordinate>>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return MultiLineString;\n}(SimpleGeometry));\n\n\nexport default MultiLineString;\n\n//# sourceMappingURL=MultiLineString.js.map","/**\n * @module ol/geom/MultiPoint\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = (function (SimpleGeometry) {\n  function MultiPoint(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n    } else {\n      this.setCoordinates(coordinates, opt_layout);\n    }\n  }\n\n  if ( SimpleGeometry ) MultiPoint.__proto__ = SimpleGeometry;\n  MultiPoint.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPoint.prototype.constructor = MultiPoint;\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {module:ol/geom/Point} point Point.\n   * @api\n   */\n  MultiPoint.prototype.appendPoint = function appendPoint (point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/MultiPoint} Clone.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.clone = function clone () {\n    var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n    return multiPoint;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPoint.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var squaredDistance = squaredDx(\n        x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (var j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  };\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {module:ol/geom/Point} Point.\n   * @api\n   */\n  MultiPoint.prototype.getPoint = function getPoint (index) {\n    var n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(this.flatCoordinates.slice(\n      index * this.stride, (index + 1) * this.stride), this.layout);\n  };\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array.<module:ol/geom/Point>} Points.\n   * @api\n   */\n  MultiPoint.prototype.getPoints = function getPoints () {\n    var flatCoordinates = this.flatCoordinates;\n    var layout = this.layout;\n    var stride = this.stride;\n    /** @type {Array.<module:ol/geom/Point>} */\n    var points = [];\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPoint.prototype.getType = function getType () {\n    return GeometryType.MULTI_POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPoint.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return MultiPoint;\n}(SimpleGeometry));\n\n\nexport default MultiPoint;\n\n//# sourceMappingURL=MultiPoint.js.map","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array.<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var flatCenters = [];\n  var extent = createEmpty();\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n\n//# sourceMappingURL=center.js.map","/**\n * @module ol/geom/MultiPolygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from '../geom/flat/area.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {linearRingssContainsXY} from '../geom/flat/contains.js';\nimport {deflateMultiCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from '../geom/flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from '../geom/flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from '../geom/flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRingsArray} from '../geom/flat/orient.js';\nimport {quantizeMultiArray} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = (function (SimpleGeometry) {\n  function MultiPolygon(coordinates, opt_layout, opt_endss) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array.<Array.<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      var layout = this.getLayout();\n      var flatCoordinates = [];\n      var endss = [];\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var polygon = coordinates[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        var offset = flatCoordinates.length;\n        var ends = polygon.getEnds();\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(coordinates, opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) MultiPolygon.__proto__ = SimpleGeometry;\n  MultiPolygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPolygon.prototype.constructor = MultiPolygon;\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {module:ol/geom/Polygon} polygon Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.appendPolygon = function appendPolygon (polygon) {\n    /** @type {Array.<number>} */\n    var ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      var offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/MultiPolygon} Clone.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var len = this.endss_.length;\n    var newEndss = new Array(len);\n    for (var i = 0; i < len; ++i) {\n      newEndss[i] = this$1.endss_[i].slice();\n    }\n\n    return new MultiPolygon(\n      this.flatCoordinates.slice(), this.layout, newEndss);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.endss_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  MultiPolygon.prototype.getArea = function getArea () {\n    return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates, 0, this.endss_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates, 0, this.endss_, this.stride);\n  };\n\n  /**\n   * @return {Array.<Array.<number>>} Endss.\n   */\n  MultiPolygon.prototype.getEndss = function getEndss () {\n    return this.endss_;\n  };\n\n  /**\n   * @return {Array.<number>} Flat interior points.\n   */\n  MultiPolygon.prototype.getFlatInteriorPoints = function getFlatInteriorPoints () {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      var flatCenters = linearRingssCenter(\n        this.flatCoordinates, 0, this.endss_, this.stride);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n        flatCenters);\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  };\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {module:ol/geom/MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  MultiPolygon.prototype.getInteriorPoints = function getInteriorPoints () {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n  };\n\n  /**\n   * @return {Array.<number>} Oriented flat coordinates.\n   */\n  MultiPolygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(\n        flatCoordinates, 0, this.endss_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRingsArray(\n              this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates, 0, this.endss_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEndss);\n    return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n  };\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {module:ol/geom/Polygon} Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygon = function getPolygon (index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    var offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      var prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    var ends = this.endss_[index].slice();\n    var end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n  };\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array.<module:ol/geom/Polygon>} Polygons.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygons = function getPolygons () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var endss = this.endss_;\n    var polygons = [];\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      var ends = endss[i].slice();\n      var end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPolygon.prototype.getType = function getType () {\n    return GeometryType.MULTI_POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPolygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      var lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  };\n\n  return MultiPolygon;\n}(SimpleGeometry));\n\n\nexport default MultiPolygon;\n\n//# sourceMappingURL=MultiPolygon.js.map","/**\n * @module ol/LayerType\n */\n\n/**\n * A layer type used when creating layer renderers.\n * @enum {string}\n */\nexport default {\n  IMAGE: 'IMAGE',\n  TILE: 'TILE',\n  VECTOR_TILE: 'VECTOR_TILE',\n  VECTOR: 'VECTOR'\n};\n\n//# sourceMappingURL=LayerType.js.map","/**\n * @module ol/layer/VectorRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorRenderType.js.map","/**\n * @module ol/layer/Vector\n */\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\nimport VectorRenderType from '../layer/VectorRenderType.js';\nimport {assign} from '../obj.js';\nimport {createDefaultStyle, toFunction as toStyleFunction} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/render~OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {module:ol/layer/VectorRenderType|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {module:ol/source/Vector} [source] Source.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during animations. This means that no\n * vectors will be shown clipped, but the setting will have a performance impact for large\n * amounts of vector data. When set to `false`, batches will be recreated when no animation\n * is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during interactions. See also\n * `updateWhileAnimating`.\n */\n\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport var RenderType = {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  RENDER_ORDER: 'renderOrder'\n};\n\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar VectorLayer = (function (Layer) {\n  function VectorLayer(opt_options) {\n    var options = opt_options ?\n      opt_options : /** @type {module:ol/layer/Vector~Options} */ ({});\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    Layer.call(this, baseOptions);\n\n    /**\n    * @private\n    * @type {boolean}\n    */\n    this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.renderBuffer_ = options.renderBuffer !== undefined ?\n      options.renderBuffer : 100;\n\n    /**\n    * User provided style.\n    * @type {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n    * @private\n    */\n    this.style_ = null;\n\n    /**\n    * Style function for use within the library.\n    * @type {module:ol/style/Style~StyleFunction|undefined}\n    * @private\n    */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n      options.updateWhileAnimating : false;\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n      options.updateWhileInteracting : false;\n\n    /**\n    * @private\n    * @type {module:ol/layer/VectorTileRenderType|string}\n    */\n    this.renderMode_ = options.renderMode || VectorRenderType.VECTOR;\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {module:ol/LayerType}\n    */\n    this.type = LayerType.VECTOR;\n\n  }\n\n  if ( Layer ) VectorLayer.__proto__ = Layer;\n  VectorLayer.prototype = Object.create( Layer && Layer.prototype );\n  VectorLayer.prototype.constructor = VectorLayer;\n\n  /**\n  * @return {boolean} Declutter.\n  */\n  VectorLayer.prototype.getDeclutter = function getDeclutter () {\n    return this.declutter_;\n  };\n\n  /**\n  * @param {boolean} declutter Declutter.\n  */\n  VectorLayer.prototype.setDeclutter = function setDeclutter (declutter) {\n    this.declutter_ = declutter;\n  };\n\n  /**\n  * @return {number|undefined} Render buffer.\n  */\n  VectorLayer.prototype.getRenderBuffer = function getRenderBuffer () {\n    return this.renderBuffer_;\n  };\n\n  /**\n  * @return {function(module:ol/Feature, module:ol/Feature): number|null|undefined} Render\n  *     order.\n  */\n  VectorLayer.prototype.getRenderOrder = function getRenderOrder () {\n    return (\n    /** @type {module:ol/render~OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER))\n    );\n  };\n\n  /**\n  * Get the style for features.  This returns whatever was passed to the `style`\n  * option at construction or to the `setStyle` method.\n  * @return {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n  *     Layer style.\n  * @api\n  */\n  VectorLayer.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n  * Get the style function.\n  * @return {module:ol/style/Style~StyleFunction|undefined} Layer style function.\n  * @api\n  */\n  VectorLayer.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     animating.\n  */\n  VectorLayer.prototype.getUpdateWhileAnimating = function getUpdateWhileAnimating () {\n    return this.updateWhileAnimating_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     interacting.\n  */\n  VectorLayer.prototype.getUpdateWhileInteracting = function getUpdateWhileInteracting () {\n    return this.updateWhileInteracting_;\n  };\n\n  /**\n  * @param {module:ol/render~OrderFunction|null|undefined} renderOrder\n  *     Render order.\n  */\n  VectorLayer.prototype.setRenderOrder = function setRenderOrder (renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  };\n\n  /**\n  * Set the style for features.  This can be a single style object, an array\n  * of styles, or a function that takes a feature and resolution and returns\n  * an array of styles. If it is `undefined` the default style is used. If\n  * it is `null` the layer has no style (a `null` style), so only features\n  * that have their own styles will be rendered in the layer. See\n  * {@link module:ol/style} for information on the default style.\n  * @param {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction|null|undefined}\n  *     style Layer style.\n  * @api\n  */\n  VectorLayer.prototype.setStyle = function setStyle (style) {\n    this.style_ = style !== undefined ? style : createDefaultStyle;\n    this.styleFunction_ = style === null ?\n      undefined : toStyleFunction(this.style_);\n    this.changed();\n  };\n\n  /**\n  * @return {module:ol/layer/VectorRenderType|string} The render mode.\n  */\n  VectorLayer.prototype.getRenderMode = function getRenderMode () {\n    return this.renderMode_;\n  };\n\n  return VectorLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Vector vectorsource} of the layer.\n * @function\n * @return {module:ol/source/Vector} Source.\n * @api\n */\nVectorLayer.prototype.getSource;\n\n\nexport default VectorLayer;\n\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml'\n};\n\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/featureloader\n */\nimport {UNDEFINED} from './functions.js';\nimport FormatType from './format/FormatType.js';\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:module:ol/source/Vector, module:ol/extent~Extent, number,\n *                    module:ol/proj/Projection)} FeatureLoader\n * @api\n */\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(module:ol/extent~Extent, number, module:ol/proj/Projection): string} FeatureUrlFunction\n * @api\n */\n\n\n/**\n * @param {string|module:ol/featureloader~FeatureUrlFunction} url Feature URL service.\n * @param {module:ol/format/Feature} format Feature format.\n * @param {function(this:module:ol/VectorTile, Array.<module:ol/Feature>, module:ol/proj/Projection, module:ol/extent~Extent)|function(this:module:ol/source/Vector, Array.<module:ol/Feature>)} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:module:ol/VectorTile)|function(this:module:ol/source/Vector)} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {module:ol/featureloader~FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n  return (\n    /**\n     * @param {module:ol/extent~Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @this {module:ol/source/Vector|module:ol/VectorTile}\n     */\n    function(extent, resolution, projection) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET',\n        typeof url === 'function' ? url(extent, resolution, projection) : url,\n        true);\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n      }\n      /**\n       * @param {Event} event Event.\n       * @private\n       */\n      xhr.onload = function(event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n          var type = format.getType();\n          /** @type {Document|Node|Object|string|undefined} */\n          var source;\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\n            source = xhr.responseText;\n          } else if (type == FormatType.XML) {\n            source = xhr.responseXML;\n            if (!source) {\n              source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n            }\n          } else if (type == FormatType.ARRAY_BUFFER) {\n            source = /** @type {ArrayBuffer} */ (xhr.response);\n          }\n          if (source) {\n            success.call(this, format.readFeatures(source,\n              {featureProjection: projection}),\n            format.readProjection(source), format.getLastExtent());\n          } else {\n            failure.call(this);\n          }\n        } else {\n          failure.call(this);\n        }\n      }.bind(this);\n      /**\n       * @private\n       */\n      xhr.onerror = function() {\n        failure.call(this);\n      }.bind(this);\n      xhr.send();\n    }\n  );\n}\n\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|module:ol/featureloader~FeatureUrlFunction} url Feature URL service.\n * @param {module:ol/format/Feature} format Feature format.\n * @return {module:ol/featureloader~FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  return loadFeaturesXhr(url, format,\n    /**\n     * @param {Array.<module:ol/Feature>} features The loaded features.\n     * @param {module:ol/proj/Projection} dataProjection Data\n     * projection.\n     * @this {module:ol/source/Vector}\n     */\n    function(features, dataProjection) {\n      this.addFeatures(features);\n    }, /* FIXME handle error */ UNDEFINED);\n}\n\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/loadingstrategy\n */\n\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array.<module:ol/extent~Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array.<module:ol/extent~Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {function(module:ol/extent~Extent, number): Array.<module:ol/extent~Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {module:ol/extent~Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array.<module:ol/extent~Extent>} Extents.\n     */\n    function(extent, resolution) {\n      var z = tileGrid.getZForResolution(resolution);\n      var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array.<module:ol/extent~Extent>} */\n      var extents = [];\n      /** @type {module:ol/tilecoord~TileCoord} */\n      var tileCoord = [z, 0, 0];\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/source/Source\n */\n\nimport {UNDEFINED} from '../functions.js';\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(module:ol/PluggableMap~FrameState): (string|Array.<string>)} Attribution\n */\n\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings (`{@link module:ol/source/Source~Attribution}`)\n *\n * @typedef {string|Array.<string>|module:ol/source/Source~Attribution} AttributionLike\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {module:ol/proj~ProjectionLike} projection\n * @property {module:ol/source/State} [state]\n * @property {boolean} [wrapX]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @api\n */\nvar Source = (function (BaseObject) {\n  function Source(options) {\n\n    BaseObject.call(this);\n\n    /**\n    * @private\n    * @type {module:ol/proj/Projection}\n    */\n    this.projection_ = getProjection(options.projection);\n\n    /**\n    * @private\n    * @type {?module:ol/source/Source~Attribution}\n    */\n    this.attributions_ = this.adaptAttributions_(options.attributions);\n\n    /**\n    * @private\n    * @type {module:ol/source/State}\n    */\n    this.state_ = options.state !== undefined ?\n      options.state : SourceState.READY;\n\n    /**\n    * @private\n    * @type {boolean}\n    */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n  }\n\n  if ( BaseObject ) Source.__proto__ = BaseObject;\n  Source.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Source.prototype.constructor = Source;\n\n  /**\n  * Turns the attributions option into an attributions function.\n  * @param {module:ol/source/Source~AttributionLike|undefined} attributionLike The attribution option.\n  * @return {?module:ol/source/Source~Attribution} An attribution function (or null).\n  */\n  Source.prototype.adaptAttributions_ = function adaptAttributions_ (attributionLike) {\n    if (!attributionLike) {\n      return null;\n    }\n    if (Array.isArray(attributionLike)) {\n      return function(frameState) {\n        return attributionLike;\n      };\n    }\n\n    if (typeof attributionLike === 'function') {\n      return attributionLike;\n    }\n\n    return function(frameState) {\n      return [attributionLike];\n    };\n  };\n\n  /**\n  * Get the attribution function for the source.\n  * @return {?module:ol/source/Source~Attribution} Attribution function.\n  */\n  Source.prototype.getAttributions = function getAttributions () {\n    return this.attributions_;\n  };\n\n  /**\n  * Get the projection of the source.\n  * @return {module:ol/proj/Projection} Projection.\n  * @api\n  */\n  Source.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n  * @abstract\n  * @return {Array.<number>|undefined} Resolutions.\n  */\n  Source.prototype.getResolutions = function getResolutions () {};\n\n  /**\n  * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n  * @return {module:ol/source/State} State.\n  * @api\n  */\n  Source.prototype.getState = function getState () {\n    return this.state_;\n  };\n\n  /**\n  * @return {boolean|undefined} Wrap X.\n  */\n  Source.prototype.getWrapX = function getWrapX () {\n    return this.wrapX_;\n  };\n\n  /**\n  * Refreshes the source and finally dispatches a 'change' event.\n  * @api\n  */\n  Source.prototype.refresh = function refresh () {\n    this.changed();\n  };\n\n  /**\n  * Set the attributions of the source.\n  * @param {module:ol/source/Source~AttributionLike|undefined} attributions Attributions.\n  *     Can be passed as `string`, `Array<string>`, `{@link module:ol/source/Source~Attribution}`,\n  *     or `undefined`.\n  * @api\n  */\n  Source.prototype.setAttributions = function setAttributions (attributions) {\n    this.attributions_ = this.adaptAttributions_(attributions);\n    this.changed();\n  };\n\n  /**\n  * Set the state of the source.\n  * @param {module:ol/source/State} state State.\n  * @protected\n  */\n  Source.prototype.setState = function setState (state) {\n    this.state_ = state;\n    this.changed();\n  };\n\n  return Source;\n}(BaseObject));\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {Object.<string, boolean>} skippedFeatureUids Skipped feature uids.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T} callback Feature callback.\n * @return {T|undefined} Callback result.\n * @template T\n */\nSource.prototype.forEachFeatureAtCoordinate = UNDEFINED;\n\n\nexport default Source;\n\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event ol/source/Vector~VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event ol/source/Vector~VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event ol/source/Vector~VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event ol/source/Vector~VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature'\n};\n\n//# sourceMappingURL=VectorEventType.js.map","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/structs/RBush\n */\nimport {getUid} from '../util.js';\nimport rbush from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = function RBush(opt_maxEntries) {\n\n  /**\n   * @private\n   */\n  this.rbush_ = rbush(opt_maxEntries, undefined);\n\n  /**\n   * A mapping between the objects added to this rbush wrapper\n   * and the objects that are actually added to the internal rbush.\n   * @private\n   * @type {Object.<number, module:ol/structs/RBush~Entry>}\n   */\n  this.items_ = {};\n\n};\n\n/**\n * Insert a value into the RBush.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.insert = function insert (extent, value) {\n  /** @type {module:ol/structs/RBush~Entry} */\n  var item = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3],\n    value: value\n  };\n\n  this.rbush_.insert(item);\n  this.items_[getUid(value)] = item;\n};\n\n\n/**\n * Bulk-insert values into the RBush.\n * @param {Array.<module:ol/extent~Extent>} extents Extents.\n * @param {Array.<T>} values Values.\n */\nRBush.prototype.load = function load (extents, values) {\n    var this$1 = this;\n\n  var items = new Array(values.length);\n  for (var i = 0, l = values.length; i < l; i++) {\n    var extent = extents[i];\n    var value = values[i];\n\n    /** @type {module:ol/structs/RBush~Entry} */\n    var item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value\n    };\n    items[i] = item;\n    this$1.items_[getUid(value)] = item;\n  }\n  this.rbush_.load(items);\n};\n\n\n/**\n * Remove a value from the RBush.\n * @param {T} value Value.\n * @return {boolean} Removed.\n */\nRBush.prototype.remove = function remove (value) {\n  var uid = getUid(value);\n\n  // get the object in which the value was wrapped when adding to the\n  // internal rbush. then use that object to do the removal.\n  var item = this.items_[uid];\n  delete this.items_[uid];\n  return this.rbush_.remove(item) !== null;\n};\n\n\n/**\n * Update the extent of a value in the RBush.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.update = function update (extent, value) {\n  var item = this.items_[getUid(value)];\n  var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n  if (!equals(bbox, extent)) {\n    this.remove(value);\n    this.insert(extent, value);\n  }\n};\n\n\n/**\n * Return all values in the RBush.\n * @return {Array.<T>} All.\n */\nRBush.prototype.getAll = function getAll () {\n  var items = this.rbush_.all();\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Return all values in the given extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {Array.<T>} All in extent.\n */\nRBush.prototype.getInExtent = function getInExtent (extent) {\n  /** @type {module:ol/structs/RBush~Entry} */\n  var bbox = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3]\n  };\n  var items = this.rbush_.search(bbox);\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Calls a callback function with each value in the tree.\n * If the callback returns a truthy value, this value is returned without\n * checking the rest of the tree.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach = function forEach (callback, opt_this) {\n  return this.forEach_(this.getAll(), callback, opt_this);\n};\n\n\n/**\n * Calls a callback function with each value in the provided extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEachInExtent = function forEachInExtent (extent, callback, opt_this) {\n  return this.forEach_(this.getInExtent(extent), callback, opt_this);\n};\n\n\n/**\n * @param {Array.<T>} values Values.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @private\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach_ = function forEach_ (values, callback, opt_this) {\n  var result;\n  for (var i = 0, l = values.length; i < l; i++) {\n    result = callback.call(opt_this, values[i]);\n    if (result) {\n      return result;\n    }\n  }\n  return result;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nRBush.prototype.isEmpty = function isEmpty$1 () {\n  return isEmpty(this.items_);\n};\n\n\n/**\n * Remove all values from the RBush.\n */\nRBush.prototype.clear = function clear () {\n  this.rbush_.clear();\n  this.items_ = {};\n};\n\n\n/**\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nRBush.prototype.getExtent = function getExtent (opt_extent) {\n  // FIXME add getExtent() to rbush\n  var data = this.rbush_.data;\n  return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n};\n\n\n/**\n * @param {module:ol/structs/RBush} rbush R-Tree.\n */\nRBush.prototype.concat = function concat (rbush) {\n    var this$1 = this;\n\n  this.rbush_.load(rbush.rbush_.all());\n  for (var i in rbush.items_) {\n    this$1.items_[i | 0] = rbush.items_[i | 0];\n  }\n};\n\n\nexport default RBush;\n\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/source/Vector\n */\n\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, UNDEFINED} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty, getValues} from '../obj.js';\nimport Source from '../source/Source.js';\nimport SourceState from '../source/State.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(module:ol/extent~Extent, number): Array.<module:ol/extent~Extent>} LoadingStrategy\n * @api\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n */\nexport var VectorSourceEvent = (function (Event) {\n  function VectorSourceEvent(type, opt_feature) {\n\n    Event.call(this, type);\n\n    /**\n     * The feature being added or removed.\n     * @type {module:ol/Feature|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n  }\n\n  if ( Event ) VectorSourceEvent.__proto__ = Event;\n  VectorSourceEvent.prototype = Object.create( Event && Event.prototype );\n  VectorSourceEvent.prototype.constructor = VectorSourceEvent;\n\n  return VectorSourceEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {Array.<module:ol/Feature>|module:ol/Collection.<module:ol/Feature>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {module:ol/format/Feature} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {module:ol/featureloader~FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {module:ol/source/Vector~LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|module:ol/featureloader~FeatureUrlfunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlfunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires ol/source/Vector~VectorSourceEvent\n * @api\n */\nvar VectorSource = (function (Source) {\n  function VectorSource(opt_options) {\n\n    var options = opt_options || {};\n\n    Source.call(this, {\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\n    });\n\n    /**\n     * @private\n     * @type {module:ol/featureloader~FeatureLoader}\n     */\n    this.loader_ = UNDEFINED;\n\n    /**\n     * @private\n     * @type {module:ol/format/Feature|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|module:ol/featureloader~FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, /** @type {module:ol/format/Feature} */ (this.format_));\n    }\n\n    /**\n     * @private\n     * @type {module:ol/source/Vector~LoadingStrategy}\n     */\n    this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n\n    var useSpatialIndex =\n        options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {module:ol/structs/RBush.<module:ol/Feature>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {module:ol/structs/RBush.<{extent: module:ol/extent~Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @private\n     * @type {!Object.<string, module:ol/Feature>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object.<string, module:ol/Feature>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features without id (keyed by getUid(feature)).\n     * @private\n     * @type {!Object.<string, module:ol/Feature>}\n     */\n    this.undefIdIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object.<string, Array.<module:ol/events~EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {module:ol/Collection.<module:ol/Feature>}\n     */\n    this.featuresCollection_ = null;\n\n    var collection, features;\n    if (options.features instanceof Collection) {\n      collection = options.features;\n      features = collection.getArray();\n    } else if (Array.isArray(options.features)) {\n      features = options.features;\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n\n  }\n\n  if ( Source ) VectorSource.__proto__ = Source;\n  VectorSource.prototype = Object.create( Source && Source.prototype );\n  VectorSource.prototype.constructor = VectorSource;\n\n  return VectorSource;\n}(Source));\n\n\n/**\n * Add a single feature to the source.  If you want to add a batch of features\n * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n * instead. A feature will not be added to the source if feature with\n * the same id is already there. The reason for this behavior is to avoid\n * feature duplication when using bbox or tile loading strategies.\n * @param {module:ol/Feature} feature Feature to add.\n * @api\n */\nVectorSource.prototype.addFeature = function(feature) {\n  this.addFeatureInternal(feature);\n  this.changed();\n};\n\n\n/**\n * Add a feature without firing a `change` event.\n * @param {module:ol/Feature} feature Feature.\n * @protected\n */\nVectorSource.prototype.addFeatureInternal = function(feature) {\n  var featureKey = getUid(feature).toString();\n\n  if (!this.addToIndex_(featureKey, feature)) {\n    return;\n  }\n\n  this.setupChangeEvents_(featureKey, feature);\n\n  var geometry = feature.getGeometry();\n  if (geometry) {\n    var extent = geometry.getExtent();\n    if (this.featuresRtree_) {\n      this.featuresRtree_.insert(extent, feature);\n    }\n  } else {\n    this.nullGeometryFeatures_[featureKey] = feature;\n  }\n\n  this.dispatchEvent(\n    new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n};\n\n\n/**\n * @param {string} featureKey Unique identifier for the feature.\n * @param {module:ol/Feature} feature The feature.\n * @private\n */\nVectorSource.prototype.setupChangeEvents_ = function(featureKey, feature) {\n  this.featureChangeKeys_[featureKey] = [\n    listen(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this),\n    listen(feature, ObjectEventType.PROPERTYCHANGE,\n      this.handleFeatureChange_, this)\n  ];\n};\n\n\n/**\n * @param {string} featureKey Unique identifier for the feature.\n * @param {module:ol/Feature} feature The feature.\n * @return {boolean} The feature is \"valid\", in the sense that it is also a\n *     candidate for insertion into the Rtree.\n * @private\n */\nVectorSource.prototype.addToIndex_ = function(featureKey, feature) {\n  var valid = true;\n  var id = feature.getId();\n  if (id !== undefined) {\n    if (!(id.toString() in this.idIndex_)) {\n      this.idIndex_[id.toString()] = feature;\n    } else {\n      valid = false;\n    }\n  } else {\n    assert(!(featureKey in this.undefIdIndex_),\n      30); // The passed `feature` was already added to the source\n    this.undefIdIndex_[featureKey] = feature;\n  }\n  return valid;\n};\n\n\n/**\n * Add a batch of features to the source.\n * @param {Array.<module:ol/Feature>} features Features to add.\n * @api\n */\nVectorSource.prototype.addFeatures = function(features) {\n  this.addFeaturesInternal(features);\n  this.changed();\n};\n\n\n/**\n * Add features without firing a `change` event.\n * @param {Array.<module:ol/Feature>} features Features.\n * @protected\n */\nVectorSource.prototype.addFeaturesInternal = function(features) {\n  var this$1 = this;\n\n  var extents = [];\n  var newFeatures = [];\n  var geometryFeatures = [];\n\n  for (var i = 0, length = features.length; i < length; i++) {\n    var feature = features[i];\n    var featureKey = getUid(feature).toString();\n    if (this$1.addToIndex_(featureKey, feature)) {\n      newFeatures.push(feature);\n    }\n  }\n\n  for (var i$1 = 0, length$1 = newFeatures.length; i$1 < length$1; i$1++) {\n    var feature$1 = newFeatures[i$1];\n    var featureKey$1 = getUid(feature$1).toString();\n    this$1.setupChangeEvents_(featureKey$1, feature$1);\n\n    var geometry = feature$1.getGeometry();\n    if (geometry) {\n      var extent = geometry.getExtent();\n      extents.push(extent);\n      geometryFeatures.push(feature$1);\n    } else {\n      this$1.nullGeometryFeatures_[featureKey$1] = feature$1;\n    }\n  }\n  if (this.featuresRtree_) {\n    this.featuresRtree_.load(extents, geometryFeatures);\n  }\n\n  for (var i$2 = 0, length$2 = newFeatures.length; i$2 < length$2; i$2++) {\n    this$1.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i$2]));\n  }\n};\n\n\n/**\n * @param {!module:ol/Collection.<module:ol/Feature>} collection Collection.\n * @private\n */\nVectorSource.prototype.bindFeaturesCollection_ = function(collection) {\n  var modifyingCollection = false;\n  listen(this, VectorEventType.ADDFEATURE,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        collection.push(evt.feature);\n        modifyingCollection = false;\n      }\n    });\n  listen(this, VectorEventType.REMOVEFEATURE,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        collection.remove(evt.feature);\n        modifyingCollection = false;\n      }\n    });\n  listen(collection, CollectionEventType.ADD,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        this.addFeature(/** @type {module:ol/Feature} */ (evt.element));\n        modifyingCollection = false;\n      }\n    }, this);\n  listen(collection, CollectionEventType.REMOVE,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        this.removeFeature(/** @type {module:ol/Feature} */ (evt.element));\n        modifyingCollection = false;\n      }\n    }, this);\n  this.featuresCollection_ = collection;\n};\n\n\n/**\n * Remove all features from the source.\n * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector~VectorSourceEvent#removefeature} events.\n * @api\n */\nVectorSource.prototype.clear = function(opt_fast) {\n  var this$1 = this;\n\n  if (opt_fast) {\n    for (var featureId in this$1.featureChangeKeys_) {\n      var keys = this$1.featureChangeKeys_[featureId];\n      keys.forEach(unlistenByKey);\n    }\n    if (!this.featuresCollection_) {\n      this.featureChangeKeys_ = {};\n      this.idIndex_ = {};\n      this.undefIdIndex_ = {};\n    }\n  } else {\n    if (this.featuresRtree_) {\n      this.featuresRtree_.forEach(this.removeFeatureInternal, this);\n      for (var id in this$1.nullGeometryFeatures_) {\n        this$1.removeFeatureInternal(this$1.nullGeometryFeatures_[id]);\n      }\n    }\n  }\n  if (this.featuresCollection_) {\n    this.featuresCollection_.clear();\n  }\n\n  if (this.featuresRtree_) {\n    this.featuresRtree_.clear();\n  }\n  this.loadedExtentsRtree_.clear();\n  this.nullGeometryFeatures_ = {};\n\n  var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n  this.dispatchEvent(clearEvent);\n  this.changed();\n};\n\n\n/**\n * Iterate through all features on the source, calling the provided callback\n * with each one.  If the callback returns any \"truthy\" value, iteration will\n * stop and the function will return the same value.\n * Note: this function only iterate through the feature that have a defined geometry.\n *\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     on the source.  Return a truthy value to stop iteration.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n * @api\n */\nVectorSource.prototype.forEachFeature = function(callback) {\n  if (this.featuresRtree_) {\n    return this.featuresRtree_.forEach(callback);\n  } else if (this.featuresCollection_) {\n    return this.featuresCollection_.forEach(callback);\n  }\n};\n\n\n/**\n * Iterate through all features whose geometries contain the provided\n * coordinate, calling the callback with each feature.  If the callback returns\n * a \"truthy\" value, iteration will stop and the function will return the same\n * value.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     whose goemetry contains the provided coordinate.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n */\nVectorSource.prototype.forEachFeatureAtCoordinateDirect = function(coordinate, callback) {\n  var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n  return this.forEachFeatureInExtent(extent, function(feature) {\n    var geometry = feature.getGeometry();\n    if (geometry.intersectsCoordinate(coordinate)) {\n      return callback(feature);\n    } else {\n      return undefined;\n    }\n  });\n};\n\n\n/**\n * Iterate through all features whose bounding box intersects the provided\n * extent (note that the feature's geometry may not intersect the extent),\n * calling the callback with each feature.  If the callback returns a \"truthy\"\n * value, iteration will stop and the function will return the same value.\n *\n * If you are interested in features whose geometry intersects an extent, call\n * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n *\n * When `useSpatialIndex` is set to false, this method will loop through all\n * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     whose bounding box intersects the provided extent.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n * @api\n */\nVectorSource.prototype.forEachFeatureInExtent = function(extent, callback) {\n  if (this.featuresRtree_) {\n    return this.featuresRtree_.forEachInExtent(extent, callback);\n  } else if (this.featuresCollection_) {\n    return this.featuresCollection_.forEach(callback);\n  }\n};\n\n\n/**\n * Iterate through all features whose geometry intersects the provided extent,\n * calling the callback with each feature.  If the callback returns a \"truthy\"\n * value, iteration will stop and the function will return the same value.\n *\n * If you only want to test for bounding box intersection, call the\n * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     whose geometry intersects the provided extent.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n * @api\n */\nVectorSource.prototype.forEachFeatureIntersectingExtent = function(extent, callback) {\n  return this.forEachFeatureInExtent(extent,\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    function(feature) {\n      var geometry = feature.getGeometry();\n      if (geometry.intersectsExtent(extent)) {\n        var result = callback(feature);\n        if (result) {\n          return result;\n        }\n      }\n    });\n};\n\n\n/**\n * Get the features collection associated with this source. Will be `null`\n * unless the source was configured with `useSpatialIndex` set to `false`, or\n * with an {@link module:ol/Collection} as `features`.\n * @return {module:ol/Collection.<module:ol/Feature>} The collection of features.\n * @api\n */\nVectorSource.prototype.getFeaturesCollection = function() {\n  return this.featuresCollection_;\n};\n\n\n/**\n * Get all features on the source in random order.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nVectorSource.prototype.getFeatures = function() {\n  var features;\n  if (this.featuresCollection_) {\n    features = this.featuresCollection_.getArray();\n  } else if (this.featuresRtree_) {\n    features = this.featuresRtree_.getAll();\n    if (!isEmpty(this.nullGeometryFeatures_)) {\n      extend(features, getValues(this.nullGeometryFeatures_));\n    }\n  }\n  return (\n    /** @type {Array.<module:ol/Feature>} */ (features)\n  );\n};\n\n\n/**\n * Get all features whose geometry intersects the provided coordinate.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nVectorSource.prototype.getFeaturesAtCoordinate = function(coordinate) {\n  var features = [];\n  this.forEachFeatureAtCoordinateDirect(coordinate, function(feature) {\n    features.push(feature);\n  });\n  return features;\n};\n\n\n/**\n * Get all features in the provided extent.  Note that this returns an array of\n * all features intersecting the given extent in random order (so it may include\n * features whose geometries do not intersect the extent).\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nVectorSource.prototype.getFeaturesInExtent = function(extent) {\n  return this.featuresRtree_.getInExtent(extent);\n};\n\n\n/**\n * Get the closest feature to the provided coordinate.\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {function(module:ol/Feature):boolean=} opt_filter Feature filter function.\n *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n *     and it should return a boolean value. By default, no filtering is made.\n * @return {module:ol/Feature} Closest feature.\n * @api\n */\nVectorSource.prototype.getClosestFeatureToCoordinate = function(coordinate, opt_filter) {\n  // Find the closest feature using branch and bound.  We start searching an\n  // infinite extent, and find the distance from the first feature found.  This\n  // becomes the closest feature.  We then compute a smaller extent which any\n  // closer feature must intersect.  We continue searching with this smaller\n  // extent, trying to find a closer feature.  Every time we find a closer\n  // feature, we update the extent being searched so that any even closer\n  // feature must intersect it.  We continue until we run out of features.\n  var x = coordinate[0];\n  var y = coordinate[1];\n  var closestFeature = null;\n  var closestPoint = [NaN, NaN];\n  var minSquaredDistance = Infinity;\n  var extent = [-Infinity, -Infinity, Infinity, Infinity];\n  var filter = opt_filter ? opt_filter : TRUE;\n  this.featuresRtree_.forEachInExtent(extent,\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     */\n    function(feature) {\n      if (filter(feature)) {\n        var geometry = feature.getGeometry();\n        var previousMinSquaredDistance = minSquaredDistance;\n        minSquaredDistance = geometry.closestPointXY(\n          x, y, closestPoint, minSquaredDistance);\n        if (minSquaredDistance < previousMinSquaredDistance) {\n          closestFeature = feature;\n          // This is sneaky.  Reduce the extent that it is currently being\n          // searched while the R-Tree traversal using this same extent object\n          // is still in progress.  This is safe because the new extent is\n          // strictly contained by the old extent.\n          var minDistance = Math.sqrt(minSquaredDistance);\n          extent[0] = x - minDistance;\n          extent[1] = y - minDistance;\n          extent[2] = x + minDistance;\n          extent[3] = y + minDistance;\n        }\n      }\n    });\n  return closestFeature;\n};\n\n\n/**\n * Get the extent of the features currently in the source.\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent. If provided, no new extent\n *     will be created. Instead, that extent's coordinates will be overwritten.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nVectorSource.prototype.getExtent = function(opt_extent) {\n  return this.featuresRtree_.getExtent(opt_extent);\n};\n\n\n/**\n * Get a feature by its identifier (the value returned by feature.getId()).\n * Note that the index treats string and numeric identifiers as the same.  So\n * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n *\n * @param {string|number} id Feature identifier.\n * @return {module:ol/Feature} The feature (or `null` if not found).\n * @api\n */\nVectorSource.prototype.getFeatureById = function(id) {\n  var feature = this.idIndex_[id.toString()];\n  return feature !== undefined ? feature : null;\n};\n\n\n/**\n * Get the format associated with this source.\n *\n * @return {module:ol/format/Feature|undefined} The feature format.\n * @api\n */\nVectorSource.prototype.getFormat = function() {\n  return this.format_;\n};\n\n\n/**\n * @return {boolean} The source can have overlapping geometries.\n */\nVectorSource.prototype.getOverlaps = function() {\n  return this.overlaps_;\n};\n\n\n/**\n * @override\n */\nVectorSource.prototype.getResolutions = function() {};\n\n\n/**\n * Get the url associated with this source.\n *\n * @return {string|module:ol/featureloader~FeatureUrlFunction|undefined} The url.\n * @api\n */\nVectorSource.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n * @private\n */\nVectorSource.prototype.handleFeatureChange_ = function(event) {\n  var feature = /** @type {module:ol/Feature} */ (event.target);\n  var featureKey = getUid(feature).toString();\n  var geometry = feature.getGeometry();\n  if (!geometry) {\n    if (!(featureKey in this.nullGeometryFeatures_)) {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n  } else {\n    var extent = geometry.getExtent();\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.update(extent, feature);\n      }\n    }\n  }\n  var id = feature.getId();\n  if (id !== undefined) {\n    var sid = id.toString();\n    if (featureKey in this.undefIdIndex_) {\n      delete this.undefIdIndex_[featureKey];\n      this.idIndex_[sid] = feature;\n    } else {\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    }\n  } else {\n    if (!(featureKey in this.undefIdIndex_)) {\n      this.removeFromIdIndex_(feature);\n      this.undefIdIndex_[featureKey] = feature;\n    }\n  }\n  this.changed();\n  this.dispatchEvent(new VectorSourceEvent(\n    VectorEventType.CHANGEFEATURE, feature));\n};\n\n/**\n * Returns true if the feature is contained within the source.\n * @param {module:ol/Feature} feature Feature.\n * @return {boolean} Has feature.\n * @api\n */\nVectorSource.prototype.hasFeature = function(feature) {\n  var id = feature.getId();\n  if (id !== undefined) {\n    return id in this.idIndex_;\n  } else {\n    var featureKey = getUid(feature).toString();\n    return featureKey in this.undefIdIndex_;\n  }\n};\n\n/**\n * @return {boolean} Is empty.\n */\nVectorSource.prototype.isEmpty = function() {\n  return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n};\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {module:ol/proj/Projection} projection Projection.\n */\nVectorSource.prototype.loadFeatures = function(extent, resolution, projection) {\n  var this$1 = this;\n\n  var loadedExtentsRtree = this.loadedExtentsRtree_;\n  var extentsToLoad = this.strategy_(extent, resolution);\n  var loop = function ( i, ii ) {\n    var extentToLoad = extentsToLoad[i];\n    var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\n      /**\n       * @param {{extent: module:ol/extent~Extent}} object Object.\n       * @return {boolean} Contains.\n       */\n      function(object) {\n        return containsExtent(object.extent, extentToLoad);\n      });\n    if (!alreadyLoaded) {\n      this$1.loader_.call(this$1, extentToLoad, resolution, projection);\n      loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n    }\n  };\n\n  for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) loop( i, ii );\n};\n\n\n/**\n * Remove an extent from the list of loaded extents.\n * @param {module:ol/extent~Extent} extent Extent.\n * @api\n */\nVectorSource.prototype.removeLoadedExtent = function(extent) {\n  var loadedExtentsRtree = this.loadedExtentsRtree_;\n  var obj;\n  loadedExtentsRtree.forEachInExtent(extent, function(object) {\n    if (equals(object.extent, extent)) {\n      obj = object;\n      return true;\n    }\n  });\n  if (obj) {\n    loadedExtentsRtree.remove(obj);\n  }\n};\n\n\n/**\n * Remove a single feature from the source.  If you want to remove all features\n * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n * instead.\n * @param {module:ol/Feature} feature Feature to remove.\n * @api\n */\nVectorSource.prototype.removeFeature = function(feature) {\n  var featureKey = getUid(feature).toString();\n  if (featureKey in this.nullGeometryFeatures_) {\n    delete this.nullGeometryFeatures_[featureKey];\n  } else {\n    if (this.featuresRtree_) {\n      this.featuresRtree_.remove(feature);\n    }\n  }\n  this.removeFeatureInternal(feature);\n  this.changed();\n};\n\n\n/**\n * Remove feature without firing a `change` event.\n * @param {module:ol/Feature} feature Feature.\n * @protected\n */\nVectorSource.prototype.removeFeatureInternal = function(feature) {\n  var featureKey = getUid(feature).toString();\n  this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n  delete this.featureChangeKeys_[featureKey];\n  var id = feature.getId();\n  if (id !== undefined) {\n    delete this.idIndex_[id.toString()];\n  } else {\n    delete this.undefIdIndex_[featureKey];\n  }\n  this.dispatchEvent(new VectorSourceEvent(\n    VectorEventType.REMOVEFEATURE, feature));\n};\n\n\n/**\n * Remove a feature from the id index.  Called internally when the feature id\n * may have changed.\n * @param {module:ol/Feature} feature The feature.\n * @return {boolean} Removed the feature from the index.\n * @private\n */\nVectorSource.prototype.removeFromIdIndex_ = function(feature) {\n  var this$1 = this;\n\n  var removed = false;\n  for (var id in this$1.idIndex_) {\n    if (this$1.idIndex_[id] === feature) {\n      delete this$1.idIndex_[id];\n      removed = true;\n      break;\n    }\n  }\n  return removed;\n};\n\n\n/**\n * Set the new loader of the source. The next loadFeatures call will use the\n * new loader.\n * @param {module:ol/featureloader~FeatureLoader} loader The loader to set.\n * @api\n */\nVectorSource.prototype.setLoader = function(loader) {\n  this.loader_ = loader;\n};\n\nexport default VectorSource;\n\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/interaction/Draw\n */\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {getChangeEventType} from '../Object.js';\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {noModifierKeys, always, shiftKeyOnly} from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport {POINTER_TYPE} from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/geom/GeometryType} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\n * Destination collection for the drawn features.\n * @property {module:ol/source/Vector} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {module:ol/events/condition~Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style for sketch features.\n * @property {module:ol/interaction/Draw~GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {module:ol/events/condition~Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry as\n * arguments, and returns a geometry. The optional existing geometry is the\n * geometry that is returned when the function is called without a second\n * argument.\n * @typedef {function(!Array.<module:ol/coordinate~Coordinate>, module:ol/geom/SimpleGeometry=):\n *     module:ol/geom/SimpleGeometry} GeometryFunction\n */\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nvar Mode = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n\n/**\n * @enum {string}\n */\nvar DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event module:ol/interaction/Draw~DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event module:ol/interaction/Draw~DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nvar DrawEvent = (function (Event) {\n  function DrawEvent(type, feature) {\n\n    Event.call(this, type);\n\n    /**\n     * The feature being drawn.\n     * @type {module:ol/Feature}\n     * @api\n     */\n    this.feature = feature;\n\n  }\n\n  if ( Event ) DrawEvent.__proto__ = Event;\n  DrawEvent.prototype = Object.create( Event && Event.prototype );\n  DrawEvent.prototype.constructor = DrawEvent;\n\n  return DrawEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires module:ol/interaction/Draw~DrawEvent\n * @api\n */\nvar Draw = (function (PointerInteraction) {\n  function Draw(options) {\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleEvent: handleEvent,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {module:ol/pixel~Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {module:ol/source/Vector}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {module:ol/Collection.<module:ol/Feature>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {module:ol/geom/GeometryType}\n     * @private\n     */\n    this.type_ = /** @type {module:ol/geom/GeometryType} */ (options.type);\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {module:ol/interaction/Draw~Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints ?\n      options.minPoints :\n      (this.mode_ === Mode.POLYGON ? 3 : 2);\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n    var geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      if (this.type_ === GeometryType.CIRCLE) {\n        /**\n         * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates\n         *     The coordinates.\n         * @param {module:ol/geom/SimpleGeometry=} opt_geometry Optional geometry.\n         * @return {module:ol/geom/SimpleGeometry} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry) {\n          var circle = opt_geometry ? /** @type {module:ol/geom/Circle} */ (opt_geometry) :\n            new Circle([NaN, NaN]);\n          var squaredLength = squaredCoordinateDistance(\n            coordinates[0], coordinates[1]);\n          circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n          return circle;\n        };\n      } else {\n        var Constructor;\n        var mode = this.mode_;\n        if (mode === Mode.POINT) {\n          Constructor = Point;\n        } else if (mode === Mode.LINE_STRING) {\n          Constructor = LineString;\n        } else if (mode === Mode.POLYGON) {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates\n         *     The coordinates.\n         * @param {module:ol/geom/SimpleGeometry=} opt_geometry Optional geometry.\n         * @return {module:ol/geom/SimpleGeometry} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry) {\n          var geometry = opt_geometry;\n          if (geometry) {\n            if (mode === Mode.POLYGON) {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n              } else {\n                geometry.setCoordinates([]);\n              }\n            } else {\n              geometry.setCoordinates(coordinates);\n            }\n          } else {\n            geometry = new Constructor(coordinates);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {module:ol/interaction/Draw~GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {module:ol/coordinate~Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {module:ol/coordinate~Coordinate|Array.<module:ol/coordinate~Coordinate>|Array.<Array.<module:ol/coordinate~Coordinate>>}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {Array.<module:ol/coordinate~Coordinate>}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance ?\n      options.clickTolerance * options.clickTolerance : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {module:ol/layer/Vector}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileInteracting: true\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition ?\n        options.freehandCondition : shiftKeyOnly;\n    }\n\n    listen(this,\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.updateState_, this);\n\n  }\n\n  if ( PointerInteraction ) Draw.__proto__ = PointerInteraction;\n  Draw.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Draw.prototype.constructor = Draw;\n\n  /**\n   * @inheritDoc\n   */\n  Draw.prototype.setMap = function setMap (map) {\n    PointerInteraction.prototype.setMap.call(this, map);\n    this.updateState_();\n  };\n\n  /**\n   * Handle move events.\n   * @param {module:ol/MapBrowserEvent} event A move event.\n   * @return {boolean} Pass the event to other interactions.\n   * @private\n   */\n  Draw.prototype.handlePointerMove_ = function handlePointerMove_ (event) {\n    if (this.downPx_ &&\n        ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))) {\n      var downPx = this.downPx_;\n      var clickPx = event.pixel;\n      var dx = downPx[0] - clickPx[0];\n      var dy = downPx[1] - clickPx[1];\n      var squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_ ?\n        squaredDistance > this.squaredClickTolerance_ :\n        squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return true;\n      }\n    }\n\n    if (this.finishCoordinate_) {\n      this.modifyDrawing_(event);\n    } else {\n      this.createOrUpdateSketchPoint_(event);\n    }\n    return true;\n  };\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {module:ol/MapBrowserEvent} event Event.\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  Draw.prototype.atFinish_ = function atFinish_ (event) {\n    var this$1 = this;\n\n    var at = false;\n    if (this.sketchFeature_) {\n      var potentiallyDone = false;\n      var potentiallyFinishCoordinates = [this.finishCoordinate_];\n      if (this.mode_ === Mode.LINE_STRING) {\n        potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n      } else if (this.mode_ === Mode.POLYGON) {\n        potentiallyDone = this.sketchCoords_[0].length >\n            this.minPoints_;\n        potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n          this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n      }\n      if (potentiallyDone) {\n        var map = event.map;\n        for (var i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          var finishCoordinate = potentiallyFinishCoordinates[i];\n          var finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          var pixel = event.pixel;\n          var dx = pixel[0] - finishPixel[0];\n          var dy = pixel[1] - finishPixel[1];\n          var snapTolerance = this$1.freehand_ ? 1 : this$1.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this$1.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  };\n\n  /**\n   * @param {module:ol/MapBrowserEvent} event Event.\n   * @private\n   */\n  Draw.prototype.createOrUpdateSketchPoint_ = function createOrUpdateSketchPoint_ (event) {\n    var coordinates = event.coordinate.slice();\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      var sketchPointGeom = /** @type {module:ol/geom/Point} */ (this.sketchPoint_.getGeometry());\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  };\n\n  /**\n   * Start the drawing.\n   * @param {module:ol/MapBrowserEvent} event Event.\n   * @private\n   */\n  Draw.prototype.startDrawing_ = function startDrawing_ (event) {\n    var start = event.coordinate;\n    this.finishCoordinate_ = start;\n    if (this.mode_ === Mode.POINT) {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === Mode.POLYGON) {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(\n        new LineString(this.sketchLineCoords_));\n    }\n    var geometry = this.geometryFunction_(this.sketchCoords_);\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  };\n\n  /**\n   * Modify the drawing.\n   * @param {module:ol/MapBrowserEvent} event Event.\n   * @private\n   */\n  Draw.prototype.modifyDrawing_ = function modifyDrawing_ (event) {\n    var coordinate = event.coordinate;\n    var geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n    var coordinates, last;\n    if (this.mode_ === Mode.POINT) {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = this.sketchCoords_[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(event)) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(/** @type {!Array.<module:ol/coordinate~Coordinate>} */ (this.sketchCoords_), geometry);\n    if (this.sketchPoint_) {\n      var sketchPointGeom = /** @type {module:ol/geom/Point} */ (this.sketchPoint_.getGeometry());\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    var sketchLineGeom;\n    if (geometry instanceof Polygon &&\n        this.mode_ !== Mode.POLYGON) {\n      if (!this.sketchLine_) {\n        this.sketchLine_ = new Feature();\n      }\n      var ring = geometry.getLinearRing(0);\n      sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n      if (!sketchLineGeom) {\n        sketchLineGeom = new LineString(ring.getFlatCoordinates(), ring.getLayout());\n        this.sketchLine_.setGeometry(sketchLineGeom);\n      } else {\n        sketchLineGeom.setFlatCoordinates(\n          ring.getLayout(), ring.getFlatCoordinates());\n        sketchLineGeom.changed();\n      }\n    } else if (this.sketchLineCoords_) {\n      sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  };\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {module:ol/MapBrowserEvent} event Event.\n   * @private\n   */\n  Draw.prototype.addToDrawing_ = function addToDrawing_ (event) {\n    var coordinate = event.coordinate;\n    var geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n    var done;\n    var coordinates;\n    if (this.mode_ === Mode.LINE_STRING) {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = this.sketchCoords_;\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry);\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = this.sketchCoords_[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry);\n    }\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  };\n\n  /**\n   * Remove last point of the feature currently being drawn.\n   * @api\n   */\n  Draw.prototype.removeLastPoint = function removeLastPoint () {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    var geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n    var coordinates, sketchLineGeom;\n    if (this.mode_ === Mode.LINE_STRING) {\n      coordinates = this.sketchCoords_;\n      coordinates.splice(-2, 1);\n      this.geometryFunction_(coordinates, geometry);\n      if (coordinates.length >= 2) {\n        this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n      }\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = this.sketchCoords_[0];\n      coordinates.splice(-2, 1);\n      sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n      sketchLineGeom.setCoordinates(coordinates);\n      this.geometryFunction_(this.sketchCoords_, geometry);\n    }\n\n    if (coordinates.length === 0) {\n      this.finishCoordinate_ = null;\n    }\n\n    this.updateSketchFeatures_();\n  };\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  Draw.prototype.finishDrawing = function finishDrawing () {\n    var sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    var coordinates = this.sketchCoords_;\n    var geometry = /** @type {module:ol/geom/SimpleGeometry} */ (sketchFeature.getGeometry());\n    if (this.mode_ === Mode.LINE_STRING) {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry);\n    } else if (this.mode_ === Mode.POLYGON) {\n      // remove the redundant last point in ring\n      coordinates[0].pop();\n      this.geometryFunction_(coordinates, geometry);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === GeometryType.MULTI_POINT) {\n      sketchFeature.setGeometry(new MultiPoint([coordinates]));\n    } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n      sketchFeature.setGeometry(new MultiLineString([coordinates]));\n    } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n      sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  };\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {module:ol/Feature} The sketch feature (or null if none).\n   * @private\n   */\n  Draw.prototype.abortDrawing_ = function abortDrawing_ () {\n    this.finishCoordinate_ = null;\n    var sketchFeature = this.sketchFeature_;\n    if (sketchFeature) {\n      this.sketchFeature_ = null;\n      this.sketchPoint_ = null;\n      this.sketchLine_ = null;\n      this.overlay_.getSource().clear(true);\n    }\n    return sketchFeature;\n  };\n\n  /**\n   * Extend an existing geometry by adding additional points. This only works\n   * on features with `LineString` geometries, where the interaction will\n   * extend lines by adding points to the end of the coordinates array.\n   * @param {!module:ol/Feature} feature Feature to be extended.\n   * @api\n   */\n  Draw.prototype.extend = function extend (feature) {\n    var geometry = feature.getGeometry();\n    var lineString = /** @type {module:ol/geom/LineString} */ (geometry);\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    var last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  };\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  Draw.prototype.updateSketchFeatures_ = function updateSketchFeatures_ () {\n    var sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    var overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  };\n\n  /**\n   * @private\n   */\n  Draw.prototype.updateState_ = function updateState_ () {\n    var map = this.getMap();\n    var active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing_();\n    }\n    this.overlay_.setMap(active ? map : null);\n  };\n\n  return Draw;\n}(PointerInteraction));\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var styles = createEditingStyle();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {module:ol/MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Draw}\n * @api\n */\nexport function handleEvent(event) {\n  if (event.originalEvent.type === EventType.CONTEXTMENU) {\n    // Avoid context menu for long taps when drawing on mobile\n    event.preventDefault();\n  }\n  this.freehand_ = this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n  var move = event.type === MapBrowserEventType.POINTERMOVE;\n  var pass = true;\n  if (this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n    var now = Date.now();\n    if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n      this.downPx_ = event.pixel;\n      this.shouldHandle_ = !this.freehand_;\n      move = true;\n    } else {\n      this.lastDragTime_ = undefined;\n    }\n    if (this.shouldHandle_ && this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n  }\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (move) {\n    pass = event.type === MapBrowserEventType.POINTERMOVE;\n    if (pass && this.freehand_) {\n      pass = this.handlePointerMove_(event);\n    } else if (event.pointerEvent.pointerType == POINTER_TYPE ||\n        (event.type === MapBrowserEventType.POINTERDRAG && !this.downTimeout_)) {\n      this.handlePointerMove_(event);\n    }\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n\n  return handlePointerEvent.call(this, event) && pass;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Draw}\n */\nfunction handleDownEvent(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(function() {\n      this.handlePointerMove_(new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, event.frameState));\n    }.bind(this), this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Draw}\n */\nfunction handleUpEvent(event) {\n  var pass = true;\n\n  if (this.downTimeout_) {\n    clearTimeout(this.downTimeout_);\n    this.downTimeout_ = undefined;\n  }\n\n  this.handlePointerMove_(event);\n\n  var circleMode = this.mode_ === Mode.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Mode.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n}\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `module:ol/geom/Circle~Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {module:ol/interaction/Draw~GeometryFunction} Function that draws a\n *     polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n  return function(coordinates, opt_geometry) {\n    var center = coordinates[0];\n    var end = coordinates[1];\n    var radius = Math.sqrt(\n      squaredCoordinateDistance(center, end));\n    var geometry = opt_geometry ? /** @type {module:ol/geom/Polygon} */ (opt_geometry) :\n      fromCircle(new Circle(center), opt_sides);\n    var angle = opt_angle ? opt_angle :\n      Math.atan((end[1] - center[1]) / (end[0] - center[0]));\n    makeRegular(geometry, center, radius, angle);\n    return geometry;\n  };\n}\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {module:ol/interaction/Draw~GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return (\n    function(coordinates, opt_geometry) {\n      var extent = boundingExtent(coordinates);\n      var boxCoordinates = [[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]];\n      var geometry = opt_geometry;\n      if (geometry) {\n        geometry.setCoordinates(boxCoordinates);\n      } else {\n        geometry = new Polygon(boxCoordinates);\n      }\n      return geometry;\n    }\n  );\n}\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {module:ol/geom/GeometryType} type Geometry type.\n * @return {module:ol/interaction/Draw~Mode} Drawing mode.\n */\nfunction getMode(type) {\n  var mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Mode.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Mode.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Mode.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Mode.CIRCLE;\n  }\n  return (\n    /** @type {!module:ol/interaction/Draw~Mode} */ (mode)\n  );\n}\n\n\nexport default Draw;\n\n//# sourceMappingURL=Draw.js.map","/**\n * @module ol/interaction/Extent\n */\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {squaredDistanceToSegment, closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport {boundingExtent, getArea} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/extent~Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [boxStyle]\n * Style for the drawn extent box. Defaults to\n * {@link module:ol/style/Style~createEditing()['Polygon']}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to\n * {@link module:ol/style/Style~createEditing()['Point']}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n\n\n/**\n * @enum {string}\n */\nvar ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event module:ol/interaction/Extent~ExtentEventType#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\nvar ExtentInteractionEvent = (function (Event) {\n  function ExtentInteractionEvent(extent) {\n    Event.call(this, ExtentEventType.EXTENTCHANGED);\n\n    /**\n     * The current extent.\n     * @type {module:ol/extent~Extent}\n     * @api\n     */\n    this.extent = extent;\n  }\n\n  if ( Event ) ExtentInteractionEvent.__proto__ = Event;\n  ExtentInteractionEvent.prototype = Object.create( Event && Event.prototype );\n  ExtentInteractionEvent.prototype.constructor = ExtentInteractionEvent;\n\n  return ExtentInteractionEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires module:ol/interaction/Extent~Event\n * @api\n */\nvar ExtentInteraction = (function (PointerInteraction) {\n  function ExtentInteraction(opt_options) {\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleEvent: handleEvent,\n      handleUpEvent: handleUpEvent\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * Extent of the drawn box\n     * @type {module:ol/extent~Extent}\n     * @private\n     */\n    this.extent_ = null;\n\n    /**\n     * Handler for pointer move events\n     * @type {function (module:ol/coordinate~Coordinate): module:ol/extent~Extent|null}\n     * @private\n     */\n    this.pointerHandler_ = null;\n\n    /**\n     * Pixel threshold to snap to extent\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * Is the pointer snapped to an extent vertex\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Feature for displaying the visible extent\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.extentFeature_ = null;\n\n    /**\n     * Feature for displaying the visible pointer\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    if (!opt_options) {\n      opt_options = {};\n    }\n\n    /**\n     * Layer for the extentFeature\n     * @type {module:ol/layer/Vector}\n     * @private\n     */\n    this.extentOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX\n      }),\n      style: opt_options.boxStyle ? opt_options.boxStyle : getDefaultExtentStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * Layer for the vertexFeature\n     * @type {module:ol/layer/Vector}\n     * @private\n     */\n    this.vertexOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX\n      }),\n      style: opt_options.pointerStyle ? opt_options.pointerStyle : getDefaultPointerStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    if (opt_options.extent) {\n      this.setExtent(opt_options.extent);\n    }\n  }\n\n  if ( PointerInteraction ) ExtentInteraction.__proto__ = PointerInteraction;\n  ExtentInteraction.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  ExtentInteraction.prototype.constructor = ExtentInteraction;\n\n  /**\n   * @param {module:ol/pixel~Pixel} pixel cursor location\n   * @param {module:ol/PluggableMap} map map\n   * @returns {module:ol/coordinate~Coordinate|null} snapped vertex on extent\n   * @private\n   */\n  ExtentInteraction.prototype.snapToVertex_ = function snapToVertex_ (pixel, map) {\n    var pixelCoordinate = map.getCoordinateFromPixel(pixel);\n    var sortByDistance = function(a, b) {\n      return squaredDistanceToSegment(pixelCoordinate, a) -\n          squaredDistanceToSegment(pixelCoordinate, b);\n    };\n    var extent = this.getExtent();\n    if (extent) {\n      //convert extents to line segments and find the segment closest to pixelCoordinate\n      var segments = getSegments(extent);\n      segments.sort(sortByDistance);\n      var closestSegment = segments[0];\n\n      var vertex = (closestOnSegment(pixelCoordinate,\n        closestSegment));\n      var vertexPixel = map.getPixelFromCoordinate(vertex);\n\n      //if the distance is within tolerance, snap to the segment\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        //test if we should further snap to a vertex\n        var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        var dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex = squaredDist1 > squaredDist2 ?\n            closestSegment[1] : closestSegment[0];\n        }\n        return vertex;\n      }\n    }\n    return null;\n  };\n\n  /**\n   * @param {module:ol/MapBrowserEvent} mapBrowserEvent pointer move event\n   * @private\n   */\n  ExtentInteraction.prototype.handlePointerMove_ = function handlePointerMove_ (mapBrowserEvent) {\n    var pixel = mapBrowserEvent.pixel;\n    var map = mapBrowserEvent.map;\n\n    var vertex = this.snapToVertex_(pixel, map);\n    if (!vertex) {\n      vertex = map.getCoordinateFromPixel(pixel);\n    }\n    this.createOrUpdatePointerFeature_(vertex);\n  };\n\n  /**\n   * @param {module:ol/extent~Extent} extent extent\n   * @returns {module:ol/Feature} extent as featrue\n   * @private\n   */\n  ExtentInteraction.prototype.createOrUpdateExtentFeature_ = function createOrUpdateExtentFeature_ (extent) {\n    var extentFeature = this.extentFeature_;\n\n    if (!extentFeature) {\n      if (!extent) {\n        extentFeature = new Feature({});\n      } else {\n        extentFeature = new Feature(polygonFromExtent(extent));\n      }\n      this.extentFeature_ = extentFeature;\n      this.extentOverlay_.getSource().addFeature(extentFeature);\n    } else {\n      if (!extent) {\n        extentFeature.setGeometry(undefined);\n      } else {\n        extentFeature.setGeometry(polygonFromExtent(extent));\n      }\n    }\n    return extentFeature;\n  };\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} vertex location of feature\n   * @returns {module:ol/Feature} vertex as feature\n   * @private\n   */\n  ExtentInteraction.prototype.createOrUpdatePointerFeature_ = function createOrUpdatePointerFeature_ (vertex) {\n    var vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(vertex));\n      this.vertexFeature_ = vertexFeature;\n      this.vertexOverlay_.getSource().addFeature(vertexFeature);\n    } else {\n      var geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n      geometry.setCoordinates(vertex);\n    }\n    return vertexFeature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ExtentInteraction.prototype.setMap = function setMap (map) {\n    this.extentOverlay_.setMap(map);\n    this.vertexOverlay_.setMap(map);\n    PointerInteraction.prototype.setMap.call(this, map);\n  };\n\n  /**\n   * Returns the current drawn extent in the view projection\n   *\n   * @return {module:ol/extent~Extent} Drawn extent in the view projection.\n   * @api\n   */\n  ExtentInteraction.prototype.getExtent = function getExtent () {\n    return this.extent_;\n  };\n\n  /**\n   * Manually sets the drawn extent, using the view projection.\n   *\n   * @param {module:ol/extent~Extent} extent Extent\n   * @api\n   */\n  ExtentInteraction.prototype.setExtent = function setExtent (extent) {\n    //Null extent means no bbox\n    this.extent_ = extent ? extent : null;\n    this.createOrUpdateExtentFeature_(extent);\n    this.dispatchEvent(new ExtentInteractionEvent(this.extent_));\n  };\n\n  return ExtentInteraction;\n}(PointerInteraction));\n\n/**\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Event.\n * @return {boolean} Propagate event?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n  //display pointer (if not dragging)\n  if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE && !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n  //call pointer to determine up/down/drag\n  handlePointerEvent.call(this, mapBrowserEvent);\n  //return false to stop propagation\n  return false;\n}\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Event handled?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  var pixel = mapBrowserEvent.pixel;\n  var map = mapBrowserEvent.map;\n\n  var extent = this.getExtent();\n  var vertex = this.snapToVertex_(pixel, map);\n\n  //find the extent corner opposite the passed corner\n  var getOpposingPoint = function(point) {\n    var x_ = null;\n    var y_ = null;\n    if (point[0] == extent[0]) {\n      x_ = extent[2];\n    } else if (point[0] == extent[2]) {\n      x_ = extent[0];\n    }\n    if (point[1] == extent[1]) {\n      y_ = extent[3];\n    } else if (point[1] == extent[3]) {\n      y_ = extent[1];\n    }\n    if (x_ !== null && y_ !== null) {\n      return [x_, y_];\n    }\n    return null;\n  };\n  if (vertex && extent) {\n    var x = (vertex[0] == extent[0] || vertex[0] == extent[2]) ? vertex[0] : null;\n    var y = (vertex[1] == extent[1] || vertex[1] == extent[3]) ? vertex[1] : null;\n\n    //snap to point\n    if (x !== null && y !== null) {\n      this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n    //snap to edge\n    } else if (x !== null) {\n      this.pointerHandler_ = getEdgeHandler(\n        getOpposingPoint([x, extent[1]]),\n        getOpposingPoint([x, extent[3]])\n      );\n    } else if (y !== null) {\n      this.pointerHandler_ = getEdgeHandler(\n        getOpposingPoint([extent[0], y]),\n        getOpposingPoint([extent[2], y])\n      );\n    }\n  //no snap - new bbox\n  } else {\n    vertex = map.getCoordinateFromPixel(pixel);\n    this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n    this.pointerHandler_ = getPointHandler(vertex);\n  }\n  return true; //event handled; start downup sequence\n}\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Event handled?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (this.pointerHandler_) {\n    var pixelCoordinate = mapBrowserEvent.coordinate;\n    this.setExtent(this.pointerHandler_(pixelCoordinate));\n    this.createOrUpdatePointerFeature_(pixelCoordinate);\n  }\n  return true;\n}\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  this.pointerHandler_ = null;\n  //If bbox is zero area, set to null;\n  var extent = this.getExtent();\n  if (!extent || getArea(extent) === 0) {\n    this.setExtent(null);\n  }\n  return false; //Stop handling downup sequence\n}\n\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {module:ol/style/Style~StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n  var style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POLYGON];\n  };\n}\n\n/**\n * Returns the default style for the pointer\n *\n * @return {module:ol/style/Style~StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n  var style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n/**\n * @param {module:ol/coordinate~Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @returns {function (module:ol/coordinate~Coordinate): module:ol/extent~Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n  return function(point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n\n/**\n * @param {module:ol/coordinate~Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {module:ol/coordinate~Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @returns {function (module:ol/coordinate~Coordinate): module:ol/extent~Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function(point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  } else if (fixedP1[1] == fixedP2[1]) {\n    return function(point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  } else {\n    return null;\n  }\n}\n\n/**\n * @param {module:ol/extent~Extent} extent extent\n * @returns {Array<Array<module:ol/coordinate~Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n  return [\n    [[extent[0], extent[1]], [extent[0], extent[3]]],\n    [[extent[0], extent[3]], [extent[2], extent[3]]],\n    [[extent[2], extent[3]], [extent[2], extent[1]]],\n    [[extent[2], extent[1]], [extent[0], extent[1]]]\n  ];\n}\n\n\nexport default ExtentInteraction;\n\n//# sourceMappingURL=Extent.js.map","/**\n * @module ol/interaction/Modify\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {equals} from '../array.js';\nimport {equals as coordinatesEqual, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, closestOnSegment} from '../coordinate.js';\nimport {listen, unlisten} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {always, primaryAction, altKeyOnly, singleClick} from '../events/condition.js';\nimport {boundingExtent, buffer, createOrUpdateFromCoordinate} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nvar CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nvar CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\n\n/**\n * @enum {string}\n */\nvar ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend'\n};\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array.<number>} [depth]\n * @property {module:ol/Feature} feature\n * @property {module:ol/geom/SimpleGeometry} geometry\n * @property {number} index\n * @property {Array.<module:ol/extent~Extent>} segment\n * @property {Array.<module:ol/interaction/Modify~SegmentData>} [featureSegments]\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition~primaryAction}.\n * @property {module:ol/events/condition~Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition~singleClick} with\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\n * @property {module:ol/events/condition~Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex can be added to the sketch\n * features. Default is {@link module:ol/events/condition~always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style used for the features being modified. By default the default edit\n * style is used (see {@link module:ol/style}).\n * @property {module:ol/source/Vector} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the features option.\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the source option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport var ModifyEvent = (function (Event) {\n  function ModifyEvent(type, features, mapBrowserPointerEvent) {\n    Event.call(this, type);\n\n    /**\n     * The features being modified.\n     * @type {module:ol/Collection.<module:ol/Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {module:ol/MapBrowserEvent}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserPointerEvent;\n\n  }\n\n  if ( Event ) ModifyEvent.__proto__ = Event;\n  ModifyEvent.prototype = Object.create( Event && Event.prototype );\n  ModifyEvent.prototype.constructor = ModifyEvent;\n\n  return ModifyEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires module:ol/interaction/Modify~ModifyEvent\n * @api\n */\nvar Modify = (function (PointerInteraction) {\n  function Modify(options) {\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleEvent: handleEvent,\n      handleUpEvent: handleUpEvent\n    });\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n\n    /**\n     * @private\n     * @param {module:ol/MapBrowserEvent} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function(mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {module:ol/events/condition~Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition ?\n      options.deleteCondition : this.defaultDeleteCondition_;\n\n    /**\n     * @type {module:ol/events/condition~Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition ?\n      options.insertVertexCondition : always;\n\n    /**\n     * Editing vertex.\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object.<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {module:ol/pixel~Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.modified_ = false;\n\n    /**\n     * Segment RTree for each layer\n     * @type {module:ol/structs/RBush.<module:ol/interaction/Modify~SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {module:ol/layer/Vector}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object.<string, function(module:ol/Feature, module:ol/geom/Geometry)>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_,\n      'LineString': this.writeLineStringGeometry_,\n      'LinearRing': this.writeLineStringGeometry_,\n      'Polygon': this.writePolygonGeometry_,\n      'MultiPoint': this.writeMultiPointGeometry_,\n      'MultiLineString': this.writeMultiLineStringGeometry_,\n      'MultiPolygon': this.writeMultiPolygonGeometry_,\n      'Circle': this.writeCircleGeometry_,\n      'GeometryCollection': this.writeGeometryCollectionGeometry_\n    };\n\n\n    /**\n     * @type {module:ol/source/Vector}\n     * @private\n     */\n    this.source_ = null;\n\n    var features;\n    if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      listen(this.source_, VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_, this);\n      listen(this.source_, VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_, this);\n    } else {\n      features = options.features;\n    }\n    if (!features) {\n      throw new Error('The modify interaction requires features or a source');\n    }\n\n    /**\n     * @type {module:ol/Collection.<module:ol/Feature>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    listen(this.features_, CollectionEventType.ADD,\n      this.handleFeatureAdd_, this);\n    listen(this.features_, CollectionEventType.REMOVE,\n      this.handleFeatureRemove_, this);\n\n    /**\n     * @type {module:ol/MapBrowserPointerEvent}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n  }\n\n  if ( PointerInteraction ) Modify.__proto__ = PointerInteraction;\n  Modify.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Modify.prototype.constructor = Modify;\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @private\n   */\n  Modify.prototype.addFeature_ = function addFeature_ (feature) {\n    var geometry = feature.getGeometry();\n    if (geometry && geometry.getType() in this.SEGMENT_WRITERS_) {\n      this.SEGMENT_WRITERS_[geometry.getType()].call(this, feature, geometry);\n    }\n    var map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    listen(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  };\n\n  /**\n   * @param {module:ol/MapBrowserPointerEvent} evt Map browser event\n   * @private\n   */\n  Modify.prototype.willModifyFeatures_ = function willModifyFeatures_ (evt) {\n    if (!this.modified_) {\n      this.modified_ = true;\n      this.dispatchEvent(new ModifyEvent(\n        ModifyEventType.MODIFYSTART, this.features_, evt));\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @private\n   */\n  Modify.prototype.removeFeature_ = function removeFeature_ (feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of canditate features\n    // is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    unlisten(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @private\n   */\n  Modify.prototype.removeFeatureSegmentData_ = function removeFeatureSegmentData_ (feature) {\n    var rBush = this.rBush_;\n    var /** @type {Array.<module:ol/interaction/Modify~SegmentData>} */ nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {module:ol/interaction/Modify~SegmentData} node RTree node.\n       */\n      function(node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n    for (var i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Modify.prototype.setActive = function setActive (active) {\n    if (this.vertexFeature_ && !active) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    PointerInteraction.prototype.setActive.call(this, active);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Modify.prototype.setMap = function setMap (map) {\n    this.overlay_.setMap(map);\n    PointerInteraction.prototype.setMap.call(this, map);\n  };\n\n  /**\n   * @param {module:ol/source/Vector~VectorSourceEvent} event Event.\n   * @private\n   */\n  Modify.prototype.handleSourceAdd_ = function handleSourceAdd_ (event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  };\n\n  /**\n   * @param {module:ol/source/Vector~VectorSourceEvent} event Event.\n   * @private\n   */\n  Modify.prototype.handleSourceRemove_ = function handleSourceRemove_ (event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  };\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  Modify.prototype.handleFeatureAdd_ = function handleFeatureAdd_ (evt) {\n    this.addFeature_(/** @type {module:ol/Feature} */ (evt.element));\n  };\n\n  /**\n   * @param {module:ol/events/Event} evt Event.\n   * @private\n   */\n  Modify.prototype.handleFeatureChange_ = function handleFeatureChange_ (evt) {\n    if (!this.changingFeature_) {\n      var feature = /** @type {module:ol/Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  };\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  Modify.prototype.handleFeatureRemove_ = function handleFeatureRemove_ (evt) {\n    var feature = /** @type {module:ol/Feature} */ (evt.element);\n    this.removeFeature_(feature);\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/Point} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writePointGeometry_ = function writePointGeometry_ (feature, geometry) {\n    var coordinates = geometry.getCoordinates();\n    var segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiPoint} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeMultiPointGeometry_ = function writeMultiPointGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var points = geometry.getCoordinates();\n    for (var i = 0, ii = points.length; i < ii; ++i) {\n      var coordinates = points[i];\n      var segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates]\n      });\n      this$1.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/LineString} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeLineStringGeometry_ = function writeLineStringGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var coordinates = geometry.getCoordinates();\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      var segment = coordinates.slice(i, i + 2);\n      var segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment\n      });\n      this$1.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiLineString} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeMultiLineStringGeometry_ = function writeMultiLineStringGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var lines = geometry.getCoordinates();\n    for (var j = 0, jj = lines.length; j < jj; ++j) {\n      var coordinates = lines[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment\n        });\n        this$1.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/Polygon} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writePolygonGeometry_ = function writePolygonGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var rings = geometry.getCoordinates();\n    for (var j = 0, jj = rings.length; j < jj; ++j) {\n      var coordinates = rings[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment\n        });\n        this$1.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeMultiPolygonGeometry_ = function writeMultiPolygonGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var polygons = geometry.getCoordinates();\n    for (var k = 0, kk = polygons.length; k < kk; ++k) {\n      var rings = polygons[k];\n      for (var j = 0, jj = rings.length; j < jj; ++j) {\n        var coordinates = rings[j];\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          var segment = coordinates.slice(i, i + 2);\n          var segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment\n          });\n          this$1.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  };\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/geom/Circle} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeCircleGeometry_ = function writeCircleGeometry_ (feature, geometry) {\n    var coordinates = geometry.getCenter();\n    var centerSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates]\n    });\n    var circumferenceSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates]\n    });\n    var featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n    this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeGeometryCollectionGeometry_ = function writeGeometryCollectionGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0; i < geometries.length; ++i) {\n      this$1.SEGMENT_WRITERS_[geometries[i].getType()].call(this$1, feature, geometries[i]);\n    }\n  };\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinates Coordinates.\n   * @return {module:ol/Feature} Vertex feature.\n   * @private\n   */\n  Modify.prototype.createOrUpdateVertexFeature_ = function createOrUpdateVertexFeature_ (coordinates) {\n    var vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      this.overlay_.getSource().addFeature(vertexFeature);\n    } else {\n      var geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n      geometry.setCoordinates(coordinates);\n    }\n    return vertexFeature;\n  };\n\n  /**\n   * @param {module:ol/MapBrowserEvent} evt Event.\n   * @private\n   */\n  Modify.prototype.handlePointerMove_ = function handlePointerMove_ (evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map);\n  };\n\n  /**\n   * @param {module:ol/pixel~Pixel} pixel Pixel\n   * @param {module:ol/PluggableMap} map Map.\n   * @private\n   */\n  Modify.prototype.handlePointerAtPixel_ = function handlePointerAtPixel_ (pixel, map) {\n    var pixelCoordinate = map.getCoordinateFromPixel(pixel);\n    var sortByDistance = function(a, b) {\n      return pointDistanceToSegmentDataSquared(pixelCoordinate, a) -\n          pointDistanceToSegmentDataSquared(pixelCoordinate, b);\n    };\n\n    var box = buffer(createOrUpdateFromCoordinate(pixelCoordinate),\n      map.getView().getResolution() * this.pixelTolerance_);\n\n    var rBush = this.rBush_;\n    var nodes = rBush.getInExtent(box);\n    if (nodes.length > 0) {\n      nodes.sort(sortByDistance);\n      var node = nodes[0];\n      var closestSegment = node.segment;\n      var vertex = closestOnSegmentData(pixelCoordinate, node);\n      var vertexPixel = map.getPixelFromCoordinate(vertex);\n      var dist = coordinateDistance(pixel, vertexPixel);\n      if (dist <= this.pixelTolerance_) {\n        var vertexSegments = {};\n\n        if (node.geometry.getType() === GeometryType.CIRCLE &&\n        node.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(vertex);\n        } else {\n          var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(vertex);\n          for (var i = 1, ii = nodes.length; i < ii; ++i) {\n            var segment = nodes[i].segment;\n            if ((coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1]) ||\n                (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0])))) {\n              vertexSegments[getUid(segment)] = true;\n            } else {\n              break;\n            }\n          }\n        }\n\n        vertexSegments[getUid(closestSegment)] = true;\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  };\n\n  /**\n   * @param {module:ol/interaction/Modify~SegmentData} segmentData Segment data.\n   * @param {module:ol/coordinate~Coordinate} vertex Vertex.\n   * @private\n   */\n  Modify.prototype.insertVertex_ = function insertVertex_ (segmentData, vertex) {\n    var segment = segmentData.segment;\n    var feature = segmentData.feature;\n    var geometry = segmentData.geometry;\n    var depth = segmentData.depth;\n    var index = /** @type {number} */ (segmentData.index);\n    var coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    var rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n    var newSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index\n    });\n    rTree.insert(boundingExtent(newSegmentData.segment),\n      newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    var newSegmentData2 = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1\n    });\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  };\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  Modify.prototype.removePoint = function removePoint () {\n    if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n      var evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt);\n      this.removeVertex_();\n      this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n      this.modified_ = false;\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  Modify.prototype.removeVertex_ = function removeVertex_ () {\n    var this$1 = this;\n\n    var dragSegments = this.dragSegments_;\n    var segmentsByFeature = {};\n    var deleted = false;\n    var component, coordinates, dragSegment, geometry, i, index, left;\n    var newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case GeometryType.MULTI_LINE_STRING:\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.LINE_STRING:\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.MULTI_POLYGON:\n          component = component[segmentData.depth[1]];\n          /* falls through */\n        case GeometryType.POLYGON:\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n          // pass\n      }\n\n      if (deleted) {\n        this$1.setGeometryCoordinates_(geometry, coordinates);\n        var segments = [];\n        if (left !== undefined) {\n          this$1.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this$1.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          var newSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments\n          });\n          this$1.rBush_.insert(boundingExtent(newSegmentData.segment),\n            newSegmentData);\n        }\n        this$1.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this$1.vertexFeature_) {\n          this$1.overlay_.getSource().removeFeature(this$1.vertexFeature_);\n          this$1.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n\n    }\n    return deleted;\n  };\n\n  /**\n   * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  Modify.prototype.setGeometryCoordinates_ = function setGeometryCoordinates_ (geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  };\n\n  /**\n   * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array.<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  Modify.prototype.updateSegmentIndices_ = function updateSegmentIndices_ (geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(geometry.getExtent(), function(segmentDataMatch) {\n      if (segmentDataMatch.geometry === geometry &&\n          (depth === undefined || segmentDataMatch.depth === undefined ||\n          equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index) {\n        segmentDataMatch.index += delta;\n      }\n    });\n  };\n\n  return Modify;\n}(PointerInteraction));\n\n\n/**\n * @param {module:ol/interaction/Modify~SegmentData} a The first segment data.\n * @param {module:ol/interaction/Modify~SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Modify}\n */\nfunction handleDownEvent(evt) {\n  var this$1 = this;\n\n  if (!this.condition_(evt)) {\n    return false;\n  }\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  var pixelCoordinate = evt.map.getCoordinateFromPixel(evt.pixel);\n  this.dragSegments_.length = 0;\n  this.modified_ = false;\n  var vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    var insertVertices = [];\n    var geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n    var vertex = geometry.getCoordinates();\n    var vertexExtent = boundingExtent([vertex]);\n    var segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    var componentSegments = {};\n    segmentDataMatches.sort(compareIndexes);\n    for (var i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      var segmentDataMatch = segmentDataMatches[i];\n      var segment = segmentDataMatch.segment;\n      var uid = getUid(segmentDataMatch.feature);\n      var depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += '-' + depth.join('-'); // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n      segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        var closestVertex = closestOnSegmentData(pixelCoordinate, segmentDataMatch);\n        if (coordinatesEqual(closestVertex, vertex) && !componentSegments[uid][0]) {\n          this$1.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n        }\n      } else if (coordinatesEqual(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this$1.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (coordinatesEqual(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n\n        // prevent dragging closed linestrings by the connecting node\n        if ((segmentDataMatch.geometry.getType() ===\n            GeometryType.LINE_STRING ||\n            segmentDataMatch.geometry.getType() ===\n            GeometryType.MULTI_LINE_STRING) &&\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0) {\n          continue;\n        }\n\n        this$1.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      } else if (this$1.insertVertexCondition_(evt) && getUid(segment) in this$1.vertexSegments_ &&\n          (!componentSegments[uid][0] && !componentSegments[uid][1])) {\n        insertVertices.push([segmentDataMatch, vertex]);\n      }\n    }\n    if (insertVertices.length) {\n      this.willModifyFeatures_(evt);\n    }\n    for (var j = insertVertices.length - 1; j >= 0; --j) {\n      this$1.insertVertex_.apply(this$1, insertVertices[j]);\n    }\n  }\n  return !!this.vertexFeature_;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @this {module:ol/interaction/Modify}\n */\nfunction handleDragEvent(evt) {\n  var this$1 = this;\n\n  this.ignoreNextSingleClick_ = false;\n  this.willModifyFeatures_(evt);\n\n  var vertex = evt.coordinate;\n  for (var i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n    var dragSegment = this$1.dragSegments_[i];\n    var segmentData = dragSegment[0];\n    var depth = segmentData.depth;\n    var geometry = segmentData.geometry;\n    var coordinates = (void 0);\n    var segment = segmentData.segment;\n    var index = dragSegment[1];\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(segment[index][vertex.length]);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.POINT:\n        coordinates = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.MULTI_POINT:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index] = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.CIRCLE:\n        segment[0] = segment[1] = vertex;\n        if (segmentData.index === CIRCLE_CENTER_INDEX) {\n          this$1.changingFeature_ = true;\n          geometry.setCenter(vertex);\n          this$1.changingFeature_ = false;\n        } else { // We're dragging the circle's circumference:\n          this$1.changingFeature_ = true;\n          geometry.setRadius(coordinateDistance(geometry.getCenter(), vertex));\n          this$1.changingFeature_ = false;\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (coordinates) {\n      this$1.setGeometryCoordinates_(geometry, coordinates);\n    }\n  }\n  this.createOrUpdateVertexFeature_(vertex);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Modify}\n */\nfunction handleUpEvent(evt) {\n  var this$1 = this;\n\n  for (var i = this.dragSegments_.length - 1; i >= 0; --i) {\n    var segmentData = this$1.dragSegments_[i][0];\n    var geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE) {\n      // Update a circle object in the R* bush:\n      var coordinates = geometry.getCenter();\n      var centerSegmentData = segmentData.featureSegments[0];\n      var circumferenceSegmentData = segmentData.featureSegments[1];\n      centerSegmentData.segment[0] = centerSegmentData.segment[1] = coordinates;\n      circumferenceSegmentData.segment[0] = circumferenceSegmentData.segment[1] = coordinates;\n      this$1.rBush_.update(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n      this$1.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\n    } else {\n      this$1.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n    }\n  }\n  if (this.modified_) {\n    this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n  }\n  return false;\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Modify}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n  this.lastPointerEvent_ = mapBrowserEvent;\n\n  var handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n  if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n    if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK || !this.ignoreNextSingleClick_) {\n      handled = this.removePoint();\n    } else {\n      handled = true;\n    }\n  }\n\n  if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n    this.ignoreNextSingleClick_ = false;\n  }\n\n  return handlePointerEvent.call(this, mapBrowserEvent) && !handled;\n}\n\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {module:ol/coordinate~Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {module:ol/interaction/Modify~SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction pointDistanceToSegmentDataSquared(pointCoordinates, segmentData) {\n  var geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    var circleGeometry = /** @type {module:ol/geom/Circle} */ (geometry);\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      var distanceToCenterSquared =\n            squaredCoordinateDistance(circleGeometry.getCenter(), pointCoordinates);\n      var distanceToCircumference =\n            Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n  return squaredDistanceToSegment(pointCoordinates, segmentData.segment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {module:ol/coordinate~Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {module:ol/interaction/Modify~SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @return {module:ol/coordinate~Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData) {\n  var geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE &&\n  segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n    return geometry.getClosestPoint(pointCoordinates);\n  }\n  return closestOnSegment(pointCoordinates, segmentData.segment);\n}\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n\nexport default Modify;\n\n//# sourceMappingURL=Modify.js.map","/**\n * @module ol/interaction/Select\n */\nimport {getUid} from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {extend, includes} from '../array.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {singleClick, never, shiftKeyOnly, pointerMove} from '../events/condition.js';\nimport {TRUE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from '../interaction/Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {clear} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @enum {string}\n */\nvar SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select'\n};\n\n\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function((module:ol/Feature|module:ol/render/Feature), module:ol/layer/Layer):\n *     boolean} FilterFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array.<module:ol/layer/Layer>|function(module:ol/layer/Layer): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}).\n * @property {module:ol/events/condition~Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {module:ol/events/condition~Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {module:ol/interaction/Select~FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the selection\n * overlay.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nvar SelectEvent = (function (Event) {\n  function SelectEvent(type, selected, deselected, mapBrowserEvent) {\n    Event.call(this, type);\n\n    /**\n     * Selected features array.\n     * @type {Array.<module:ol/Feature>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array.<module:ol/Feature>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {module:ol/MapBrowserEvent}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n  if ( Event ) SelectEvent.__proto__ = Event;\n  SelectEvent.prototype = Object.create( Event && Event.prototype );\n  SelectEvent.prototype.constructor = SelectEvent;\n\n  return SelectEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @fires SelectEvent\n * @api\n */\nvar Select = (function (Interaction) {\n  function Select(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {module:ol/interaction/Select~FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    var featureOverlay = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        features: options.features,\n        wrapX: options.wrapX\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * @private\n     * @type {module:ol/layer/Vector}\n     */\n    this.featureOverlay_ = featureOverlay;\n\n    /** @type {function(module:ol/layer/Layer): boolean} */\n    var layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        var layers = options.layers;\n        layerFilter = function(layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(module:ol/layer/Layer): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object.<number, module:ol/layer/Layer>}\n     */\n    this.featureLayerAssociation_ = {};\n\n    var features = this.featureOverlay_.getSource().getFeaturesCollection();\n    listen(features, CollectionEventType.ADD,\n      this.addFeature_, this);\n    listen(features, CollectionEventType.REMOVE,\n      this.removeFeature_, this);\n\n  }\n\n  if ( Interaction ) Select.__proto__ = Interaction;\n  Select.prototype = Object.create( Interaction && Interaction.prototype );\n  Select.prototype.constructor = Select;\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @private\n   */\n  Select.prototype.addFeatureLayerAssociation_ = function addFeatureLayerAssociation_ (feature, layer) {\n    var key = getUid(feature);\n    this.featureLayerAssociation_[key] = layer;\n  };\n\n  /**\n   * Get the selected features.\n   * @return {module:ol/Collection.<module:ol/Feature>} Features collection.\n   * @api\n   */\n  Select.prototype.getFeatures = function getFeatures () {\n    return this.featureOverlay_.getSource().getFeaturesCollection();\n  };\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n  Select.prototype.getHitTolerance = function getHitTolerance () {\n    return this.hitTolerance_;\n  };\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n   * the (last) selected feature. Note that this will not work with any\n   * programmatic method like pushing features to\n   * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature\n   * @return {module:ol/layer/Vector} Layer.\n   * @api\n   */\n  Select.prototype.getLayer = function getLayer (feature) {\n    var key = getUid(feature);\n    return (\n      /** @type {module:ol/layer/Vector} */ (this.featureLayerAssociation_[key])\n    );\n  };\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features. This only works for the canvas renderer and\n   * not for WebGL.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  Select.prototype.setHitTolerance = function setHitTolerance (hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  };\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {module:ol/PluggableMap} map Map.\n   * @override\n   * @api\n   */\n  Select.prototype.setMap = function setMap (map) {\n    var currentMap = this.getMap();\n    var selectedFeatures =\n        this.featureOverlay_.getSource().getFeaturesCollection();\n    if (currentMap) {\n      selectedFeatures.forEach(currentMap.unskipFeature.bind(currentMap));\n    }\n    Interaction.prototype.setMap.call(this, map);\n    this.featureOverlay_.setMap(map);\n    if (map) {\n      selectedFeatures.forEach(map.skipFeature.bind(map));\n    }\n  };\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  Select.prototype.addFeature_ = function addFeature_ (evt) {\n    var map = this.getMap();\n    if (map) {\n      map.skipFeature(/** @type {module:ol/Feature} */ (evt.element));\n    }\n  };\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  Select.prototype.removeFeature_ = function removeFeature_ (evt) {\n    var map = this.getMap();\n    if (map) {\n      map.unskipFeature(/** @type {module:ol/Feature} */ (evt.element));\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @private\n   */\n  Select.prototype.removeFeatureLayerAssociation_ = function removeFeatureLayerAssociation_ (feature) {\n    var key = getUid(feature);\n    delete this.featureLayerAssociation_[key];\n  };\n\n  return Select;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n * selected state of features.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Select}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n  var add = this.addCondition_(mapBrowserEvent);\n  var remove = this.removeCondition_(mapBrowserEvent);\n  var toggle = this.toggleCondition_(mapBrowserEvent);\n  var set = !add && !remove && !toggle;\n  var map = mapBrowserEvent.map;\n  var features = this.featureOverlay_.getSource().getFeaturesCollection();\n  var deselected = [];\n  var selected = [];\n  if (set) {\n    // Replace the currently selected feature(s) with the feature(s) at the\n    // pixel, or clear the selected feature(s) if there is no feature at\n    // the pixel.\n    clear(this.featureLayerAssociation_);\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @param {module:ol/layer/Layer} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            selected.push(feature);\n            this.addFeatureLayerAssociation_(feature, layer);\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (var i = features.getLength() - 1; i >= 0; --i) {\n      var feature = features.item(i);\n      var index = selected.indexOf(feature);\n      if (index > -1) {\n        // feature is already selected\n        selected.splice(index, 1);\n      } else {\n        features.remove(feature);\n        deselected.push(feature);\n      }\n    }\n    if (selected.length !== 0) {\n      features.extend(selected);\n    }\n  } else {\n    // Modify the currently selected feature(s).\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @param {module:ol/layer/Layer} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            if ((add || toggle) && !includes(features.getArray(), feature)) {\n              selected.push(feature);\n              this.addFeatureLayerAssociation_(feature, layer);\n            } else if ((remove || toggle) && includes(features.getArray(), feature)) {\n              deselected.push(feature);\n              this.removeFeatureLayerAssociation_(feature);\n            }\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (var j = deselected.length - 1; j >= 0; --j) {\n      features.remove(deselected[j]);\n    }\n    features.extend(selected);\n  }\n  if (selected.length > 0 || deselected.length > 0) {\n    this.dispatchEvent(\n      new SelectEvent(SelectEventType.SELECT,\n        selected, deselected, mapBrowserEvent));\n  }\n  return pointerMove(mapBrowserEvent);\n}\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var styles = createEditingStyle();\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n  extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n\n  return function(feature, resolution) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\nexport default Select;\n\n//# sourceMappingURL=Select.js.map","/**\n * @module ol/interaction/Snap\n */\nimport {getUid} from '../util.js';\nimport {CollectionEvent} from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, closestOnCircle, closestOnSegment, squaredDistanceToSegment} from '../coordinate.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport {VectorSourceEvent} from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n\n/**\n * @typedef {Object} Result\n * @property {boolean} snapped\n * @property {module:ol/coordinate~Coordinate|null} vertex\n * @property {module:ol/pixel~Pixel|null} vertexPixel\n */\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {module:ol/Feature} feature\n * @property {Array.<module:ol/coordinate~Coordinate>} segment\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/Collection.<module:ol/Feature>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {module:ol/source/Vector} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     var snap = new Snap({\n *       source: source\n *     });\n *\n * @api\n */\nvar Snap = (function (PointerInteraction) {\n  function Snap(opt_options) {\n\n    PointerInteraction.call(this, {\n      handleEvent: handleEvent,\n      handleDownEvent: TRUE,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @type {module:ol/source/Vector}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @type {module:ol/Collection.<module:ol/Feature>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array.<module:ol/events~EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object.<number, module:ol/events~EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object.<number, module:ol/extent~Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object.<number, module:ol/Feature>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * Used for distance sorting in sortByDistance_\n     * @type {module:ol/coordinate~Coordinate}\n     * @private\n     */\n    this.pixelCoordinate_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * @type {function(module:ol/interaction/Snap~SegmentData, module:ol/interaction/Snap~SegmentData): number}\n     * @private\n     */\n    this.sortByDistance_ = sortByDistance.bind(this);\n\n\n    /**\n    * Segment RTree for each layer\n    * @type {module:ol/structs/RBush.<module:ol/interaction/Snap~SegmentData>}\n    * @private\n    */\n    this.rBush_ = new RBush();\n\n\n    /**\n    * @const\n    * @private\n    * @type {Object.<string, function(module:ol/Feature, module:ol/geom/Geometry)>}\n    */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_,\n      'LineString': this.writeLineStringGeometry_,\n      'LinearRing': this.writeLineStringGeometry_,\n      'Polygon': this.writePolygonGeometry_,\n      'MultiPoint': this.writeMultiPointGeometry_,\n      'MultiLineString': this.writeMultiLineStringGeometry_,\n      'MultiPolygon': this.writeMultiPolygonGeometry_,\n      'GeometryCollection': this.writeGeometryCollectionGeometry_,\n      'Circle': this.writeCircleGeometry_\n    };\n  }\n\n  if ( PointerInteraction ) Snap.__proto__ = PointerInteraction;\n  Snap.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Snap.prototype.constructor = Snap;\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {module:ol/Feature} feature Feature.\n   * @param {boolean=} opt_listen Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  Snap.prototype.addFeature = function addFeature (feature, opt_listen) {\n    var register = opt_listen !== undefined ? opt_listen : true;\n    var feature_uid = getUid(feature);\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      var segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (segmentWriter) {\n        this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n        segmentWriter.call(this, feature, geometry);\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_, this);\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @private\n   */\n  Snap.prototype.forEachFeatureAdd_ = function forEachFeatureAdd_ (feature) {\n    this.addFeature(feature);\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @private\n   */\n  Snap.prototype.forEachFeatureRemove_ = function forEachFeatureRemove_ (feature) {\n    this.removeFeature(feature);\n  };\n\n  /**\n   * @return {module:ol/Collection.<module:ol/Feature>|Array.<module:ol/Feature>} Features.\n   * @private\n   */\n  Snap.prototype.getFeatures_ = function getFeatures_ () {\n    var features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return (\n      /** @type {!Array.<module:ol/Feature>|!module:ol/Collection.<module:ol/Feature>} */ (features)\n    );\n  };\n\n  /**\n   * @param {module:ol/source/Vector|module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  Snap.prototype.handleFeatureAdd_ = function handleFeatureAdd_ (evt) {\n    var feature;\n    if (evt instanceof VectorSourceEvent) {\n      feature = evt.feature;\n    } else if (evt instanceof CollectionEvent) {\n      feature = evt.element;\n    }\n    this.addFeature(/** @type {module:ol/Feature} */ (feature));\n  };\n\n  /**\n   * @param {module:ol/source/Vector|module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  Snap.prototype.handleFeatureRemove_ = function handleFeatureRemove_ (evt) {\n    var feature;\n    if (evt instanceof VectorSourceEvent) {\n      feature = evt.feature;\n    } else if (evt instanceof CollectionEvent) {\n      feature = evt.element;\n    }\n    this.removeFeature(/** @type {module:ol/Feature} */ (feature));\n  };\n\n  /**\n   * @param {module:ol/events/Event} evt Event.\n   * @private\n   */\n  Snap.prototype.handleFeatureChange_ = function handleFeatureChange_ (evt) {\n    var feature = /** @type {module:ol/Feature} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      var uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  };\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {module:ol/Feature} feature Feature\n   * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  Snap.prototype.removeFeature = function removeFeature (feature, opt_unlisten) {\n    var unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n    var feature_uid = getUid(feature);\n    var extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      var rBush = this.rBush_;\n      var nodesToRemove = [];\n      rBush.forEachInExtent(extent, function(node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (var i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Snap.prototype.setMap = function setMap (map) {\n    var currentMap = this.getMap();\n    var keys = this.featuresListenerKeys_;\n    var features = this.getFeatures_();\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      features.forEach(this.forEachFeatureRemove_.bind(this));\n    }\n    PointerInteraction.prototype.setMap.call(this, map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(this.features_, CollectionEventType.ADD,\n            this.handleFeatureAdd_, this),\n          listen(this.features_, CollectionEventType.REMOVE,\n            this.handleFeatureRemove_, this)\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(this.source_, VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_, this),\n          listen(this.source_, VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_, this)\n        );\n      }\n      features.forEach(this.forEachFeatureAdd_.bind(this));\n    }\n  };\n\n  /**\n   * @param {module:ol/pixel~Pixel} pixel Pixel\n   * @param {module:ol/coordinate~Coordinate} pixelCoordinate Coordinate\n   * @param {module:ol/PluggableMap} map Map.\n   * @return {module:ol/interaction/Snap~Result} Snap result\n   */\n  Snap.prototype.snapTo = function snapTo (pixel, pixelCoordinate, map) {\n\n    var lowerLeft = map.getCoordinateFromPixel(\n      [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n    var upperRight = map.getCoordinateFromPixel(\n      [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n    var box = boundingExtent([lowerLeft, upperRight]);\n\n    var segments = this.rBush_.getInExtent(box);\n\n    // If snapping on vertices only, don't consider circles\n    if (this.vertex_ && !this.edge_) {\n      segments = segments.filter(function(segment) {\n        return segment.feature.getGeometry().getType() !==\n            GeometryType.CIRCLE;\n      });\n    }\n\n    var snappedToVertex = false;\n    var snapped = false;\n    var vertex = null;\n    var vertexPixel = null;\n    var dist, pixel1, pixel2, squaredDist1, squaredDist2;\n    if (segments.length > 0) {\n      this.pixelCoordinate_ = pixelCoordinate;\n      segments.sort(this.sortByDistance_);\n      var closestSegment = segments[0].segment;\n      var isCircle = segments[0].feature.getGeometry().getType() ===\n          GeometryType.CIRCLE;\n      if (this.vertex_ && !this.edge_) {\n        pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\n        squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\n        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        snappedToVertex = dist <= this.pixelTolerance_;\n        if (snappedToVertex) {\n          snapped = true;\n          vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n          vertexPixel = map.getPixelFromCoordinate(vertex);\n        }\n      } else if (this.edge_) {\n        if (isCircle) {\n          vertex = closestOnCircle(pixelCoordinate,\n            /** @type {module:ol/geom/Circle} */ (segments[0].feature.getGeometry()));\n        } else {\n          vertex = closestOnSegment(pixelCoordinate, closestSegment);\n        }\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n        if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n          snapped = true;\n          if (this.vertex_ && !isCircle) {\n            pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n            pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n            squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n            squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n            dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n            snappedToVertex = dist <= this.pixelTolerance_;\n            if (snappedToVertex) {\n              vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n              vertexPixel = map.getPixelFromCoordinate(vertex);\n            }\n          }\n        }\n      }\n      if (snapped) {\n        vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n      }\n    }\n    return (\n      /** @type {module:ol/interaction/Snap~Result} */ ({\n        snapped: snapped,\n        vertex: vertex,\n        vertexPixel: vertexPixel\n      })\n    );\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @private\n   */\n  Snap.prototype.updateFeature_ = function updateFeature_ (feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/Circle} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeCircleGeometry_ = function writeCircleGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var polygon = fromCircle(geometry);\n    var coordinates = polygon.getCoordinates()[0];\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      var segment = coordinates.slice(i, i + 2);\n      var segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this$1.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeGeometryCollectionGeometry_ = function writeGeometryCollectionGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0; i < geometries.length; ++i) {\n      var segmentWriter = this$1.SEGMENT_WRITERS_[geometries[i].getType()];\n      if (segmentWriter) {\n        segmentWriter.call(this$1, feature, geometries[i]);\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/LineString} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeLineStringGeometry_ = function writeLineStringGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var coordinates = geometry.getCoordinates();\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      var segment = coordinates.slice(i, i + 2);\n      var segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this$1.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiLineString} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeMultiLineStringGeometry_ = function writeMultiLineStringGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var lines = geometry.getCoordinates();\n    for (var j = 0, jj = lines.length; j < jj; ++j) {\n      var coordinates = lines[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this$1.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiPoint} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeMultiPointGeometry_ = function writeMultiPointGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var points = geometry.getCoordinates();\n    for (var i = 0, ii = points.length; i < ii; ++i) {\n      var coordinates = points[i];\n      var segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n        feature: feature,\n        segment: [coordinates, coordinates]\n      });\n      this$1.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeMultiPolygonGeometry_ = function writeMultiPolygonGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var polygons = geometry.getCoordinates();\n    for (var k = 0, kk = polygons.length; k < kk; ++k) {\n      var rings = polygons[k];\n      for (var j = 0, jj = rings.length; j < jj; ++j) {\n        var coordinates = rings[j];\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          var segment = coordinates.slice(i, i + 2);\n          var segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n            feature: feature,\n            segment: segment\n          });\n          this$1.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/Point} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writePointGeometry_ = function writePointGeometry_ (feature, geometry) {\n    var coordinates = geometry.getCoordinates();\n    var segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/Polygon} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writePolygonGeometry_ = function writePolygonGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var rings = geometry.getCoordinates();\n    for (var j = 0, jj = rings.length; j < jj; ++j) {\n      var coordinates = rings[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this$1.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  return Snap;\n}(PointerInteraction));\n\n\n/**\n * Handle all pointer events events.\n * @param {module:ol/MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {module:ol/interaction/Snap}\n */\nexport function handleEvent(evt) {\n  var result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return handlePointerEvent.call(this, evt);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Snap}\n */\nfunction handleUpEvent(evt) {\n  var featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n}\n\n\n/**\n * Sort segments by distance, helper function\n * @param {module:ol/interaction/Snap~SegmentData} a The first segment data.\n * @param {module:ol/interaction/Snap~SegmentData} b The second segment data.\n * @return {number} The difference in distance.\n * @this {module:ol/interaction/Snap}\n */\nfunction sortByDistance(a, b) {\n  var deltaA = squaredDistanceToSegment(this.pixelCoordinate_, a.segment);\n  var deltaB = squaredDistanceToSegment(this.pixelCoordinate_, b.segment);\n  return deltaA - deltaB;\n}\n\nexport default Snap;\n\n//# sourceMappingURL=Snap.js.map","/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {TRUE} from '../functions.js';\nimport {includes} from '../array.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\n\n\n/**\n * @enum {string}\n */\nvar TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/Collection.<module:ol/Feature>} [features] Only features contained in this collection will be able to be translated. If\n * not specified, all features on the map will be able to be translated.\n * @property {Array.<module:ol/layer/Layer>|function(module:ol/layer/Layer): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nexport var TranslateEvent = (function (Event) {\n  function TranslateEvent(type, features, coordinate) {\n\n    Event.call(this, type);\n\n    /**\n     * The features being translated.\n     * @type {module:ol/Collection.<module:ol/Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {module:ol/coordinate~Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n  }\n\n  if ( Event ) TranslateEvent.__proto__ = Event;\n  TranslateEvent.prototype = Object.create( Event && Event.prototype );\n  TranslateEvent.prototype.constructor = TranslateEvent;\n\n  return TranslateEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @fires module:ol/interaction/Translate~TranslateEvent\n * @api\n */\nvar Translate = (function (PointerInteraction) {\n  function Translate(opt_options) {\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleMoveEvent: handleMoveEvent,\n      handleUpEvent: handleUpEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * The last position we translated to.\n     * @type {module:ol/coordinate~Coordinate}\n     * @private\n     */\n    this.lastCoordinate_ = null;\n\n\n    /**\n     * @type {module:ol/Collection.<module:ol/Feature>}\n     * @private\n     */\n    this.features_ = options.features !== undefined ? options.features : null;\n\n    /** @type {function(module:ol/layer/Layer): boolean} */\n    var layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        var layers = options.layers;\n        layerFilter = function(layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(module:ol/layer/Layer): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.lastFeature_ = null;\n\n    listen(this,\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.handleActiveChanged_, this);\n\n  }\n\n  if ( PointerInteraction ) Translate.__proto__ = PointerInteraction;\n  Translate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Translate.prototype.constructor = Translate;\n\n  /**\n   * Tests to see if the given coordinates intersects any of our selected\n   * features.\n   * @param {module:ol/pixel~Pixel} pixel Pixel coordinate to test for intersection.\n   * @param {module:ol/PluggableMap} map Map to test the intersection on.\n   * @return {module:ol/Feature} Returns the feature found at the specified pixel\n   * coordinates.\n   * @private\n   */\n  Translate.prototype.featuresAtPixel_ = function featuresAtPixel_ (pixel, map) {\n    return map.forEachFeatureAtPixel(pixel,\n      function(feature) {\n        if (!this.features_ || includes(this.features_.getArray(), feature)) {\n          return feature;\n        }\n      }.bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n  };\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n  Translate.prototype.getHitTolerance = function getHitTolerance () {\n    return this.hitTolerance_;\n  };\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features. This only works for the canvas renderer and\n   * not for WebGL.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  Translate.prototype.setHitTolerance = function setHitTolerance (hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Translate.prototype.setMap = function setMap (map) {\n    var oldMap = this.getMap();\n    PointerInteraction.prototype.setMap.call(this, map);\n    this.updateState_(oldMap);\n  };\n\n  /**\n   * @private\n   */\n  Translate.prototype.handleActiveChanged_ = function handleActiveChanged_ () {\n    this.updateState_(null);\n  };\n\n  /**\n   * @param {module:ol/PluggableMap} oldMap Old map.\n   * @private\n   */\n  Translate.prototype.updateState_ = function updateState_ (oldMap) {\n    var map = this.getMap();\n    var active = this.getActive();\n    if (!map || !active) {\n      map = map || oldMap;\n      if (map) {\n        var elem = map.getViewport();\n        elem.classList.remove('ol-grab', 'ol-grabbing');\n      }\n    }\n  };\n\n  return Translate;\n}(PointerInteraction));\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Translate}\n */\nfunction handleDownEvent(event) {\n  this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n  if (!this.lastCoordinate_ && this.lastFeature_) {\n    this.lastCoordinate_ = event.coordinate;\n    handleMoveEvent.call(this, event);\n\n    var features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATESTART, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Translate}\n */\nfunction handleUpEvent(event) {\n  if (this.lastCoordinate_) {\n    this.lastCoordinate_ = null;\n    handleMoveEvent.call(this, event);\n\n    var features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATEEND, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @this {module:ol/interaction/Translate}\n */\nfunction handleDragEvent(event) {\n  if (this.lastCoordinate_) {\n    var newCoordinate = event.coordinate;\n    var deltaX = newCoordinate[0] - this.lastCoordinate_[0];\n    var deltaY = newCoordinate[1] - this.lastCoordinate_[1];\n\n    var features = this.features_ || new Collection([this.lastFeature_]);\n\n    features.forEach(function(feature) {\n      var geom = feature.getGeometry();\n      geom.translate(deltaX, deltaY);\n      feature.setGeometry(geom);\n    });\n\n    this.lastCoordinate_ = newCoordinate;\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATING, features,\n        newCoordinate));\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserEvent} event Event.\n * @this {module:ol/interaction/Translate}\n */\nfunction handleMoveEvent(event) {\n  var elem = event.map.getViewport();\n\n  // Change the cursor to grab/grabbing if hovering any of the features managed\n  // by the interaction\n  if (this.featuresAtPixel_(event.pixel, event.map)) {\n    elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n    elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n  } else {\n    elem.classList.remove('ol-grab', 'ol-grabbing');\n  }\n}\n\n\nexport default Translate;\n\n//# sourceMappingURL=Translate.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the wheel/trackpad or pinch gesture ends.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or\n * mousewheel zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. The default set of\n * interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {module:ol/interaction/Interaction~DefaultsOptions=} opt_options\n * Defaults options.\n * @return {module:ol/Collection.<module:ol/interaction/Interaction>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var interactions = new Collection();\n\n  var kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n    options.altShiftDragRotate : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  var doubleClickZoom = options.doubleClickZoom !== undefined ?\n    options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(new DoubleClickZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(new DragPan({\n      kinetic: kinetic\n    }));\n  }\n\n  var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n    true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(new PinchZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(new KeyboardZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n    options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(new MouseWheelZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var shiftDragZoom = options.shiftDragZoom !== undefined ?\n    options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(new DragZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n\n}\n\n//# sourceMappingURL=interaction.js.map","/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/EventTarget.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @abstract\n */\nvar ImageBase = (function (EventTarget) {\n  function ImageBase(extent, resolution, pixelRatio, state) {\n\n    EventTarget.call(this);\n\n    /**\n     * @protected\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {module:ol/ImageState}\n     */\n    this.state = state;\n\n  }\n\n  if ( EventTarget ) ImageBase.__proto__ = EventTarget;\n  ImageBase.prototype = Object.create( EventTarget && EventTarget.prototype );\n  ImageBase.prototype.constructor = ImageBase;\n\n  /**\n   * @protected\n   */\n  ImageBase.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {module:ol/extent~Extent} Extent.\n   */\n  ImageBase.prototype.getExtent = function getExtent () {\n    return this.extent;\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  ImageBase.prototype.getImage = function getImage () {};\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  ImageBase.prototype.getPixelRatio = function getPixelRatio () {\n    return this.pixelRatio_;\n  };\n\n  /**\n   * @return {number} Resolution.\n   */\n  ImageBase.prototype.getResolution = function getResolution () {\n    return /** @type {number} */ (this.resolution);\n  };\n\n  /**\n   * @return {module:ol/ImageState} State.\n   */\n  ImageBase.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  ImageBase.prototype.load = function load () {};\n\n  return ImageBase;\n}(EventTarget));\n\n\nexport default ImageBase;\n\n//# sourceMappingURL=ImageBase.js.map","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error))} Loader\n */\n\n\nvar ImageCanvas = (function (ImageBase) {\n  function ImageCanvas(extent, resolution, pixelRatio, canvas, opt_loader) {\n\n    var state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    ImageBase.call(this, extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?module:ol/ImageCanvas~Loader}\n     * @private\n     */\n    this.loader_ = opt_loader !== undefined ? opt_loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {Error}\n     */\n    this.error_ = null;\n\n  }\n\n  if ( ImageBase ) ImageCanvas.__proto__ = ImageBase;\n  ImageCanvas.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ImageCanvas.prototype.constructor = ImageCanvas;\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {Error} Any error that occurred during rendering.\n   */\n  ImageCanvas.prototype.getError = function getError () {\n    return this.error_;\n  };\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} err Any error during drawing.\n   * @private\n   */\n  ImageCanvas.prototype.handleLoad_ = function handleLoad_ (err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageCanvas.prototype.load = function load () {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  };\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  ImageCanvas.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  return ImageCanvas;\n}(ImageBase));\n\n\nexport default ImageCanvas;\n\n//# sourceMappingURL=ImageCanvas.js.map","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nvar RenderEvent = (function (Event) {\n  function RenderEvent(type, opt_vectorContext, opt_frameState, opt_context, opt_glContext) {\n\n    Event.call(this, type);\n\n    /**\n     * For canvas, this is an instance of {@link module:ol/render/canvas/Immediate}.\n     * @type {module:ol/render/VectorContext|undefined}\n     * @api\n     */\n    this.vectorContext = opt_vectorContext;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {module:ol/PluggableMap~FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Only available when a Canvas renderer is used, null\n     * otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n\n    /**\n     * WebGL context. Only available when a WebGL renderer is used, null\n     * otherwise.\n     * @type {module:ol/webgl/Context|null|undefined}\n     * @api\n     */\n    this.glContext = opt_glContext;\n\n  }\n\n  if ( Event ) RenderEvent.__proto__ = Event;\n  RenderEvent.prototype = Object.create( Event && Event.prototype );\n  RenderEvent.prototype.constructor = RenderEvent;\n\n  return RenderEvent;\n}(Event));\n\nexport default RenderEvent;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = function VectorContext () {};\n\nVectorContext.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {};\n\n/**\n * Render a geometry.\n *\n * @param {module:ol/geom/Geometry} geometry The geometry to render.\n */\nVectorContext.prototype.drawGeometry = function drawGeometry (geometry) {};\n\n/**\n * Set the rendering style.\n *\n * @param {module:ol/style/Style} style The rendering style.\n */\nVectorContext.prototype.setStyle = function setStyle (style) {};\n\n/**\n * @param {module:ol/geom/Circle} circleGeometry Circle geometry.\n * @param {module:ol/Feature} feature Feature.\n */\nVectorContext.prototype.drawCircle = function drawCircle (circleGeometry, feature) {};\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n */\nVectorContext.prototype.drawFeature = function drawFeature (feature, style) {};\n\n/**\n * @param {module:ol/geom/GeometryCollection} geometryCollectionGeometry Geometry collection.\n * @param {module:ol/Feature} feature Feature.\n */\nVectorContext.prototype.drawGeometryCollection = function drawGeometryCollection (geometryCollectionGeometry, feature) {};\n\n/**\n * @param {module:ol/geom/LineString|module:ol/render/Feature} lineStringGeometry Line string geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {};\n\n/**\n * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} multiLineStringGeometry MultiLineString geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {};\n\n/**\n * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} multiPointGeometry MultiPoint geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {};\n\n/**\n * @param {module:ol/geom/MultiPolygon} multiPolygonGeometry MultiPolygon geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {};\n\n/**\n * @param {module:ol/geom/Point|module:ol/render/Feature} pointGeometry Point geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawPoint = function drawPoint (pointGeometry, feature) {};\n\n/**\n * @param {module:ol/geom/Polygon|module:ol/render/Feature} polygonGeometry Polygon geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {};\n\n/**\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawText = function drawText (geometry, feature) {};\n\n/**\n * @param {module:ol/style/Fill} fillStyle Fill style.\n * @param {module:ol/style/Stroke} strokeStyle Stroke style.\n */\nVectorContext.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {};\n\n/**\n * @param {module:ol/style/Image} imageStyle Image style.\n * @param {module:ol/render/canvas~DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setImageStyle = function setImageStyle (imageStyle, opt_declutterGroup) {};\n\n/**\n * @param {module:ol/style/Text} textStyle Text style.\n * @param {module:ol/render/canvas~DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setTextStyle = function setTextStyle (textStyle, opt_declutterGroup) {};\n\nexport default VectorContext;\n\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont} from '../canvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = (function (VectorContext) {\n  function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation) {\n    VectorContext.call(this);\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageScale_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageSnapToPixel_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textScale_ = 0;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n\n  }\n\n  if ( VectorContext ) CanvasImmediateRenderer.__proto__ = VectorContext;\n  CanvasImmediateRenderer.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasImmediateRenderer.prototype.constructor = CanvasImmediateRenderer;\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawImages_ = function drawImages_ (flatCoordinates, offset, end, stride) {\n    var this$1 = this;\n\n    if (!this.image_) {\n      return;\n    }\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, 2, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var localTransform = this.tmpLocalTransform_;\n    var alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    var rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      var x = pixelCoordinates[i] - this$1.imageAnchorX_;\n      var y = pixelCoordinates[i + 1] - this$1.imageAnchorY_;\n      if (this$1.imageSnapToPixel_) {\n        x = Math.round(x);\n        y = Math.round(y);\n      }\n      if (rotation !== 0 || this$1.imageScale_ != 1) {\n        var centerX = x + this$1.imageAnchorX_;\n        var centerY = y + this$1.imageAnchorY_;\n        composeTransform(localTransform,\n          centerX, centerY,\n          this$1.imageScale_, this$1.imageScale_,\n          rotation,\n          -centerX, -centerY);\n        context.setTransform.apply(context, localTransform);\n      }\n      context.drawImage(this$1.image_, this$1.imageOriginX_, this$1.imageOriginY_,\n        this$1.imageWidth_, this$1.imageHeight_, x, y,\n        this$1.imageWidth_, this$1.imageHeight_);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  };\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawText_ = function drawText_ (flatCoordinates, offset, end, stride) {\n    var this$1 = this;\n\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      var x = pixelCoordinates[offset] + this$1.textOffsetX_;\n      var y = pixelCoordinates[offset + 1] + this$1.textOffsetY_;\n      if (rotation !== 0 || this$1.textScale_ != 1) {\n        var localTransform = composeTransform(this$1.tmpLocalTransform_,\n          x, y,\n          this$1.textScale_, this$1.textScale_,\n          rotation,\n          -x, -y);\n        context.setTransform.apply(context, localTransform);\n      }\n      if (this$1.textStrokeState_) {\n        context.strokeText(this$1.text_, x, y);\n      }\n      if (this$1.textFillState_) {\n        context.fillText(this$1.text_, x, y);\n      }\n    }\n    if (rotation !== 0 || this.textScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n  };\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  CanvasImmediateRenderer.prototype.moveToLineTo_ = function moveToLineTo_ (flatCoordinates, offset, end, stride, close) {\n    var context = this.context_;\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    var length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (var i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  };\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array.<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasImmediateRenderer.prototype.drawRings_ = function drawRings_ (flatCoordinates, offset, ends, stride) {\n    var this$1 = this;\n\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this$1.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n    }\n    return offset;\n  };\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {module:ol/geom/Circle} geometry Circle geometry.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawCircle = function drawCircle (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var pixelCoordinates = transformGeom2D(\n        geometry, this.transform_, this.pixelCoordinates_);\n      var dx = pixelCoordinates[2] - pixelCoordinates[0];\n      var dy = pixelCoordinates[3] - pixelCoordinates[1];\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      var context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  };\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {module:ol/style/Style} style The rendering style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.setStyle = function setStyle (style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  };\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry The geometry to render.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawGeometry = function drawGeometry (geometry) {\n    var type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(/** @type {module:ol/geom/Point} */ (geometry));\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(/** @type {module:ol/geom/LineString} */ (geometry));\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(/** @type {module:ol/geom/Polygon} */ (geometry));\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(/** @type {module:ol/geom/MultiPoint} */ (geometry));\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(/** @type {module:ol/geom/MultiLineString} */ (geometry));\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(/** @type {module:ol/geom/MultiPolygon} */ (geometry));\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(/** @type {module:ol/geom/GeometryCollection} */ (geometry));\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(/** @type {module:ol/geom/Circle} */ (geometry));\n        break;\n      default:\n    }\n  };\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/style/Style} style Style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawFeature = function drawFeature (feature, style) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  };\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {module:ol/geom/GeometryCollection} geometry Geometry collection.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawGeometryCollection = function drawGeometryCollection (geometry) {\n    var this$1 = this;\n\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      this$1.drawGeometry(geometries[i]);\n    }\n  };\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {module:ol/geom/Point|module:ol/render/Feature} geometry Point geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPoint = function drawPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} geometry MultiPoint geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPoint = function drawMultiPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {module:ol/geom/LineString|module:ol/render/Feature} geometry LineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawLineString = function drawLineString (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\n        geometry.getStride(), false);\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} geometry MultiLineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiLineString = function drawMultiLineString (geometry) {\n    var this$1 = this;\n\n    var geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      var offset = 0;\n      var ends = geometry.getEnds();\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this$1.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  };\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {module:ol/geom/Polygon|module:ol/render/Feature} geometry Polygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPolygon = function drawPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      context.beginPath();\n      this.drawRings_(geometry.getOrientedFlatCoordinates(),\n        0, geometry.getEnds(), geometry.getStride());\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {module:ol/geom/MultiPolygon} geometry MultiPolygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPolygon = function drawMultiPolygon (geometry) {\n    var this$1 = this;\n\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      var flatCoordinates = geometry.getOrientedFlatCoordinates();\n      var offset = 0;\n      var endss = geometry.getEndss();\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        offset = this$1.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  };\n\n  /**\n   * @param {module:ol/render/canvas~FillState} fillState Fill state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextFillState_ = function setContextFillState_ (fillState) {\n    var context = this.context_;\n    var contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/render/canvas~StrokeState} strokeState Stroke state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextStrokeState_ = function setContextStrokeState_ (strokeState) {\n    var context = this.context_;\n    var contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (CANVAS_LINE_DASH) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = context.lineCap = strokeState.lineCap;\n      }\n      if (CANVAS_LINE_DASH) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = context.lineDashOffset =\n              strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = context.miterLimit =\n            strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = context.strokeStyle =\n            strokeState.strokeStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/render/canvas~TextState} textState Text state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextTextState_ = function setContextTextState_ (textState) {\n    var context = this.context_;\n    var contextTextState = this.contextTextState_;\n    var textAlign = textState.textAlign ?\n      textState.textAlign : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = context.textBaseline =\n            textState.textBaseline;\n      }\n    }\n  };\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {module:ol/style/Fill} fillStyle Fill style.\n   * @param {module:ol/style/Stroke} strokeStyle Stroke style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      var fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(fillStyleColor ?\n          fillStyleColor : defaultFillStyle)\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      var strokeStyleColor = strokeStyle.getColor();\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      var strokeStyleWidth = strokeStyle.getWidth();\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap: strokeStyleLineCap !== undefined ?\n          strokeStyleLineCap : defaultLineCap,\n        lineDash: strokeStyleLineDash ?\n          strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset ?\n          strokeStyleLineDashOffset : defaultLineDashOffset,\n        lineJoin: strokeStyleLineJoin !== undefined ?\n          strokeStyleLineJoin : defaultLineJoin,\n        lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n          strokeStyleWidth : defaultLineWidth),\n        miterLimit: strokeStyleMiterLimit !== undefined ?\n          strokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(strokeStyleColor ?\n          strokeStyleColor : defaultStrokeStyle)\n      };\n    }\n  };\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {module:ol/style/Image} imageStyle Image style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setImageStyle = function setImageStyle (imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      var imageAnchor = imageStyle.getAnchor();\n      // FIXME pixel ratio\n      var imageImage = imageStyle.getImage(1);\n      var imageOrigin = imageStyle.getOrigin();\n      var imageSize = imageStyle.getSize();\n      this.imageAnchorX_ = imageAnchor[0];\n      this.imageAnchorY_ = imageAnchor[1];\n      this.imageHeight_ = imageSize[1];\n      this.image_ = imageImage;\n      this.imageOpacity_ = imageStyle.getOpacity();\n      this.imageOriginX_ = imageOrigin[0];\n      this.imageOriginY_ = imageOrigin[1];\n      this.imageRotateWithView_ = imageStyle.getRotateWithView();\n      this.imageRotation_ = imageStyle.getRotation();\n      this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n      this.imageSnapToPixel_ = imageStyle.getSnapToPixel();\n      this.imageWidth_ = imageSize[0];\n    }\n  };\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {module:ol/style/Text} textStyle Text style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setTextStyle = function setTextStyle (textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        var textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(textFillStyleColor ?\n            textFillStyleColor : defaultFillStyle)\n        };\n      }\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        var textStrokeStyleColor = textStrokeStyle.getColor();\n        var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        var textStrokeStyleWidth = textStrokeStyle.getWidth();\n        var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap: textStrokeStyleLineCap !== undefined ?\n            textStrokeStyleLineCap : defaultLineCap,\n          lineDash: textStrokeStyleLineDash ?\n            textStrokeStyleLineDash : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset ?\n            textStrokeStyleLineDashOffset : defaultLineDashOffset,\n          lineJoin: textStrokeStyleLineJoin !== undefined ?\n            textStrokeStyleLineJoin : defaultLineJoin,\n          lineWidth: textStrokeStyleWidth !== undefined ?\n            textStrokeStyleWidth : defaultLineWidth,\n          miterLimit: textStrokeStyleMiterLimit !== undefined ?\n            textStrokeStyleMiterLimit : defaultMiterLimit,\n          strokeStyle: asColorLike(textStrokeStyleColor ?\n            textStrokeStyleColor : defaultStrokeStyle)\n        };\n      }\n      var textFont = textStyle.getFont();\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      var textScale = textStyle.getScale();\n      var textText = textStyle.getText();\n      var textTextAlign = textStyle.getTextAlign();\n      var textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ?\n          textFont : defaultFont,\n        textAlign: textTextAlign !== undefined ?\n          textTextAlign : defaultTextAlign,\n        textBaseline: textTextBaseline !== undefined ?\n          textTextBaseline : defaultTextBaseline\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n          textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n      this.textOffsetY_ =\n          textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n      this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n        textScale : 1);\n    }\n  };\n\n  return CanvasImmediateRenderer;\n}(VectorContext));\n\n\nexport default CanvasImmediateRenderer;\n\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = function IconImageCache() {\n\n  /**\n  * @type {!Object.<string, module:ol/style/IconImage>}\n  * @private\n  */\n  this.cache_ = {};\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.cacheSize_ = 0;\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.maxCacheSize_ = 32;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.clear = function clear () {\n  this.cache_ = {};\n  this.cacheSize_ = 0;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.expire = function expire () {\n    var this$1 = this;\n\n  if (this.cacheSize_ > this.maxCacheSize_) {\n    var i = 0;\n    for (var key in this$1.cache_) {\n      var iconImage = this$1.cache_[key];\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n        delete this$1.cache_[key];\n        --this$1.cacheSize_;\n      }\n    }\n  }\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {module:ol/color~Color} color Color.\n* @return {module:ol/style/IconImage} Icon image.\n*/\nIconImageCache.prototype.get = function get (src, crossOrigin, color) {\n  var key = getKey(src, crossOrigin, color);\n  return key in this.cache_ ? this.cache_[key] : null;\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {module:ol/color~Color} color Color.\n* @param {module:ol/style/IconImage} iconImage Icon image.\n*/\nIconImageCache.prototype.set = function set (src, crossOrigin, color, iconImage) {\n  var key = getKey(src, crossOrigin, color);\n  this.cache_[key] = iconImage;\n  ++this.cacheSize_;\n};\n\n/**\n* Set the cache size of the icon cache. Default is `32`. Change this value when\n* your map uses more than 32 different icon images and you are not caching icon\n* styles on the application level.\n* @param {number} maxCacheSize Cache max size.\n* @api\n*/\nIconImageCache.prototype.setSize = function setSize (maxCacheSize) {\n  this.maxCacheSize_ = maxCacheSize;\n  this.expire();\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/color~Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  var colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\n\nexport default IconImageCache;\n\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/renderer/Map\n */\nimport {getUid} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE, UNDEFINED} from '../functions.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, invert as invertTransform, setFromArray as transformSetFromArray} from '../transform.js';\n\n\nvar MapRenderer = (function (Disposable) {\n  function MapRenderer(map) {\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {module:ol/PluggableMap}\n     */\n    this.map_ = map;\n\n    /**\n     * @private\n     * @type {!Object.<string, module:ol/renderer/Layer>}\n     */\n    this.layerRenderers_ = {};\n\n    /**\n     * @private\n     * @type {Object.<string, module:ol/events~EventsKey>}\n     */\n    this.layerRendererListeners_ = {};\n\n    /**\n     * @private\n     * @type {Array.<module:ol/renderer/Layer>}\n     */\n    this.layerRendererConstructors_ = [];\n\n  }\n\n  if ( Disposable ) MapRenderer.__proto__ = Disposable;\n  MapRenderer.prototype = Object.create( Disposable && Disposable.prototype );\n  MapRenderer.prototype.constructor = MapRenderer;\n\n  /**\n   * Register layer renderer constructors.\n   * @param {Array.<module:ol/renderer/Layer>} constructors Layer renderers.\n   */\n  MapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    this.layerRendererConstructors_.push.apply(this.layerRendererConstructors_, constructors);\n  };\n\n  /**\n   * Get the registered layer renderer constructors.\n   * @return {Array.<module:ol/renderer/Layer>} Registered layer renderers.\n   */\n  MapRenderer.prototype.getLayerRendererConstructors = function getLayerRendererConstructors () {\n    return this.layerRendererConstructors_;\n  };\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @protected\n   */\n  MapRenderer.prototype.calculateMatrices2D = function calculateMatrices2D (frameState) {\n    var viewState = frameState.viewState;\n    var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(coordinateToPixelTransform,\n      frameState.size[0] / 2, frameState.size[1] / 2,\n      1 / viewState.resolution, -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0], -viewState.center[1]);\n\n    invertTransform(\n      transformSetFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\n  };\n\n  /**\n   * Removes all layer renderers.\n   */\n  MapRenderer.prototype.removeLayerRenderers = function removeLayerRenderers () {\n    var this$1 = this;\n\n    for (var key in this$1.layerRenderers_) {\n      this$1.removeLayerRendererByKey_(key).dispose();\n    }\n  };\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature),\n   *     module:ol/layer/Layer): T} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    var this$1 = this;\n\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @param {module:ol/layer/Layer} layer Layer.\n     * @return {?} Callback result.\n     */\n    function forEachFeatureAtCoordinate(feature, layer) {\n      var key = getUid(feature).toString();\n      var managed = frameState.layerStates[getUid(layer)].managed;\n      if (!(key in frameState.skippedFeatureUids && !managed)) {\n        return callback.call(thisArg, feature, managed ? layer : null);\n      }\n    }\n\n    var projection = viewState.projection;\n\n    var translatedCoordinate = coordinate;\n    if (projection.canWrapX()) {\n      var projectionExtent = projection.getExtent();\n      var worldWidth = getWidth(projectionExtent);\n      var x = coordinate[0];\n      if (x < projectionExtent[0] || x > projectionExtent[2]) {\n        var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n        translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n      }\n    }\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = this$1.getLayerRenderer(layer);\n        if (layer.getSource()) {\n          result = layerRenderer.forEachFeatureAtCoordinate(\n            layer.getSource().getWrapX() ? translatedCoordinate : coordinate,\n            frameState, hitTolerance, forEachFeatureAtCoordinate, thisArg);\n        }\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @abstract\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {};\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  MapRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n\n    return hasFeature !== undefined;\n  };\n\n  /**\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @protected\n   * @return {module:ol/renderer/Layer} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRenderer = function getLayerRenderer (layer) {\n    var this$1 = this;\n\n    var layerKey = getUid(layer).toString();\n    if (layerKey in this.layerRenderers_) {\n      return this.layerRenderers_[layerKey];\n    } else {\n      var renderer;\n      for (var i = 0, ii = this.layerRendererConstructors_.length; i < ii; ++i) {\n        var candidate = this$1.layerRendererConstructors_[i];\n        if (candidate['handles'](layer)) {\n          renderer = candidate['create'](this$1, layer);\n          break;\n        }\n      }\n      if (renderer) {\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer,\n          EventType.CHANGE, this.handleLayerRendererChange_, this);\n      } else {\n        throw new Error('Unable to create renderer for layer: ' + layer.getType());\n      }\n      return renderer;\n    }\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @protected\n   * @return {module:ol/renderer/Layer} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRendererByKey = function getLayerRendererByKey (layerKey) {\n    return this.layerRenderers_[layerKey];\n  };\n\n  /**\n   * @protected\n   * @return {Object.<string, module:ol/renderer/Layer>} Layer renderers.\n   */\n  MapRenderer.prototype.getLayerRenderers = function getLayerRenderers () {\n    return this.layerRenderers_;\n  };\n\n  /**\n   * @return {module:ol/PluggableMap} Map.\n   */\n  MapRenderer.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handle changes in a layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.handleLayerRendererChange_ = function handleLayerRendererChange_ () {\n    this.map_.render();\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @return {module:ol/renderer/Layer} Layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.removeLayerRendererByKey_ = function removeLayerRendererByKey_ (layerKey) {\n    var layerRenderer = this.layerRenderers_[layerKey];\n    delete this.layerRenderers_[layerKey];\n\n    unlistenByKey(this.layerRendererListeners_[layerKey]);\n    delete this.layerRendererListeners_[layerKey];\n\n    return layerRenderer;\n  };\n\n  /**\n   * @param {module:ol/PluggableMap} map Map.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @private\n   */\n  MapRenderer.prototype.removeUnusedLayerRenderers_ = function removeUnusedLayerRenderers_ (map, frameState) {\n    var this$1 = this;\n\n    for (var layerKey in this$1.layerRenderers_) {\n      if (!frameState || !(layerKey in frameState.layerStates)) {\n        this$1.removeLayerRendererByKey_(layerKey).dispose();\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleExpireIconCache = function scheduleExpireIconCache (frameState) {\n    frameState.postRenderFunctions.push(/** @type {module:ol/PluggableMap~PostRenderFunction} */ (expireIconCache));\n  };\n\n  /**\n   * @param {!module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function scheduleRemoveUnusedLayerRenderers (frameState) {\n    var this$1 = this;\n\n    for (var layerKey in this$1.layerRenderers_) {\n      if (!(layerKey in frameState.layerStates)) {\n        frameState.postRenderFunctions.push(\n          /** @type {module:ol/PluggableMap~PostRenderFunction} */ (this$1.removeUnusedLayerRenderers_.bind(this$1))\n        );\n        return;\n      }\n    }\n  };\n\n  return MapRenderer;\n}(Disposable));\n\n\n/**\n * @param {module:ol/PluggableMap} map Map.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\n\n/**\n * Render.\n * @param {?module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nMapRenderer.prototype.renderFrame = UNDEFINED;\n\n\n/**\n * @param {module:ol/layer/Layer~State} state1 First layer state.\n * @param {module:ol/layer/Layer~State} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\nexport function sortByZIndex(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n}\nexport default MapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/canvas/Map\n */\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\nimport {includes, stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\n\n\n/**\n * @type {Array.<module:ol/renderer/Layer>}\n */\nexport var layerRendererConstructors = [];\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CanvasMapRenderer = (function (MapRenderer) {\n  function CanvasMapRenderer(map) {\n    MapRenderer.call(this, map);\n\n    var container = map.getViewport();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = this.context_.canvas;\n\n    this.canvas_.style.width = '100%';\n    this.canvas_.style.height = '100%';\n    this.canvas_.style.display = 'block';\n    this.canvas_.className = CLASS_UNSELECTABLE;\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( MapRenderer ) CanvasMapRenderer.__proto__ = MapRenderer;\n  CanvasMapRenderer.prototype = Object.create( MapRenderer && MapRenderer.prototype );\n  CanvasMapRenderer.prototype.constructor = CanvasMapRenderer;\n\n  /**\n   * @param {module:ol/render/EventType} type Event type.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @private\n   */\n  CanvasMapRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_ (type, frameState) {\n    var map = this.getMap();\n    var context = this.context_;\n    if (map.hasListener(type)) {\n      var extent = frameState.extent;\n      var pixelRatio = frameState.pixelRatio;\n      var viewState = frameState.viewState;\n      var rotation = viewState.rotation;\n\n      var transform = this.getTransform(frameState);\n\n      var vectorContext = new CanvasImmediateRenderer(context, pixelRatio,\n        extent, transform, rotation);\n      var composeEvent = new RenderEvent(type, vectorContext,\n        frameState, context, null);\n      map.dispatchEvent(composeEvent);\n    }\n  };\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @protected\n   * @return {!module:ol/transform~Transform} Transform.\n   */\n  CanvasMapRenderer.prototype.getTransform = function getTransform (frameState) {\n    var viewState = frameState.viewState;\n    var dx1 = this.canvas_.width / 2;\n    var dy1 = this.canvas_.height / 2;\n    var sx = frameState.pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0];\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n    var this$1 = this;\n\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.canvas_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var context = this.context_;\n    var pixelRatio = frameState.pixelRatio;\n    var width = Math.round(frameState.size[0] * pixelRatio);\n    var height = Math.round(frameState.size[1] * pixelRatio);\n    if (this.canvas_.width != width || this.canvas_.height != height) {\n      this.canvas_.width = width;\n      this.canvas_.height = height;\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n\n    var rotation = frameState.viewState.rotation;\n\n    this.calculateMatrices2D(frameState);\n\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, frameState);\n\n    var layerStatesArray = frameState.layerStatesArray;\n    stableSort(layerStatesArray, sortByZIndex);\n\n    if (rotation) {\n      context.save();\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n\n    var viewResolution = frameState.viewState.resolution;\n    var i, ii, layer, layerRenderer, layerState;\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      layerState = layerStatesArray[i];\n      layer = layerState.layer;\n      layerRenderer = /** @type {module:ol/renderer/canvas/Layer} */ (this$1.getLayerRenderer(layer));\n      if (!visibleAtResolution(layerState, viewResolution) ||\n          layerState.sourceState != SourceState.READY) {\n        continue;\n      }\n      if (layerRenderer.prepareFrame(frameState, layerState)) {\n        layerRenderer.composeFrame(frameState, layerState, context);\n      }\n    }\n\n    if (rotation) {\n      context.restore();\n    }\n\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.canvas_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    var this$1 = this;\n\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n\n    var coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = /** @type {module:ol/renderer/canvas/Layer} */ (this$1.getLayerRenderer(layer));\n        result = layerRenderer.forEachLayerAtCoordinate(\n          coordinate, frameState, hitTolerance, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    MapRenderer.prototype.registerLayerRenderers.call(this, constructors);\n    for (var i = 0, ii = constructors.length; i < ii; ++i) {\n      var ctor = constructors[i];\n      if (!includes(layerRendererConstructors, ctor)) {\n        layerRendererConstructors.push(ctor);\n      }\n    }\n  };\n\n  return CanvasMapRenderer;\n}(MapRenderer));\n\n\nexport default CanvasMapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/Layer\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {FALSE, UNDEFINED} from '../functions.js';\nimport SourceState from '../source/State.js';\n\nvar LayerRenderer = (function (Observable) {\n  function LayerRenderer(layer) {\n\n    Observable.call(this);\n\n    /**\n     * @private\n     * @type {module:ol/layer/Layer}\n     */\n    this.layer_ = layer;\n\n  }\n\n  if ( Observable ) LayerRenderer.__proto__ = Observable;\n  LayerRenderer.prototype = Object.create( Observable && Observable.prototype );\n  LayerRenderer.prototype.constructor = LayerRenderer;\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {module:ol/source/Tile} source Tile source.\n   * @param {module:ol/proj/Projection} projection Projection of the tiles.\n   * @param {Object.<number, Object.<string, module:ol/Tile>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, module:ol/TileRange):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  LayerRenderer.prototype.createLoadedTileFinder = function createLoadedTileFinder (source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {module:ol/TileRange} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      function(zoom, tileRange) {\n        function callback(tile) {\n          if (!tiles[zoom]) {\n            tiles[zoom] = {};\n          }\n          tiles[zoom][tile.tileCoord.toString()] = tile;\n        }\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  };\n\n  /**\n   * @return {module:ol/layer/Layer} Layer.\n   */\n  LayerRenderer.prototype.getLayer = function getLayer () {\n    return this.layer_;\n  };\n\n  /**\n   * Handle changes in image state.\n   * @param {module:ol/events/Event} event Image change event.\n   * @private\n   */\n  LayerRenderer.prototype.handleImageChange_ = function handleImageChange_ (event) {\n    var image = /** @type {module:ol/Image} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  };\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {module:ol/ImageBase} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  LayerRenderer.prototype.loadImage = function loadImage (image) {\n    var imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      listen(image, EventType.CHANGE, this.handleImageChange_, this);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  };\n\n  /**\n   * @protected\n   */\n  LayerRenderer.prototype.renderIfReadyAndVisible = function renderIfReadyAndVisible () {\n    var layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/source/Tile} tileSource Tile source.\n   * @protected\n   */\n  LayerRenderer.prototype.scheduleExpireCache = function scheduleExpireCache (frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {module:ol/source/Tile} tileSource Tile source.\n       * @param {module:ol/PluggableMap} map Map.\n       * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n       */\n      var postRenderFunction = function(tileSource, map, frameState) {\n        var tileSourceKey = getUid(tileSource).toString();\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]);\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {module:ol/PluggableMap~PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  };\n\n  /**\n   * @param {!Object.<string, !Object.<string, module:ol/TileRange>>} usedTiles Used tiles.\n   * @param {module:ol/source/Tile} tileSource Tile source.\n   * @param {number} z Z.\n   * @param {module:ol/TileRange} tileRange Tile range.\n   * @protected\n   */\n  LayerRenderer.prototype.updateUsedTiles = function updateUsedTiles (usedTiles, tileSource, z, tileRange) {\n    // FIXME should we use tilesToDrawByZ instead?\n    var tileSourceKey = getUid(tileSource).toString();\n    var zKey = z.toString();\n    if (tileSourceKey in usedTiles) {\n      if (zKey in usedTiles[tileSourceKey]) {\n        usedTiles[tileSourceKey][zKey].extend(tileRange);\n      } else {\n        usedTiles[tileSourceKey][zKey] = tileRange;\n      }\n    } else {\n      usedTiles[tileSourceKey] = {};\n      usedTiles[tileSourceKey][zKey] = tileRange;\n    }\n  };\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/source/Tile} tileSource Tile source.\n   * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(this: T, module:ol/Tile)=} opt_tileCallback Tile callback.\n   * @param {T=} opt_this Object to use as `this` in `opt_tileCallback`.\n   * @protected\n   * @template T\n   */\n  LayerRenderer.prototype.manageTilePyramid = function manageTilePyramid (\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback,\n    opt_this\n  ) {\n    var tileSourceKey = getUid(tileSource).toString();\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    var wantedTiles = frameState.wantedTiles[tileSourceKey];\n    var tileQueue = frameState.tileQueue;\n    var minZoom = tileGrid.getMinZoom();\n    var tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([tile, tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback.call(opt_this, tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n  };\n\n  return LayerRenderer;\n}(Observable));\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature), module:ol/layer/Layer): T}\n *     callback Feature callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @return {T|undefined} Callback result.\n * @template S,T\n */\nLayerRenderer.prototype.forEachFeatureAtCoordinate = UNDEFINED;\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @return {boolean} Is there a feature at the given coordinate?\n */\nLayerRenderer.prototype.hasFeatureAtCoordinate = FALSE;\n\n\nexport default LayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../../extent.js';\nimport {TRUE} from '../../functions.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\n\nvar CanvasLayerRenderer = (function (LayerRenderer) {\n  function CanvasLayerRenderer(layer) {\n\n    LayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( LayerRenderer ) CanvasLayerRenderer.__proto__ = LayerRenderer;\n  CanvasLayerRenderer.prototype = Object.create( LayerRenderer && LayerRenderer.prototype );\n  CanvasLayerRenderer.prototype.constructor = CanvasLayerRenderer;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/extent~Extent} extent Clip extent.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.clip = function clip (context, frameState, extent) {\n    var pixelRatio = frameState.pixelRatio;\n    var width = frameState.size[0] * pixelRatio;\n    var height = frameState.size[1] * pixelRatio;\n    var rotation = frameState.viewState.rotation;\n    var topLeft = getTopLeft(/** @type {module:ol/extent~Extent} */ (extent));\n    var topRight = getTopRight(/** @type {module:ol/extent~Extent} */ (extent));\n    var bottomRight = getBottomRight(/** @type {module:ol/extent~Extent} */ (extent));\n    var bottomLeft = getBottomLeft(/** @type {module:ol/extent~Extent} */ (extent));\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, width / 2, height / 2);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  };\n\n  /**\n   * @param {module:ol/render/EventType} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/transform~Transform=} opt_transform Transform.\n   * @private\n   */\n  CanvasLayerRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_ (type, context, frameState, opt_transform) {\n    var layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      var width = frameState.size[0] * frameState.pixelRatio;\n      var height = frameState.size[1] * frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      rotateAtOffset(context, -rotation, width / 2, height / 2);\n      var transform = opt_transform !== undefined ?\n        opt_transform : this.getTransform(frameState, 0);\n      var render = new CanvasImmediateRenderer(\n        context, frameState.pixelRatio, frameState.extent, transform,\n        frameState.viewState.rotation);\n      var composeEvent = new RenderEvent(type, render, frameState,\n        context, null);\n      layer.dispatchEvent(composeEvent);\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n  };\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  CanvasLayerRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE, this);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @param {module:ol/transform~Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/transform~Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.preCompose = function preCompose (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/transform~Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.RENDER, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!module:ol/transform~Transform} Transform.\n   */\n  CanvasLayerRenderer.prototype.getTransform = function getTransform (frameState, offsetX) {\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var dx1 = pixelRatio * frameState.size[0] / 2;\n    var dy1 = pixelRatio * frameState.size[1] / 2;\n    var sx = pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0] + offsetX;\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @abstract\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {};\n\n  /**\n   * @abstract\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @return {boolean} whether composeFrame should be called.\n   */\n  CanvasLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {};\n\n  return CanvasLayerRenderer;\n}(LayerRenderer));\n\nexport default CanvasLayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/canvas/IntermediateCanvas\n */\nimport {scale as scaleCoordinate} from '../../coordinate.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, intersects} from '../../extent.js';\nimport {UNDEFINED} from '../../functions.js';\nimport CanvasLayerRenderer from '../canvas/Layer.js';\nimport {create as createTransform, apply as applyTransform} from '../../transform.js';\n\nvar IntermediateCanvasRenderer = (function (CanvasLayerRenderer) {\n  function IntermediateCanvasRenderer(layer) {\n\n    CanvasLayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {module:ol/transform~Transform}\n     */\n    this.coordinateToCanvasPixelTransform = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitCanvasContext_ = null;\n\n  }\n\n  if ( CanvasLayerRenderer ) IntermediateCanvasRenderer.__proto__ = CanvasLayerRenderer;\n  IntermediateCanvasRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  IntermediateCanvasRenderer.prototype.constructor = IntermediateCanvasRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n\n    this.preCompose(context, frameState);\n\n    var image = this.getImage();\n    if (image) {\n\n      // clipped rendering if layer extent is set\n      var extent = layerState.extent;\n      var clipped = extent !== undefined &&\n          !containsExtent(extent, frameState.extent) &&\n          intersects(extent, frameState.extent);\n      if (clipped) {\n        this.clip(context, frameState, /** @type {module:ol/extent~Extent} */ (extent));\n      }\n\n      var imageTransform = this.getImageTransform();\n      // for performance reasons, context.save / context.restore is not used\n      // to save and restore the transformation matrix and the opacity.\n      // see http://jsperf.com/context-save-restore-versus-variable\n      var alpha = context.globalAlpha;\n      context.globalAlpha = layerState.opacity;\n\n      // for performance reasons, context.setTransform is only used\n      // when the view is rotated. see http://jsperf.com/canvas-transform\n      var dx = imageTransform[4];\n      var dy = imageTransform[5];\n      var dw = image.width * imageTransform[0];\n      var dh = image.height * imageTransform[3];\n      context.drawImage(image, 0, 0, +image.width, +image.height,\n        Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n      context.globalAlpha = alpha;\n\n      if (clipped) {\n        context.restore();\n      }\n    }\n\n    this.postCompose(context, frameState, layerState);\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Canvas.\n   */\n  IntermediateCanvasRenderer.prototype.getImage = function getImage () {};\n\n  /**\n   * @abstract\n   * @return {!module:ol/transform~Transform} Image transform.\n   */\n  IntermediateCanvasRenderer.prototype.getImageTransform = function getImageTransform () {};\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var layer = this.getLayer();\n    var source = layer.getSource();\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    var skippedFeatureUids = frameState.skippedFeatureUids;\n    return source.forEachFeatureAtCoordinate(\n      coordinate, resolution, rotation, hitTolerance, skippedFeatureUids,\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @return {?} Callback result.\n       */\n      function(feature) {\n        return callback.call(thisArg, feature, layer);\n      });\n  };\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.getImage()) {\n      return undefined;\n    }\n\n    if (this.getLayer().getSource().forEachFeatureAtCoordinate !== UNDEFINED) {\n      // for ImageCanvas sources use the original hit-detection logic,\n      // so that for example also transparent polygons are detected\n      return CanvasLayerRenderer.prototype.forEachLayerAtCoordinate.apply(this, arguments);\n    } else {\n      var pixel = applyTransform(this.coordinateToCanvasPixelTransform, coordinate.slice());\n      scaleCoordinate(pixel, frameState.viewState.resolution / this.renderedResolution);\n\n      if (!this.hitCanvasContext_) {\n        this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n      }\n\n      this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n      this.hitCanvasContext_.drawImage(this.getImage(), pixel[0], pixel[1], 1, 1, 0, 0, 1, 1);\n\n      var imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n      if (imageData[3] > 0) {\n        return callback.call(thisArg, this.getLayer(), imageData);\n      } else {\n        return undefined;\n      }\n    }\n  };\n\n  return IntermediateCanvasRenderer;\n}(CanvasLayerRenderer));\n\n\nexport default IntermediateCanvasRenderer;\n\n//# sourceMappingURL=IntermediateCanvas.js.map","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {getHeight, getIntersection, getWidth, isEmpty} from '../../extent.js';\nimport VectorRenderType from '../../layer/VectorRenderType.js';\nimport {assign} from '../../obj.js';\nimport {layerRendererConstructors} from './Map.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = (function (IntermediateCanvasRenderer) {\n  function CanvasImageLayerRenderer(imageLayer) {\n    var this$1 = this;\n\n\n    IntermediateCanvasRenderer.call(this, imageLayer);\n\n    /**\n     * @private\n     * @type {?module:ol/ImageBase}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @type {!Array.<string>}\n     */\n    this.skippedFeatures_ = [];\n\n    /**\n     * @private\n     * @type {module:ol/renderer/canvas/VectorLayer}\n     */\n    this.vectorRenderer_ = null;\n\n    if (imageLayer.getType() === LayerType.VECTOR) {\n      for (var i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\n        var ctor = layerRendererConstructors[i];\n        if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\n          this$1.vectorRenderer_ = new ctor(imageLayer);\n          break;\n        }\n      }\n    }\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasImageLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasImageLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasImageLayerRenderer.prototype.constructor = CanvasImageLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    if (this.vectorRenderer_) {\n      this.vectorRenderer_.dispose();\n    }\n    IntermediateCanvasRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImage = function getImage () {\n    return !this.image_ ? null : this.image_.getImage();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var viewCenter = viewState.center;\n    var viewResolution = viewState.resolution;\n\n    var image;\n    var imageLayer = /** @type {module:ol/layer/Image} */ (this.getLayer());\n    var imageSource = imageLayer.getSource();\n\n    var hints = frameState.viewHints;\n\n    var vectorRenderer = this.vectorRenderer_;\n    var renderedExtent = frameState.extent;\n    if (!vectorRenderer && layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n        !isEmpty(renderedExtent)) {\n      var projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        var sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      var skippedFeatures = this.skippedFeatures_;\n      if (vectorRenderer) {\n        var context = vectorRenderer.context;\n        var imageFrameState = /** @type {module:ol/PluggableMap~FrameState} */ (assign({}, frameState, {\n          size: [\n            getWidth(renderedExtent) / viewResolution,\n            getHeight(renderedExtent) / viewResolution\n          ],\n          viewState: /** @type {module:ol/View~State} */ (assign({}, frameState.viewState, {\n            rotation: 0\n          }))\n        }));\n        var newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n        image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function(callback) {\n          if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\n              (vectorRenderer.replayGroupChanged ||\n              !equals(skippedFeatures, newSkippedFeatures))) {\n            context.canvas.width = imageFrameState.size[0] * pixelRatio;\n            context.canvas.height = imageFrameState.size[1] * pixelRatio;\n            vectorRenderer.compose(context, imageFrameState, layerState);\n            skippedFeatures = newSkippedFeatures;\n            callback();\n          }\n        });\n      } else {\n        image = imageSource.getImage(\n          renderedExtent, viewResolution, pixelRatio, projection);\n      }\n      if (image && this.loadImage(image)) {\n        this.image_ = image;\n        this.skippedFeatures_ = skippedFeatures;\n      }\n    }\n\n    if (this.image_) {\n      image = this.image_;\n      var imageExtent = image.getExtent();\n      var imageResolution = image.getResolution();\n      var imagePixelRatio = image.getPixelRatio();\n      var scale = pixelRatio * imageResolution /\n          (viewResolution * imagePixelRatio);\n      var transform = composeTransform(this.imageTransform_,\n        pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n        scale, scale,\n        0,\n        imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n        imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n      composeTransform(this.coordinateToCanvasPixelTransform,\n        pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n        pixelRatio / viewResolution, -pixelRatio / viewResolution,\n        0,\n        -viewCenter[0], -viewCenter[1]);\n\n      this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n    }\n\n    return !!this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg);\n    } else {\n      return IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback, thisArg);\n    }\n  };\n\n  return CanvasImageLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE ||\n    layer.getType() === LayerType.VECTOR &&\n    /** @type {module:ol/layer/Vector} */ (layer).getRenderMode() === VectorRenderType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/ImageLayer} The layer renderer.\n */\nCanvasImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasImageLayerRenderer(/** @type {module:ol/layer/Image} */ (layer));\n};\n\n\nexport default CanvasImageLayerRenderer;\n\n//# sourceMappingURL=ImageLayer.js.map","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = function TileRange(minX, maxX, minY, maxY) {\n\n  /**\n   * @type {number}\n   */\n  this.minX = minX;\n\n  /**\n   * @type {number}\n   */\n  this.maxX = maxX;\n\n  /**\n   * @type {number}\n   */\n  this.minY = minY;\n\n  /**\n   * @type {number}\n   */\n  this.maxY = maxY;\n\n};\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {boolean} Contains tile coordinate.\n */\nTileRange.prototype.contains = function contains (tileCoord) {\n  return this.containsXY(tileCoord[1], tileCoord[2]);\n};\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n * @return {boolean} Contains.\n */\nTileRange.prototype.containsTileRange = function containsTileRange (tileRange) {\n  return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n     this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n};\n\n/**\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @return {boolean} Contains coordinate.\n */\nTileRange.prototype.containsXY = function containsXY (x, y) {\n  return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n};\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n * @return {boolean} Equals.\n */\nTileRange.prototype.equals = function equals (tileRange) {\n  return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n     this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n};\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n */\nTileRange.prototype.extend = function extend (tileRange) {\n  if (tileRange.minX < this.minX) {\n    this.minX = tileRange.minX;\n  }\n  if (tileRange.maxX > this.maxX) {\n    this.maxX = tileRange.maxX;\n  }\n  if (tileRange.minY < this.minY) {\n    this.minY = tileRange.minY;\n  }\n  if (tileRange.maxY > this.maxY) {\n    this.maxY = tileRange.maxY;\n  }\n};\n\n/**\n* @return {number} Height.\n*/\nTileRange.prototype.getHeight = function getHeight () {\n  return this.maxY - this.minY + 1;\n};\n\n/**\n* @return {module:ol/size~Size} Size.\n*/\nTileRange.prototype.getSize = function getSize () {\n  return [this.getWidth(), this.getHeight()];\n};\n\n/**\n* @return {number} Width.\n*/\nTileRange.prototype.getWidth = function getWidth () {\n  return this.maxX - this.minX + 1;\n};\n\n/**\n* @param {module:ol/TileRange} tileRange Tile range.\n* @return {boolean} Intersects.\n*/\nTileRange.prototype.intersects = function intersects (tileRange) {\n  return this.minX <= tileRange.maxX &&\n     this.maxX >= tileRange.minX &&\n     this.minY <= tileRange.maxY &&\n     this.maxY >= tileRange.minY;\n};\n\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {module:ol/TileRange=} tileRange TileRange.\n * @return {module:ol/TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\n\nexport default TileRange;\n\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, createEmpty, equals, getIntersection, isEmpty} from '../../extent.js';\nimport IntermediateCanvasRenderer from '../canvas/IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = (function (IntermediateCanvasRenderer) {\n  function CanvasTileLayerRenderer(tileLayer, opt_noContext) {\n\n    IntermediateCanvasRenderer.call(this, tileLayer);\n\n    /**\n     * @protected\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = opt_noContext ? null : createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.oversampling_;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array.<module:ol/Tile>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {module:ol/extent~Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {module:ol/TileRange}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.zDirection = 0;\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasTileLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasTileLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasTileLayerRenderer.prototype.constructor = CanvasTileLayerRenderer;\n\n  /**\n   * @private\n   * @param {module:ol/Tile} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  CanvasTileLayerRenderer.prototype.isDrawableTile_ = function isDrawableTile_ (tile) {\n    var tileState = tile.getState();\n    var useInterimTilesOnError = this.getLayer().getUseInterimTilesOnError();\n    return tileState == TileState.LOADED ||\n        tileState == TileState.EMPTY ||\n        tileState == TileState.ERROR && !useInterimTilesOnError;\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {!module:ol/Tile} Tile.\n   */\n  CanvasTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var layer = this.getLayer();\n    var source = /** @type {module:ol/source/Tile} */ (layer.getSource());\n    var tile = source.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!layer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (layer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile_(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var this$1 = this;\n\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var viewResolution = viewState.resolution;\n    var viewCenter = viewState.center;\n\n    var tileLayer = this.getLayer();\n    var tileSource = /** @type {module:ol/source/Tile} */ (tileLayer.getSource());\n    var sourceRevision = tileSource.getRevision();\n    var tileGrid = tileSource.getTileGridForProjection(projection);\n    var z = tileGrid.getZForResolution(viewResolution, this.zDirection);\n    var tileResolution = tileGrid.getResolution(z);\n    var oversampling = Math.round(viewResolution / tileResolution) || 1;\n    var extent = frameState.extent;\n\n    if (layerState.extent !== undefined) {\n      extent = getIntersection(extent, layerState.extent);\n    }\n    if (isEmpty(extent)) {\n      // Return false to prevent the rendering of the layer.\n      return false;\n    }\n\n    var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    var imageExtent = tileGrid.getTileRangeExtent(z, tileRange);\n\n    var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    /**\n     * @type {Object.<number, Object.<string, module:ol/Tile>>}\n     */\n    var tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    var findLoadedTiles = this.createLoadedTileFinder(\n      tileSource, projection, tilesToDrawByZ);\n\n    var hints = frameState.viewHints;\n    var animatingOrInteracting = hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING];\n\n    var tmpExtent = this.tmpExtent;\n    var tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    var tile, x, y;\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (Date.now() - frameState.time > 16 && animatingOrInteracting) {\n          continue;\n        }\n        tile = this$1.getTile(z, x, y, pixelRatio, projection);\n        if (this$1.isDrawableTile_(tile)) {\n          var uid = getUid(this$1);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            var inTransition = tile.inTransition(uid);\n            if (!this$1.newTiles_ && (inTransition || this$1.renderedTiles.indexOf(tile) === -1)) {\n              this$1.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        var childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord, tmpTileRange, tmpExtent);\n        var covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n        }\n\n      }\n    }\n\n    var renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n    if (!(this.renderedResolution && Date.now() - frameState.time > 16 && animatingOrInteracting) && (\n      this.newTiles_ ||\n          !(this.renderedExtent_ && containsExtent(this.renderedExtent_, extent)) ||\n          this.renderedRevision != sourceRevision ||\n          oversampling != this.oversampling_ ||\n          !animatingOrInteracting && renderedResolution != this.renderedResolution\n    )) {\n\n      var context = this.context;\n      if (context) {\n        var tilePixelSize = tileSource.getTilePixelSize(z, pixelRatio, projection);\n        var width = Math.round(tileRange.getWidth() * tilePixelSize[0] / oversampling);\n        var height = Math.round(tileRange.getHeight() * tilePixelSize[1] / oversampling);\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n          this.oversampling_ = oversampling;\n          canvas.width = width;\n          canvas.height = height;\n        } else {\n          if (this.renderedExtent_ && !equals(imageExtent, this.renderedExtent_)) {\n            context.clearRect(0, 0, width, height);\n          }\n          oversampling = this.oversampling_;\n        }\n      }\n\n      this.renderedTiles.length = 0;\n      /** @type {Array.<number>} */\n      var zs = Object.keys(tilesToDrawByZ).map(Number);\n      zs.sort(function(a, b) {\n        if (a === z) {\n          return 1;\n        } else if (b === z) {\n          return -1;\n        } else {\n          return a > b ? 1 : a < b ? -1 : 0;\n        }\n      });\n      var currentResolution, currentScale, currentTilePixelSize, currentZ, i, ii;\n      var tileExtent, tileGutter, tilesToDraw, w, h;\n      for (i = 0, ii = zs.length; i < ii; ++i) {\n        currentZ = zs[i];\n        currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n        currentResolution = tileGrid.getResolution(currentZ);\n        currentScale = currentResolution / tileResolution;\n        tileGutter = tilePixelRatio * tileSource.getGutter(projection);\n        tilesToDraw = tilesToDrawByZ[currentZ];\n        for (var tileCoordKey in tilesToDraw) {\n          tile = tilesToDraw[tileCoordKey];\n          tileExtent = tileGrid.getTileCoordExtent(tile.getTileCoord(), tmpExtent);\n          x = (tileExtent[0] - imageExtent[0]) / tileResolution * tilePixelRatio / oversampling;\n          y = (imageExtent[3] - tileExtent[3]) / tileResolution * tilePixelRatio / oversampling;\n          w = currentTilePixelSize[0] * currentScale / oversampling;\n          h = currentTilePixelSize[1] * currentScale / oversampling;\n          this$1.drawTileImage(tile, frameState, layerState, x, y, w, h, tileGutter, z === currentZ);\n          this$1.renderedTiles.push(tile);\n        }\n      }\n\n      this.renderedRevision = sourceRevision;\n      this.renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n      this.renderedExtent_ = imageExtent;\n    }\n\n    var scale = this.renderedResolution / viewResolution;\n    var transform = composeTransform(this.imageTransform_,\n      pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n      scale, scale,\n      0,\n      (this.renderedExtent_[0] - viewCenter[0]) / this.renderedResolution * pixelRatio,\n      (viewCenter[1] - this.renderedExtent_[3]) / this.renderedResolution * pixelRatio);\n    composeTransform(this.coordinateToCanvasPixelTransform,\n      pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n      pixelRatio / viewResolution, -pixelRatio / viewResolution,\n      0,\n      -viewCenter[0], -viewCenter[1]);\n\n\n    this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n    this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio,\n      projection, extent, z, tileLayer.getPreload());\n    this.scheduleExpireCache(frameState, tileSource);\n\n    return this.renderedTiles.length > 0;\n  };\n\n  /**\n   * @param {module:ol/Tile} tile Tile.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  CanvasTileLayerRenderer.prototype.drawTileImage = function drawTileImage (tile, frameState, layerState, x, y, w, h, gutter, transition) {\n    var image = tile.getImage(this.getLayer());\n    if (!image) {\n      return;\n    }\n    var uid = getUid(this);\n    var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    if (alpha === 1 && !this.getLayer().getSource().getOpaque(frameState.viewState.projection)) {\n      this.context.clearRect(x, y, w, h);\n    }\n    var alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(image, gutter, gutter,\n      image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImage = function getImage () {\n    var context = this.context;\n    return context ? context.canvas : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  return CanvasTileLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/TileLayer} The layer renderer.\n */\nCanvasTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasTileLayerRenderer(/** @type {module:ol/layer/Tile} */ (layer));\n};\n\n\n/**\n * @function\n * @return {module:ol/layer/Tile|module:ol/layer/VectorTile}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\n\nexport default CanvasTileLayerRenderer;\n\n//# sourceMappingURL=TileLayer.js.map","/**\n * @module ol/render/ReplayGroup\n */\n/**\n * Base class for replay groups.\n */\nvar ReplayGroup = function ReplayGroup () {};\n\nReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {};\n\n/**\n * @abstract\n * @return {boolean} Is empty.\n */\nReplayGroup.prototype.isEmpty = function isEmpty () {};\n\nexport default ReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/render/ReplayType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text'\n};\n\n//# sourceMappingURL=ReplayType.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {function(string):number} measure Measure function returning the\n * width of the character passed as 1st argument.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @return {Array.<Array.<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates, offset, end, stride, text, measure, startM, maxAngle) {\n  var result = [];\n\n  // Keep text upright\n  var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n\n  var numChars = text.length;\n\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  var x2 = flatCoordinates[offset];\n  var y2 = flatCoordinates[offset + 1];\n  var segmentM = 0;\n  var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n  var chunk = '';\n  var chunkLength = 0;\n  var data, index, previousAngle;\n  for (var i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    var char = text.charAt(index);\n    chunk = reverse ? char + chunk : chunk + char;\n    var charLength = measure(chunk) - chunkLength;\n    chunkLength += charLength;\n    var charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    var segmentPos = charM - segmentM;\n    var angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      var delta = angle - previousAngle;\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    var interpolate = segmentPos / segmentLength;\n    var x = lerp(x1, x2, interpolate);\n    var y = lerp(y1, y2, interpolate);\n    if (previousAngle == angle) {\n      if (reverse) {\n        data[0] = x;\n        data[1] = y;\n        data[2] = charLength / 2;\n      }\n      data[4] = chunk;\n    } else {\n      chunk = char;\n      chunkLength = charLength;\n      data = [x, y, charLength / 2, angle, chunk];\n      if (reverse) {\n        result.unshift(data);\n      } else {\n        result.push(data);\n      }\n      previousAngle = angle;\n    }\n    startM += charLength;\n  }\n  return result;\n}\n\n//# sourceMappingURL=textpath.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nvar Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12\n};\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\n\n\nexport default Instruction;\n\n//# sourceMappingURL=Instruction.js.map","/**\n * @module ol/render/replay\n */\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * @const\n * @type {Array.<module:ol/render/ReplayType>}\n */\nexport var ORDER = [\n  ReplayType.POLYGON,\n  ReplayType.CIRCLE,\n  ReplayType.LINE_STRING,\n  ReplayType.IMAGE,\n  ReplayType.TEXT,\n  ReplayType.DEFAULT\n];\n\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\n\n//# sourceMappingURL=replay.js.map","/**\n * @module ol/render/canvas/Replay\n */\nimport {getUid} from '../../util.js';\nimport {UNDEFINED} from '../../functions.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {buffer, clone, coordinateRelationship, createEmpty, createOrUpdate,\n  createOrUpdateEmpty, extend, extendCoordinate, intersects} from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray} from '../../geom/flat/inflate.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {isEmpty} from '../../obj.js';\nimport VectorContext from '../VectorContext.js';\nimport {drawImage, resetTransform, defaultPadding, defaultFillStyle, defaultStrokeStyle,\n  defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset,\n  defaultLineDash, defaultLineCap} from '../canvas.js';\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  apply as applyTransform,\n  setFromArray as transformSetFromArray\n} from '../../transform.js';\n\n\n/**\n * @type {module:ol/extent~Extent}\n */\nvar tmpExtent = createEmpty();\n\n\n/**\n * @type {!module:ol/transform~Transform}\n */\nvar tmpTransform = createTransform();\n\n\nvar CanvasReplay = (function (VectorContext) {\n  function CanvasReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    VectorContext.call(this);\n\n    /**\n     * @type {?}\n     */\n    this.declutterTree = declutterTree;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {module:ol/extent~Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @private\n     * @type {Array.<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array.<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array.<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array.<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {!Object.<number,module:ol/coordinate~Coordinate|Array.<module:ol/coordinate~Coordinate>|Array.<Array.<module:ol/coordinate~Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!module:ol/transform~Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array.<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @protected\n     * @type {module:ol/render/canvas~FillStrokeState}\n     */\n    this.state = /** @type {module:ol/render/canvas~FillStrokeState} */ ({});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n  }\n\n  if ( VectorContext ) CanvasReplay.__proto__ = VectorContext;\n  CanvasReplay.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasReplay.prototype.constructor = CanvasReplay;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/coordinate~Coordinate} p1 1st point of the background box.\n   * @param {module:ol/coordinate~Coordinate} p2 2nd point of the background box.\n   * @param {module:ol/coordinate~Coordinate} p3 3rd point of the background box.\n   * @param {module:ol/coordinate~Coordinate} p4 4th point of the background box.\n   * @param {Array.<*>} fillInstruction Fill instruction.\n   * @param {Array.<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayTextBackground_ = function replayTextBackground_ (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(context, /** @type {Array.<*>} */ (strokeInstruction));\n      context.stroke();\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n   * @param {number} height Height.\n   * @param {number} opacity Opacity.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {number} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {number} width Width.\n   * @param {Array.<number>} padding Padding.\n   * @param {Array.<*>} fillInstruction Fill instruction.\n   * @param {Array.<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayImage_ = function replayImage_ (\n    context,\n    x,\n    y,\n    image,\n    anchorX,\n    anchorY,\n    declutterGroup,\n    height,\n    opacity,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    width,\n    padding,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    var fillStroke = fillInstruction || strokeInstruction;\n    anchorX *= scale;\n    anchorY *= scale;\n    x -= anchorX;\n    y -= anchorY;\n\n    var w = (width + originX > image.width) ? image.width - originX : width;\n    var h = (height + originY > image.height) ? image.height - originY : height;\n    var boxW = padding[3] + w * scale + padding[1];\n    var boxH = padding[0] + h * scale + padding[2];\n    var boxX = x - padding[3];\n    var boxY = y - padding[0];\n\n    /** @type {module:ol/coordinate~Coordinate} */\n    var p1;\n    /** @type {module:ol/coordinate~Coordinate} */\n    var p2;\n    /** @type {module:ol/coordinate~Coordinate} */\n    var p3;\n    /** @type {module:ol/coordinate~Coordinate} */\n    var p4;\n    if (fillStroke || rotation !== 0) {\n      p1 = [boxX, boxY];\n      p2 = [boxX + boxW, boxY];\n      p3 = [boxX + boxW, boxY + boxH];\n      p4 = [boxX, boxY + boxH];\n    }\n\n    var transform = null;\n    if (rotation !== 0) {\n      var centerX = x + anchorX;\n      var centerY = y + anchorY;\n      transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n\n      createOrUpdateEmpty(tmpExtent);\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p1));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p2));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p3));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p4));\n    } else {\n      createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n    }\n    var canvas = context.canvas;\n    var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n    var intersects =\n        tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n        tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n\n    if (declutterGroup) {\n      if (!intersects && declutterGroup[4] == 1) {\n        return;\n      }\n      extend(declutterGroup, tmpExtent);\n      var declutterArgs = intersects ?\n        [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n        null;\n      if (declutterArgs && fillStroke) {\n        declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n      }\n      declutterGroup.push(declutterArgs);\n    } else if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(context, p1, p2, p3, p4,\n          /** @type {Array.<*>} */ (fillInstruction),\n          /** @type {Array.<*>} */ (strokeInstruction));\n      }\n      drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n    }\n  };\n\n  /**\n   * @protected\n   * @param {Array.<number>} dashArray Dash array.\n   * @return {Array.<number>} Dash array with pixel ratio applied\n   */\n  CanvasReplay.prototype.applyPixelRatio = function applyPixelRatio (dashArray) {\n    var pixelRatio = this.pixelRatio;\n    return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\n      return dash * pixelRatio;\n    });\n  };\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  CanvasReplay.prototype.appendFlatCoordinates = function appendFlatCoordinates (flatCoordinates, offset, end, stride, closed, skipFirst) {\n    var this$1 = this;\n\n\n    var myEnd = this.coordinates.length;\n    var extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    var lastCoord = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var nextCoord = [NaN, NaN];\n    var skipped = true;\n\n    var i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          this$1.coordinates[myEnd++] = lastCoord[0];\n          this$1.coordinates[myEnd++] = lastCoord[1];\n        }\n        this$1.coordinates[myEnd++] = nextCoord[0];\n        this$1.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else if (nextRel === Relationship.INTERSECTING) {\n        this$1.coordinates[myEnd++] = nextCoord[0];\n        this$1.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastCoord[0] = nextCoord[0];\n      lastCoord[1] = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      this.coordinates[myEnd++] = lastCoord[0];\n      this.coordinates[myEnd++] = lastCoord[1];\n    }\n    return myEnd;\n  };\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array.<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array.<number>} replayEnds Replay ends.\n   * @return {number} Offset.\n   */\n  CanvasReplay.prototype.drawCustomCoordinates_ = function drawCustomCoordinates_ (flatCoordinates, offset, ends, stride, replayEnds) {\n    var this$1 = this;\n\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var replayEnd = this$1.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n      replayEnds.push(replayEnd);\n      offset = end;\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasReplay.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {\n    var this$1 = this;\n\n    this.beginGeometry(geometry, feature);\n    var type = geometry.getType();\n    var stride = geometry.getStride();\n    var replayBegin = this.coordinates.length;\n    var flatCoordinates, replayEnd, replayEnds, replayEndss;\n    var offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      geometry = /** @type {module:ol/geom/MultiPolygon} */ (geometry);\n      flatCoordinates = geometry.getOrientedFlatCoordinates();\n      replayEndss = [];\n      var endss = geometry.getEndss();\n      offset = 0;\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var myEnds = [];\n        offset = this$1.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n        replayEndss.push(myEnds);\n      }\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n    } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n      replayEnds = [];\n      flatCoordinates = (type == GeometryType.POLYGON) ?\n        /** @type {module:ol/geom/Polygon} */ (geometry).getOrientedFlatCoordinates() :\n        geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(flatCoordinates, 0,\n        /** @type {module:ol/geom/Polygon|module:ol/geom/MultiLineString} */ (geometry).getEnds(),\n        stride, replayEnds);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnds, geometry, renderer, inflateCoordinatesArray]);\n    } else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      replayEnd = this.appendFlatCoordinates(\n        flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer, inflateCoordinates]);\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      replayEnd = this.coordinates.length;\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer]);\n    }\n    this.endGeometry(geometry, feature);\n  };\n\n  /**\n   * @protected\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   */\n  CanvasReplay.prototype.beginGeometry = function beginGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasReplay.prototype.fill_ = function fill_ (context) {\n    if (this.alignFill_) {\n      var origin = applyTransform(this.renderedTransform_, [0, 0]);\n      var repeatSize = 512 * this.pixelRatio;\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.setTransform.apply(context, resetTransform);\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array.<*>} instruction Instruction.\n   */\n  CanvasReplay.prototype.setStrokeStyle_ = function setStrokeStyle_ (context, instruction) {\n    context.strokeStyle = /** @type {module:ol/colorlike~ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {string} */ (instruction[3]);\n    context.lineJoin = /** @type {string} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (CANVAS_LINE_DASH) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array.<number>} */ (instruction[6]));\n    }\n  };\n\n  /**\n   * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   */\n  CanvasReplay.prototype.renderDeclutter_ = function renderDeclutter_ (declutterGroup, feature) {\n    var this$1 = this;\n\n    if (declutterGroup && declutterGroup.length > 5) {\n      var groupCount = declutterGroup[4];\n      if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n        /** @type {module:ol/structs/RBush~Entry} */\n        var box = {\n          minX: /** @type {number} */ (declutterGroup[0]),\n          minY: /** @type {number} */ (declutterGroup[1]),\n          maxX: /** @type {number} */ (declutterGroup[2]),\n          maxY: /** @type {number} */ (declutterGroup[3]),\n          value: feature\n        };\n        if (!this.declutterTree.collides(box)) {\n          this.declutterTree.insert(box);\n          for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n            var declutterData = /** @type {Array} */ (declutterGroup[j]);\n            if (declutterData) {\n              if (declutterData.length > 11) {\n                this$1.replayTextBackground_(declutterData[0],\n                  declutterData[13], declutterData[14], declutterData[15], declutterData[16],\n                  declutterData[11], declutterData[12]);\n              }\n              drawImage.apply(undefined, declutterData);\n            }\n          }\n        }\n        declutterGroup.length = 5;\n        createOrUpdateEmpty(declutterGroup);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {Array.<*>} instructions Instructions array.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined}\n   *     featureCallback Feature callback.\n   * @param {module:ol/extent~Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replay_ = function replay_ (\n    context,\n    transform,\n    skippedFeaturesHash,\n    instructions,\n    featureCallback,\n    opt_hitExtent\n  ) {\n    var this$1 = this;\n\n    /** @type {Array.<number>} */\n    var pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates, 0, this.coordinates.length, 2,\n        transform, this.pixelCoordinates_);\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    var skipFeatures = !isEmpty(skippedFeaturesHash);\n    var i = 0; // instruction index\n    var ii = instructions.length; // end of instructions\n    var d = 0; // data index\n    var dd; // end of per-instruction data\n    var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image;\n    var pendingFill = 0;\n    var pendingStroke = 0;\n    var lastFillInstruction = null;\n    var lastStrokeInstruction = null;\n    var coordinateCache = this.coordinateCache_;\n    var viewRotation = this.viewRotation_;\n\n    var state = /** @type {module:ol/render~State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n    var /** @type {module:ol/Feature|module:ol/render/Feature} */ feature;\n    var x, y;\n    while (i < ii) {\n      var instruction = instructions[i];\n      var type = /** @type {module:ol/render/canvas/Instruction} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {module:ol/Feature|module:ol/render/Feature} */ (instruction[1]);\n          if ((skipFeatures &&\n              skippedFeaturesHash[getUid(feature).toString()]) ||\n              !feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (opt_hitExtent !== undefined && !intersects(\n            opt_hitExtent, feature.getGeometry().getExtent())) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this$1.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          var x1 = pixelCoordinates[d];\n          var y1 = pixelCoordinates[d + 1];\n          var x2 = pixelCoordinates[d + 2];\n          var y2 = pixelCoordinates[d + 3];\n          var dx = x2 - x1;\n          var dy = y2 - y1;\n          var r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          var geometry = /** @type {module:ol/geom/SimpleGeometry} */ (instruction[3]);\n          var renderer = instruction[4];\n          var fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          var coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */\n              (instruction[3]);\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          declutterGroup = featureCallback ? null : /** @type {module:ol/render/canvas~DeclutterGroup} */ (instruction[6]);\n          var height = /** @type {number} */ (instruction[7]);\n          var opacity = /** @type {number} */ (instruction[8]);\n          var originX = /** @type {number} */ (instruction[9]);\n          var originY = /** @type {number} */ (instruction[10]);\n          var rotateWithView = /** @type {boolean} */ (instruction[11]);\n          var rotation = /** @type {number} */ (instruction[12]);\n          var scale = /** @type {number} */ (instruction[13]);\n          var snapToPixel = /** @type {boolean} */ (instruction[14]);\n          var width = /** @type {number} */ (instruction[15]);\n\n          var padding = (void 0), backgroundFill = (void 0), backgroundStroke = (void 0);\n          if (instruction.length > 16) {\n            padding = /** @type {Array.<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = backgroundStroke = false;\n          }\n\n          if (rotateWithView) {\n            rotation += viewRotation;\n          }\n          for (; d < dd; d += 2) {\n            this$1.replayImage_(context,\n              pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\n              declutterGroup, height, opacity, originX, originY, rotation, scale,\n              snapToPixel, width, padding,\n              backgroundFill ? /** @type {Array.<*>} */ (lastFillInstruction) : null,\n              backgroundStroke ? /** @type {Array.<*>} */ (lastStrokeInstruction) : null);\n          }\n          this$1.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          var begin = /** @type {number} */ (instruction[1]);\n          var end = /** @type {number} */ (instruction[2]);\n          var baseline = /** @type {number} */ (instruction[3]);\n          declutterGroup = featureCallback ? null : /** @type {module:ol/render/canvas~DeclutterGroup} */ (instruction[4]);\n          var overflow = /** @type {number} */ (instruction[5]);\n          var fillKey = /** @type {string} */ (instruction[6]);\n          var maxAngle = /** @type {number} */ (instruction[7]);\n          var measure = /** @type {function(string):number} */ (instruction[8]);\n          var offsetY = /** @type {number} */ (instruction[9]);\n          var strokeKey = /** @type {string} */ (instruction[10]);\n          var strokeWidth = /** @type {number} */ (instruction[11]);\n          var text = /** @type {string} */ (instruction[12]);\n          var textKey = /** @type {string} */ (instruction[13]);\n          var textScale = /** @type {number} */ (instruction[14]);\n\n          var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          var textLength = measure(text);\n          if (overflow || textLength <= pathLength) {\n            var textAlign = /** @type {module:ol~render} */ (this$1).textStates[textKey].textAlign;\n            var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            var parts = drawTextOnPath(\n              pixelCoordinates, begin, end, 2, text, measure, startM, maxAngle);\n            if (parts) {\n              var c = (void 0), cc = (void 0), chars = (void 0), label = (void 0), part = (void 0);\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = /** @type {module:ol~render} */ (this$1).getImage(chars, textKey, '', strokeKey);\n                  anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                  anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                  this$1.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = /** @type {module:ol~render} */ (this$1).getImage(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  this$1.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n            }\n          }\n          this$1.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {module:ol/Feature|module:ol/render/Feature} */ (instruction[1]);\n            var result = featureCallback(feature);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this$1.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this$1.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this$1.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {module:ol/colorlike~ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this$1.setStrokeStyle_(context, /** @type {Array.<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   */\n  CanvasReplay.prototype.replay = function replay (context, transform, viewRotation, skippedFeaturesHash) {\n    this.viewRotation_ = viewRotation;\n    this.replay_(context, transform,\n      skippedFeaturesHash, this.instructions, undefined, undefined);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T=} opt_featureCallback\n   *     Feature callback.\n   * @param {module:ol/extent~Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replayHitDetection = function replayHitDetection (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.replay_(context, transform, skippedFeaturesHash,\n      this.hitDetectionInstructions, opt_featureCallback, opt_hitExtent);\n  };\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  CanvasReplay.prototype.reverseHitDetectionInstructions = function reverseHitDetectionInstructions () {\n    var this$1 = this;\n\n    var hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    var i;\n    var n = hitDetectionInstructions.length;\n    var instruction;\n    var type;\n    var begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {module:ol/render/canvas/Instruction} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this$1.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var state = this.state;\n    if (fillStyle) {\n      var fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(fillStyleColor ?\n        fillStyleColor : defaultFillStyle);\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      var strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(strokeStyleColor ?\n        strokeStyleColor : defaultStrokeStyle);\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap = strokeStyleLineCap !== undefined ?\n        strokeStyleLineCap : defaultLineCap;\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash ?\n        strokeStyleLineDash.slice() : defaultLineDash;\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : defaultLineDashOffset;\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin = strokeStyleLineJoin !== undefined ?\n        strokeStyleLineJoin : defaultLineJoin;\n      var strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth = strokeStyleWidth !== undefined ?\n        strokeStyleWidth : defaultLineWidth;\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit = strokeStyleMiterLimit !== undefined ?\n        strokeStyleMiterLimit : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  };\n\n  /**\n   * @param {module:ol/render/canvas~FillStrokeState} state State.\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   * @return {Array.<*>} Fill instruction.\n   */\n  CanvasReplay.prototype.createFill = function createFill (state, geometry) {\n    var fillStyle = state.fillStyle;\n    var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  };\n\n  /**\n   * @param {module:ol/render/canvas~FillStrokeState} state State.\n   */\n  CanvasReplay.prototype.applyStroke = function applyStroke (state) {\n    this.instructions.push(this.createStroke(state));\n  };\n\n  /**\n   * @param {module:ol/render/canvas~FillStrokeState} state State.\n   * @return {Array.<*>} Stroke instruction.\n   */\n  CanvasReplay.prototype.createStroke = function createStroke (state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n      state.lineJoin, state.miterLimit,\n      this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n    ];\n  };\n\n  /**\n   * @param {module:ol/render/canvas~FillStrokeState} state State.\n   * @param {function(this:module:ol/render/canvas/Replay, module:ol/render/canvas~FillStrokeState, (module:ol/geom/Geometry|module:ol/render/Feature)):Array.<*>} createFill Create fill.\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   */\n  CanvasReplay.prototype.updateFillStyle = function updateFillStyle (state, createFill, geometry) {\n    var fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state, geometry));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  };\n\n  /**\n   * @param {module:ol/render/canvas~FillStrokeState} state State.\n   * @param {function(this:module:ol/render/canvas/Replay, module:ol/render/canvas~FillStrokeState)} applyStroke Apply stroke.\n   */\n  CanvasReplay.prototype.updateStrokeStyle = function updateStrokeStyle (state, applyStroke) {\n    var strokeStyle = state.strokeStyle;\n    var lineCap = state.lineCap;\n    var lineDash = state.lineDash;\n    var lineDashOffset = state.lineDashOffset;\n    var lineJoin = state.lineJoin;\n    var lineWidth = state.lineWidth;\n    var miterLimit = state.miterLimit;\n    if (state.currentStrokeStyle != strokeStyle ||\n        state.currentLineCap != lineCap ||\n        (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n        state.currentLineDashOffset != lineDashOffset ||\n        state.currentLineJoin != lineJoin ||\n        state.currentLineWidth != lineWidth ||\n        state.currentMiterLimit != miterLimit) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  };\n\n  /**\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   */\n  CanvasReplay.prototype.endGeometry = function endGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  };\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {module:ol/extent~Extent} The buffered rendering extent.\n   * @protected\n   */\n  CanvasReplay.prototype.getBufferedMaxExtent = function getBufferedMaxExtent () {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        var width = this.resolution * (this.maxLineWidth + 1) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  };\n\n  return CanvasReplay;\n}(VectorContext));\n\n\n/**\n * FIXME empty description for jsdoc\n */\nCanvasReplay.prototype.finish = UNDEFINED;\n\n\nexport default CanvasReplay;\n\n//# sourceMappingURL=Replay.js.map","/**\n * @module ol/render/canvas/ImageReplay\n */\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\nvar CanvasImageReplay = (function (CanvasReplay) {\n  function CanvasImageReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {module:ol/render/canvas~DeclutterGroup}\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.snapToPixel_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n  }\n\n  if ( CanvasReplay ) CanvasImageReplay.__proto__ = CanvasReplay;\n  CanvasImageReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasImageReplay.prototype.constructor = CanvasImageReplay;\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} My end.\n   */\n  CanvasImageReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, offset, end, stride) {\n    return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawPoint = function drawPoint (pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    var flatCoordinates = pointGeometry.getFlatCoordinates();\n    var stride = pointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.snapToPixel_, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.snapToPixel_, this.width_\n    ]);\n    this.endGeometry(pointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    var stride = multiPointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.snapToPixel_, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.snapToPixel_, this.width_\n    ]);\n    this.endGeometry(multiPointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.snapToPixel_ = undefined;\n    this.width_ = undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.setImageStyle = function setImageStyle (imageStyle, declutterGroup) {\n    var anchor = imageStyle.getAnchor();\n    var size = imageStyle.getSize();\n    var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n    var image = imageStyle.getImage(1);\n    var origin = imageStyle.getOrigin();\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.declutterGroup_ = /** @type {module:ol/render/canvas~DeclutterGroup} */ (declutterGroup);\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScale();\n    this.snapToPixel_ = imageStyle.getSnapToPixel();\n    this.width_ = size[0];\n  };\n\n  return CanvasImageReplay;\n}(CanvasReplay));\n\n\nexport default CanvasImageReplay;\n\n//# sourceMappingURL=ImageReplay.js.map","/**\n * @module ol/render/canvas/LineStringReplay\n */\nimport CanvasInstruction, {strokeInstruction, beginPathInstruction} from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\nvar CanvasLineStringReplay = (function (CanvasReplay) {\n  function CanvasLineStringReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasLineStringReplay.__proto__ = CanvasReplay;\n  CanvasLineStringReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasLineStringReplay.prototype.constructor = CanvasLineStringReplay;\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  CanvasLineStringReplay.prototype.drawFlatCoordinates_ = function drawFlatCoordinates_ (flatCoordinates, offset, end, stride) {\n    var myBegin = this.coordinates.length;\n    var myEnd = this.appendFlatCoordinates(\n      flatCoordinates, offset, end, stride, false, false);\n    var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    var stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(lineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {\n    var this$1 = this;\n\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var ends = multiLineStringGeometry.getEnds();\n    var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    var stride = multiLineStringGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this$1.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(multiLineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.finish = function finish () {\n    var state = this.state;\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasLineStringReplay.prototype.applyStroke = function applyStroke (state) {\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    CanvasReplay.prototype.applyStroke.call(this, state);\n    this.instructions.push(beginPathInstruction);\n  };\n\n  return CanvasLineStringReplay;\n}(CanvasReplay));\n\n\nexport default CanvasLineStringReplay;\n\n//# sourceMappingURL=LineStringReplay.js.map","/**\n * @module ol/render/canvas/PolygonReplay\n */\nimport {asString} from '../../color.js';\nimport {snap} from '../../geom/flat/simplify.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport CanvasInstruction, {\n  fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction\n} from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\n\nvar CanvasPolygonReplay = (function (CanvasReplay) {\n  function CanvasPolygonReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasPolygonReplay.__proto__ = CanvasReplay;\n  CanvasPolygonReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasPolygonReplay.prototype.constructor = CanvasPolygonReplay;\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array.<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasPolygonReplay.prototype.drawFlatCoordinatess_ = function drawFlatCoordinatess_ (flatCoordinates, offset, ends, stride) {\n    var this$1 = this;\n\n    var state = this.state;\n    var fill = state.fillStyle !== undefined;\n    var stroke = state.strokeStyle != undefined;\n    var numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (var i = 0; i < numEnds; ++i) {\n      var end = ends[i];\n      var myBegin = this$1.coordinates.length;\n      var myEnd = this$1.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n      var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n      this$1.instructions.push(moveToLineToInstruction);\n      this$1.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatCoordinates above).\n        this$1.instructions.push(closePathInstruction);\n        this$1.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawCircle = function drawCircle (circleGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(circleGeometry);\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var flatCoordinates = circleGeometry.getFlatCoordinates();\n    var stride = circleGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    this.appendFlatCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(fillInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(circleGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(polygonGeometry);\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var ends = polygonGeometry.getEnds();\n    var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    var stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n    this.endGeometry(polygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {\n    var this$1 = this;\n\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(multiPolygonGeometry);\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var endss = multiPolygonGeometry.getEndss();\n    var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    var stride = multiPolygonGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this$1.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n    }\n    this.endGeometry(multiPolygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    var tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      var coordinates = this.coordinates;\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   */\n  CanvasPolygonReplay.prototype.setFillStrokeStyles_ = function setFillStrokeStyles_ (geometry) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill, geometry);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  };\n\n  return CanvasPolygonReplay;\n}(CanvasReplay));\n\n\nexport default CanvasPolygonReplay;\n\n//# sourceMappingURL=PolygonReplay.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array.<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  var chunkStart = offset;\n  var chunkEnd = offset;\n  var chunkM = 0;\n  var m = 0;\n  var start = offset;\n  var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n\n//# sourceMappingURL=straightchunk.js.map","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line'\n};\n\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/render/canvas/TextReplay\n */\nimport {getUid} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {labelCache, measureTextWidth, defaultTextAlign, measureTextHeight, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline} from '../canvas.js';\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n\nvar CanvasTextReplay = (function (CanvasReplay) {\n  function CanvasTextReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {module:ol/render/canvas~DeclutterGroup}\n     */\n    this.declutterGroup_;\n\n    /**\n     * @private\n     * @type {Array.<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object.<string, module:ol/render/canvas~FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object.<string, module:ol/render/canvas~StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {module:ol/render/canvas~TextState}\n     */\n    this.textState_ = /** @type {module:ol/render/canvas~TextState} */ ({});\n\n    /**\n     * @type {!Object.<string, module:ol/render/canvas~TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {Object.<string, Object.<string, number>>}\n     */\n    this.widths_ = {};\n\n    labelCache.prune();\n\n  }\n\n  if ( CanvasReplay ) CanvasTextReplay.__proto__ = CanvasReplay;\n  CanvasTextReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasTextReplay.prototype.constructor = CanvasTextReplay;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.drawText = function drawText (geometry, feature) {\n    var this$1 = this;\n\n    var fillState = this.textFillState_;\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    var begin = this.coordinates.length;\n\n    var geometryType = geometry.getType();\n    var flatCoordinates = null;\n    var end = 2;\n    var stride = 2;\n    var i, ii;\n\n    if (textState.placement === TextPlacement.LINE) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      var ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      stride = geometry.getStride();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = geometry.getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = geometry.getEnds().slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        var endss = geometry.getEndss();\n        ends = [];\n        for (i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      var textAlign = textState.textAlign;\n      var flatOffset = 0;\n      var flatEnd;\n      for (var o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (i = flatOffset; i < flatEnd; i += stride) {\n          this$1.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        end = this$1.coordinates.length;\n        flatOffset = ends[o];\n        this$1.drawChars_(begin, end, this$1.declutterGroup_);\n        begin = end;\n      }\n      this.endGeometry(geometry, feature);\n\n    } else {\n      var label = this.getImage(this.text_, this.textKey_, this.fillKey_, this.strokeKey_);\n      var width = label.width / this.pixelRatio;\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = geometry.getFlatCoordinates();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {module:ol/geom/LineString} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {module:ol/geom/Circle} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {module:ol/geom/MultiLineString} */ (geometry).getFlatMidpoints();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {module:ol/geom/Polygon} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow && flatCoordinates[2] / this.resolution < width) {\n            return;\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          var interiorPoints = /** @type {module:ol/geom/MultiPolygon} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (textState.overflow || interiorPoints[i + 2] / this$1.resolution >= width) {\n              flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n            }\n          }\n          end = flatCoordinates.length;\n          if (end == 0) {\n            return;\n          }\n          break;\n        default:\n      }\n      end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill, geometry);\n          this.hitDetectionInstructions.push(this.createFill(this.state, geometry));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      this.drawTextImage_(label, begin, end);\n      this.endGeometry(geometry, feature);\n    }\n  };\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {HTMLCanvasElement} Image.\n   */\n  CanvasTextReplay.prototype.getImage = function getImage (text, textKey, fillKey, strokeKey) {\n    var label;\n    var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n\n    if (!labelCache.containsKey(key)) {\n      var strokeState = strokeKey ? this.strokeStates[strokeKey] || this.textStrokeState_ : null;\n      var fillState = fillKey ? this.fillStates[fillKey] || this.textFillState_ : null;\n      var textState = this.textStates[textKey] || this.textState_;\n      var pixelRatio = this.pixelRatio;\n      var scale = textState.scale * pixelRatio;\n      var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n      var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n      var lines = text.split('\\n');\n      var numLines = lines.length;\n      var widths = [];\n      var width = measureTextWidths(textState.font, lines, widths);\n      var lineHeight = measureTextHeight(textState.font);\n      var height = lineHeight * numLines;\n      var renderWidth = (width + strokeWidth);\n      var context = createCanvasContext2D(\n        Math.ceil(renderWidth * scale),\n        Math.ceil((height + strokeWidth) * scale));\n      label = context.canvas;\n      labelCache.set(key, label);\n      if (scale != 1) {\n        context.scale(scale, scale);\n      }\n      context.font = textState.font;\n      if (strokeKey) {\n        context.strokeStyle = strokeState.strokeStyle;\n        context.lineWidth = strokeWidth;\n        context.lineCap = strokeState.lineCap;\n        context.lineJoin = strokeState.lineJoin;\n        context.miterLimit = strokeState.miterLimit;\n        if (CANVAS_LINE_DASH && strokeState.lineDash.length) {\n          context.setLineDash(strokeState.lineDash);\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (fillKey) {\n        context.fillStyle = fillState.fillStyle;\n      }\n      context.textBaseline = 'middle';\n      context.textAlign = 'center';\n      var leftRight = (0.5 - align);\n      var x = align * label.width / scale + leftRight * strokeWidth;\n      var i;\n      if (strokeKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n      if (fillKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n    }\n    return labelCache.get(key);\n  };\n\n  /**\n   * @private\n   * @param {HTMLCanvasElement} label Label.\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  CanvasTextReplay.prototype.drawTextImage_ = function drawTextImage_ (label, begin, end) {\n    var textState = this.textState_;\n    var strokeState = this.textStrokeState_;\n    var pixelRatio = this.pixelRatio;\n    var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n    var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    var anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n    var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n    this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1, true, label.width,\n      textState.padding == defaultPadding ?\n        defaultPadding : textState.padding.map(function(p) {\n          return p * pixelRatio;\n        }),\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1 / pixelRatio, true, label.width, textState.padding,\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n  };\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n   */\n  CanvasTextReplay.prototype.drawChars_ = function drawChars_ (begin, end, declutterGroup) {\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    var fillState = this.textFillState_;\n\n    var strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = /** @type {module:ol/render/canvas~StrokeState} */ ({\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash\n        });\n      }\n    }\n    var textKey = this.textKey_;\n    if (!(this.textKey_ in this.textStates)) {\n      this.textStates[this.textKey_] = /** @type {module:ol/render/canvas~TextState} */ ({\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        scale: textState.scale\n      });\n    }\n    var fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = /** @type {module:ol/render/canvas~FillState} */ ({\n          fillStyle: fillState.fillStyle\n        });\n      }\n    }\n\n    var pixelRatio = this.pixelRatio;\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n\n    var offsetY = this.textOffsetY_ * pixelRatio;\n    var text = this.text_;\n    var font = textState.font;\n    var textScale = textState.scale;\n    var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n    var widths = this.widths_[font];\n    if (!widths) {\n      this.widths_[font] = widths = {};\n    }\n    this.instructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale * pixelRatio;\n      },\n      offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale;\n      },\n      offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n    ]);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.setTextStyle = function setTextStyle (textStyle, declutterGroup) {\n    var textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      this.declutterGroup_ = /** @type {module:ol/render/canvas~DeclutterGroup} */ (declutterGroup);\n\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = this.textFillState_ = null;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = this.textFillState_ = /** @type {module:ol/render/canvas~FillState} */ ({});\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle);\n      }\n\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = this.textStrokeState_ = null;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = this.textStrokeState_ = /** @type {module:ol/render/canvas~StrokeState} */ ({});\n        }\n        var lineDash = textStrokeStyle.getLineDash();\n        var lineDashOffset = textStrokeStyle.getLineDashOffset();\n        var lineWidth = textStrokeStyle.getWidth();\n        var miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n            lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n            lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n            miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle);\n      }\n\n      textState = this.textState_;\n      var font = textStyle.getFont() || defaultFont;\n      checkFont(font);\n      var textScale = textStyle.getScale();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? 1 : textScale;\n\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState ?\n        (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n        strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n        strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n        '';\n      this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n      this.fillKey_ = fillState ?\n        (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n        '';\n    }\n  };\n\n  return CanvasTextReplay;\n}(CanvasReplay));\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array.<string>} lines Lines to measure.\n * @param {Array.<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  var numLines = lines.length;\n  var width = 0;\n  for (var i = 0; i < numLines; ++i) {\n    var currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n\nexport default CanvasTextReplay;\n\n//# sourceMappingURL=TextReplay.js.map","/**\n * @module ol/render/canvas/ReplayGroup\n */\n\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport ReplayType from '../ReplayType.js';\nimport CanvasReplay from '../canvas/Replay.js';\nimport CanvasImageReplay from '../canvas/ImageReplay.js';\nimport CanvasLineStringReplay from '../canvas/LineStringReplay.js';\nimport CanvasPolygonReplay from '../canvas/PolygonReplay.js';\nimport CanvasTextReplay from '../canvas/TextReplay.js';\nimport {ORDER} from '../replay.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n\n/**\n * @type {Object.<module:ol/render/ReplayType,\n *                function(new: module:ol/render/canvas/Replay, number, module:ol/extent~Extent,\n *                number, number, boolean, Array.<module:ol/render/canvas~DeclutterGroup>)>}\n */\nvar BATCH_CONSTRUCTORS = {\n  'Circle': CanvasPolygonReplay,\n  'Default': CanvasReplay,\n  'Image': CanvasImageReplay,\n  'LineString': CanvasLineStringReplay,\n  'Polygon': CanvasPolygonReplay,\n  'Text': CanvasTextReplay\n};\n\n\nvar CanvasReplayGroup = (function (ReplayGroup) {\n  function CanvasReplayGroup(\n    tolerance,\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    declutterTree,\n    opt_renderBuffer\n  ) {\n    ReplayGroup.call(this);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = declutterTree;\n\n    /**\n     * @type {module:ol/render/canvas~DeclutterGroup}\n     * @private\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object.<string, !Object.<module:ol/render/ReplayType, module:ol/render/canvas/Replay>>}\n     */\n    this.replaysByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n  }\n\n  if ( ReplayGroup ) CanvasReplayGroup.__proto__ = ReplayGroup;\n  CanvasReplayGroup.prototype = Object.create( ReplayGroup && ReplayGroup.prototype );\n  CanvasReplayGroup.prototype.constructor = CanvasReplayGroup;\n\n  /**\n   * @param {boolean} group Group with previous replay.\n   * @return {module:ol/render/canvas~DeclutterGroup} Declutter instruction group.\n   */\n  CanvasReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n    var declutter = null;\n    if (this.declutterTree_) {\n      if (group) {\n        declutter = this.declutterGroup_;\n        /** @type {number} */ (declutter[4])++;\n      } else {\n        declutter = this.declutterGroup_ = createEmpty();\n        declutter.push(1);\n      }\n    }\n    return declutter;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   */\n  CanvasReplayGroup.prototype.clip = function clip (context, transform) {\n    var flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  };\n\n  /**\n   * @param {Array.<module:ol/render/ReplayType>} replays Replays.\n   * @return {boolean} Has replays of the provided types.\n   */\n  CanvasReplayGroup.prototype.hasReplays = function hasReplays (replays) {\n    var this$1 = this;\n\n    for (var zIndex in this$1.replaysByZIndex_) {\n      var candidates = this$1.replaysByZIndex_[zIndex];\n      for (var i = 0, ii = replays.length; i < ii; ++i) {\n        if (replays[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplayGroup.prototype.finish = function finish () {\n    var this$1 = this;\n\n    for (var zKey in this$1.replaysByZIndex_) {\n      var replays = this$1.replaysByZIndex_[zKey];\n      for (var replayKey in replays) {\n        replays[replayKey].finish();\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T} callback Feature callback.\n   * @param {Object.<string, module:ol/render/canvas~DeclutterGroup>} declutterReplays Declutter replays.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplayGroup.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    skippedFeaturesHash,\n    callback,\n    declutterReplays\n  ) {\n    var this$1 = this;\n\n\n    hitTolerance = Math.round(hitTolerance);\n    var contextSize = hitTolerance * 2 + 1;\n    var transform = composeTransform(this.hitDetectionTransform_,\n      hitTolerance + 0.5, hitTolerance + 0.5,\n      1 / resolution, -1 / resolution,\n      -rotation,\n      -coordinate[0], -coordinate[1]);\n    var context = this.hitDetectionContext_;\n\n    if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {module:ol/extent~Extent}\n     */\n    var hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n    }\n\n    var mask = getCircleArray(hitTolerance);\n    var declutteredFeatures;\n    if (this.declutterTree_) {\n      declutteredFeatures = this.declutterTree_.all().map(function(entry) {\n        return entry.value;\n      });\n    }\n\n    var replayType;\n\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @return {?} Callback result.\n     */\n    function featureCallback(feature) {\n      var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n      for (var i = 0; i < contextSize; i++) {\n        for (var j = 0; j < contextSize; j++) {\n          if (mask[i][j]) {\n            if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n              var result = (void 0);\n              if (!(declutteredFeatures && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) ||\n                  declutteredFeatures.indexOf(feature) !== -1) {\n                result = callback(feature);\n              }\n              if (result) {\n                return result;\n              } else {\n                context.clearRect(0, 0, contextSize, contextSize);\n                return undefined;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    /** @type {Array.<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    var i, j, replays, replay, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      var zIndexKey = zs[i].toString();\n      replays = this$1.replaysByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        replayType = ORDER[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = declutterReplays[zIndexKey];\n            if (!declutter) {\n              declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            result = replay.replayHitDetection(context, transform, rotation,\n              skippedFeaturesHash, featureCallback, hitExtent);\n            if (result) {\n              return result;\n            }\n          }\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @return {Array.<number>} Clip coordinates.\n   */\n  CanvasReplayGroup.prototype.getClipCoords = function getClipCoords (transform) {\n    var maxExtent = this.maxExtent_;\n    var minX = maxExtent[0];\n    var minY = maxExtent[1];\n    var maxX = maxExtent[2];\n    var maxY = maxExtent[3];\n    var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(\n      flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n    var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    var replays = this.replaysByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.replaysByZIndex_[zIndexKey] = replays;\n    }\n    var replay = replays[replayType];\n    if (replay === undefined) {\n      var Constructor = BATCH_CONSTRUCTORS[replayType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_,\n        this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\n      replays[replayType] = replay;\n    }\n    return replay;\n  };\n\n  /**\n   * @return {Object.<string, Object.<module:ol/render/ReplayType, module:ol/render/canvas/Replay>>} Replays.\n   */\n  CanvasReplayGroup.prototype.getReplays = function getReplays () {\n    return this.replaysByZIndex_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.isEmpty = function isEmpty$1 () {\n    return isEmpty(this.replaysByZIndex_);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {Array.<module:ol/render/ReplayType>=} opt_replayTypes Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {Object.<string, module:ol/render/canvas~DeclutterGroup>=} opt_declutterReplays Declutter replays.\n   */\n  CanvasReplayGroup.prototype.replay = function replay (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    opt_replayTypes,\n    opt_declutterReplays\n  ) {\n    var this$1 = this;\n\n\n    /** @type {Array.<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    context.save();\n    this.clip(context, transform);\n\n    var replayTypes = opt_replayTypes ? opt_replayTypes : ORDER;\n    var i, ii, j, jj, replays, replay;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      var zIndexKey = zs[i].toString();\n      replays = this$1.replaysByZIndex_[zIndexKey];\n      for (j = 0, jj = replayTypes.length; j < jj; ++j) {\n        var replayType = replayTypes[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (opt_declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = opt_declutterReplays[zIndexKey];\n            if (!declutter) {\n              opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            replay.replay(context, transform, viewRotation, skippedFeaturesHash);\n          }\n        }\n      }\n    }\n\n    context.restore();\n  };\n\n  return CanvasReplayGroup;\n}(ReplayGroup));\n\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object.<number, Array.<Array.<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n  0: [[true]]\n};\n\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array.<Array.<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n  var i;\n  var radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n}\n\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array.<Array.<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n  if (circleArrayCache[radius] !== undefined) {\n    return circleArrayCache[radius];\n  }\n\n  var arraySize = radius * 2 + 1;\n  var arr = new Array(arraySize);\n  for (var i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  var x = radius;\n  var y = 0;\n  var error = 0;\n\n  while (x >= y) {\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  circleArrayCache[radius] = arr;\n  return arr;\n}\n\n\n/**\n * @param {!Object.<string, Array.<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n */\nexport function replayDeclutter(declutterReplays, context, rotation) {\n  var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n  var skippedFeatureUids = {};\n  for (var z = 0, zz = zs.length; z < zz; ++z) {\n    var replayData = declutterReplays[zs[z].toString()];\n    for (var i = 0, ii = replayData.length; i < ii;) {\n      var replay = replayData[i++];\n      var transform = replayData[i++];\n      replay.replay(context, transform, rotation, skippedFeatureUids);\n    }\n  }\n}\n\n\nexport default CanvasReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/renderer/vector\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @const\n * @type {Object.<module:ol/geom/GeometryType,\n *                function(module:ol/render/ReplayGroup, module:ol/geom/Geometry,\n *                         module:ol/style/Style, Object)>}\n */\nvar GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature1 Feature 1.\n * @param {module:ol/Feature|module:ol/render/Feature} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return getUid(feature1) - getUid(feature2);\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  var tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Circle} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderCircleGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var circleReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, module:ol/events/Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n  var loading = false;\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    var imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener, thisArg);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener, thisArg);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n\n  return loading;\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n  var geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n  var renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    var geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  var replay = replayGroup.getReplay(style.getZIndex(), ReplayType.DEFAULT);\n  replay.drawCustom(/** @type {module:ol/geom/SimpleGeometry} */ (geometry), feature, style.getRenderer());\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n  var geometries = geometry.getGeometriesArray();\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    var geometryRenderer =\n        GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/LineString|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderMultiLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderMultiPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Point|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderMultiPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Polygon|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n//# sourceMappingURL=vector.js.map","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, createEmpty, containsExtent, getWidth} from '../../extent.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup from '../../render/canvas/ReplayGroup.js';\nimport CanvasLayerRenderer from '../canvas/Layer.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = (function (CanvasLayerRenderer) {\n  function CanvasVectorLayerRenderer(vectorLayer) {\n\n    CanvasLayerRenderer.call(this, vectorLayer);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {function(module:ol/Feature, module:ol/Feature): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/render/canvas/ReplayGroup}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = createCanvasContext2D();\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasLayerRenderer ) CanvasVectorLayerRenderer.__proto__ = CanvasLayerRenderer;\n  CanvasVectorLayerRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  CanvasVectorLayerRenderer.prototype.constructor = CanvasVectorLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   */\n  CanvasVectorLayerRenderer.prototype.compose = function compose (context, frameState, layerState) {\n    var this$1 = this;\n\n    var extent = frameState.extent;\n    var pixelRatio = frameState.pixelRatio;\n    var skippedFeatureUids = layerState.managed ?\n      frameState.skippedFeatureUids : {};\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var rotation = viewState.rotation;\n    var projectionExtent = projection.getExtent();\n    var vectorSource = /** @type {module:ol/source/Vector} */ (this.getLayer().getSource());\n\n    var transform = this.getTransform(frameState, 0);\n\n    // clipped rendering if layer extent is set\n    var clipExtent = layerState.extent;\n    var clipped = clipExtent !== undefined;\n    if (clipped) {\n      this.clip(context, frameState, /** @type {module:ol/extent~Extent} */ (clipExtent));\n    }\n    var replayGroup = this.replayGroup_;\n    if (replayGroup && !replayGroup.isEmpty()) {\n      if (this.declutterTree_) {\n        this.declutterTree_.clear();\n      }\n      var layer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n      var drawOffsetX = 0;\n      var drawOffsetY = 0;\n      var replayContext;\n      var transparentLayer = layerState.opacity !== 1;\n      var hasRenderListeners = layer.hasListener(RenderEventType.RENDER);\n      if (transparentLayer || hasRenderListeners) {\n        var drawWidth = context.canvas.width;\n        var drawHeight = context.canvas.height;\n        if (rotation) {\n          var drawSize = Math.round(Math.sqrt(drawWidth * drawWidth + drawHeight * drawHeight));\n          drawOffsetX = (drawSize - drawWidth) / 2;\n          drawOffsetY = (drawSize - drawHeight) / 2;\n          drawWidth = drawHeight = drawSize;\n        }\n        // resize and clear\n        this.context.canvas.width = drawWidth;\n        this.context.canvas.height = drawHeight;\n        replayContext = this.context;\n      } else {\n        replayContext = context;\n      }\n\n      var alpha = replayContext.globalAlpha;\n      if (!transparentLayer) {\n        // for performance reasons, context.save / context.restore is not used\n        // to save and restore the transformation matrix and the opacity.\n        // see http://jsperf.com/context-save-restore-versus-variable\n        replayContext.globalAlpha = layerState.opacity;\n      }\n\n      if (replayContext != context) {\n        replayContext.translate(drawOffsetX, drawOffsetY);\n      }\n\n      var width = frameState.size[0] * pixelRatio;\n      var height = frameState.size[1] * pixelRatio;\n      rotateAtOffset(replayContext, -rotation,\n        width / 2, height / 2);\n      replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n      if (vectorSource.getWrapX() && projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)) {\n        var startX = extent[0];\n        var worldWidth = getWidth(projectionExtent);\n        var world = 0;\n        var offsetX;\n        while (startX < projectionExtent[0]) {\n          --world;\n          offsetX = worldWidth * world;\n          transform = this$1.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n          startX += worldWidth;\n        }\n        world = 0;\n        startX = extent[2];\n        while (startX > projectionExtent[2]) {\n          ++world;\n          offsetX = worldWidth * world;\n          transform = this$1.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n          startX -= worldWidth;\n        }\n      }\n      rotateAtOffset(replayContext, rotation,\n        width / 2, height / 2);\n\n      if (hasRenderListeners) {\n        this.dispatchRenderEvent(replayContext, frameState, transform);\n      }\n      if (replayContext != context) {\n        if (transparentLayer) {\n          var mainContextAlpha = context.globalAlpha;\n          context.globalAlpha = layerState.opacity;\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n          context.globalAlpha = mainContextAlpha;\n        } else {\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n        }\n        replayContext.translate(-drawOffsetX, -drawOffsetY);\n      }\n\n      if (!transparentLayer) {\n        replayContext.globalAlpha = alpha;\n      }\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    var transform = this.getTransform(frameState, 0);\n    this.preCompose(context, frameState, transform);\n    this.compose(context, frameState, layerState);\n    this.postCompose(context, frameState, layerState, transform);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.replayGroup_) {\n      return undefined;\n    } else {\n      var resolution = frameState.viewState.resolution;\n      var rotation = frameState.viewState.rotation;\n      var layer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n      /** @type {!Object.<string, boolean>} */\n      var features = {};\n      var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          var key = getUid(feature).toString();\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        }, null);\n      return result;\n    }\n  };\n\n  /**\n   * @param {module:ol/events/Event} event Event.\n   */\n  CanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {module:ol/events/Event} event Image style change event.\n   * @private\n   */\n  CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var vectorLayer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n    var vectorSource = vectorLayer.getSource();\n\n    var animating = frameState.viewHints[ViewHint.ANIMATING];\n    var interacting = frameState.viewHints[ViewHint.INTERACTING];\n    var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n        (!updateWhileInteracting && interacting)) {\n      return true;\n    }\n\n    var frameStateExtent = frameState.extent;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var resolution = viewState.resolution;\n    var pixelRatio = frameState.pixelRatio;\n    var vectorLayerRevision = vectorLayer.getRevision();\n    var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    var extent = buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n    var projectionExtent = viewState.projection.getExtent();\n\n    if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n        !containsExtent(projectionExtent, frameState.extent)) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      var worldWidth = getWidth(projectionExtent);\n      var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n    }\n\n    if (!this.dirty_ &&\n        this.renderedResolution_ == resolution &&\n        this.renderedRevision_ == vectorLayerRevision &&\n        this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n        containsExtent(this.renderedExtent_, extent)) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    var replayGroup = new CanvasReplayGroup(\n      getRenderTolerance(resolution, pixelRatio), extent, resolution,\n      pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, vectorLayer.getRenderBuffer());\n    vectorSource.loadFeatures(extent, resolution, projection);\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     * @this {module:ol/renderer/canvas/VectorLayer}\n     */\n    var render = function(feature) {\n      var styles;\n      var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        var dirty = this.renderFeature(\n          feature, resolution, pixelRatio, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n      }\n    }.bind(this);\n    if (vectorLayerRenderOrder) {\n      /** @type {Array.<module:ol/Feature>} */\n      var features = [];\n      vectorSource.forEachFeatureInExtent(extent,\n        /**\n         * @param {module:ol/Feature} feature Feature.\n         */\n        function(feature) {\n          features.push(feature);\n        }, this);\n      features.sort(vectorLayerRenderOrder);\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        render(features[i]);\n      }\n    } else {\n      vectorSource.forEachFeatureInExtent(extent, render, this);\n    }\n    replayGroup.finish();\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.replayGroup_ = replayGroup;\n\n    this.replayGroupChanged = true;\n    return true;\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {(module:ol/style/Style|Array.<module:ol/style/Style>)} styles The style or array of styles.\n   * @param {module:ol/render/canvas/ReplayGroup} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, resolution, pixelRatio, styles, replayGroup) {\n    var this$1 = this;\n\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i],\n          getSquaredRenderTolerance(resolution, pixelRatio),\n          this$1.handleStyleImageChange_, this$1) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles,\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/VectorLayer} The layer renderer.\n */\nCanvasVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorLayerRenderer(/** @type {module:ol/layer/Vector} */ (layer));\n};\n\n\nexport default CanvasVectorLayerRenderer;\n\n//# sourceMappingURL=VectorLayer.js.map","/**\n * @module ol/layer/VectorTileRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorTileRenderType.js.map","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileState from '../../TileState.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects} from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport {equivalent as equivalentProjection} from '../../proj.js';\nimport Units from '../../proj/Units.js';\nimport ReplayType from '../../render/ReplayType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup, {replayDeclutter} from '../../render/canvas/ReplayGroup.js';\nimport {ORDER} from '../../render/replay.js';\nimport CanvasTileLayerRenderer from '../canvas/TileLayer.js';\nimport {getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  reset as resetTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\n\n\n/**\n * @type {!Object.<string, Array.<module:ol/render/ReplayType>>}\n */\nvar IMAGE_REPLAYS = {\n  'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\n    ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n  'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n\n\n/**\n * @type {!Object.<string, Array.<module:ol/render/ReplayType>>}\n */\nvar VECTOR_REPLAYS = {\n  'image': [ReplayType.DEFAULT],\n  'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\n  'vector': ORDER\n};\n\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n */\nvar CanvasVectorTileLayerRenderer = (function (CanvasTileLayerRenderer) {\n  function CanvasVectorTileLayerRenderer(layer) {\n\n    CanvasTileLayerRenderer.call(this, layer, true);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = layer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.tmpTransform_ = createTransform();\n\n    // Use lower resolution for pure vector rendering. Closest resolution otherwise.\n    this.zDirection = layer.getRenderMode() == VectorTileRenderType.VECTOR ? 1 : 0;\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasTileLayerRenderer ) CanvasVectorTileLayerRenderer.__proto__ = CanvasTileLayerRenderer;\n  CanvasVectorTileLayerRenderer.prototype = Object.create( CanvasTileLayerRenderer && CanvasTileLayerRenderer.prototype );\n  CanvasVectorTileLayerRenderer.prototype.constructor = CanvasVectorTileLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasTileLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tile = CanvasTileLayerRenderer.prototype.getTile.call(this, z, x, y, pixelRatio, projection);\n    if (tile.getState() === TileState.LOADED) {\n      this.createReplayGroup_(tile, pixelRatio, projection);\n      if (this.context) {\n        this.renderTileImage_(tile, pixelRatio, projection);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var layer = this.getLayer();\n    var layerRevision = layer.getRevision();\n    if (this.renderedLayerRevision_ != layerRevision) {\n      this.renderedTiles.length = 0;\n      var renderMode = layer.getRenderMode();\n      if (!this.context && renderMode != VectorTileRenderType.VECTOR) {\n        this.context = createCanvasContext2D();\n      }\n      if (this.context && renderMode == VectorTileRenderType.VECTOR) {\n        this.context = null;\n      }\n    }\n    this.renderedLayerRevision_ = layerRevision;\n    return CanvasTileLayerRenderer.prototype.prepareFrame.apply(this, arguments);\n  };\n\n  /**\n   * @param {module:ol/VectorImageTile} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.createReplayGroup_ = function createReplayGroup_ (tile, pixelRatio, projection) {\n    var this$1 = this;\n\n    var layer = this.getLayer();\n    var revision = layer.getRevision();\n    var renderOrder = /** @type {module:ol/render~OrderFunction} */ (layer.getRenderOrder()) || null;\n\n    var replayState = tile.getReplayState(layer);\n    if (!replayState.dirty && replayState.renderedRevision == revision &&\n        replayState.renderedRenderOrder == renderOrder) {\n      return;\n    }\n\n    var source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n    var sourceTileGrid = source.getTileGrid();\n    var tileGrid = source.getTileGridForProjection(projection);\n    var resolution = tileGrid.getResolution(tile.tileCoord[0]);\n    var tileExtent = tile.extent;\n\n    var zIndexKeys = {};\n    var loop = function ( t, tt ) {\n      var sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        return;\n      }\n\n      var sourceTileCoord = sourceTile.tileCoord;\n      var sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      var sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      var bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\n        buffer(sharedExtent, layer.getRenderBuffer() * resolution, this$1.tmpExtent);\n      var tileProjection = sourceTile.getProjection();\n      var reproject = false;\n      if (!equivalentProjection(projection, tileProjection)) {\n        reproject = true;\n        sourceTile.setProjection(projection);\n      }\n      replayState.dirty = false;\n      var replayGroup = new CanvasReplayGroup(0, sharedExtent, resolution,\n        pixelRatio, source.getOverlaps(), this$1.declutterTree_, layer.getRenderBuffer());\n      var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @this {module:ol/renderer/canvas/VectorTileLayer}\n       */\n      var render = function(feature) {\n        var styles;\n        var styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup);\n          this.dirty_ = this.dirty_ || dirty;\n          replayState.dirty = replayState.dirty || dirty;\n        }\n      };\n\n      var features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        var feature = features[i];\n        if (reproject) {\n          if (tileProjection.getUnits() == Units.TILE_PIXELS) {\n            // projected tile extent\n            tileProjection.setWorldExtent(sourceTileExtent);\n            // tile extent in tile pixel space\n            tileProjection.setExtent(sourceTile.getExtent());\n          }\n          feature.getGeometry().transform(tileProjection, projection);\n        }\n        if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n          render.call(this$1, feature);\n        }\n      }\n      replayGroup.finish();\n      for (var r in replayGroup.getReplays()) {\n        zIndexKeys[r] = true;\n      }\n      sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\n    };\n\n    for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) loop( t, tt );\n    replayState.renderedRevision = revision;\n    replayState.renderedRenderOrder = renderOrder;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    var layer = this.getLayer();\n    /** @type {!Object.<string, boolean>} */\n    var features = {};\n\n    /** @type {Array.<module:ol/VectorImageTile>} */\n    var renderedTiles = this.renderedTiles;\n\n    var bufferedExtent, found;\n    var i, ii, replayGroup;\n    for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n      var tile = renderedTiles[i];\n      bufferedExtent = buffer(tile.extent, hitTolerance * resolution, bufferedExtent);\n      if (!containsCoordinate(bufferedExtent, coordinate)) {\n        continue;\n      }\n      for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n        var sourceTile = tile.getTile(tile.tileKeys[t]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        replayGroup = sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\n        found = found || replayGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n          /**\n           * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n           * @return {?} Callback result.\n           */\n          function(feature) {\n            var key = getUid(feature).toString();\n            if (!(key in features)) {\n              features[key] = true;\n              return callback.call(thisArg, feature, layer);\n            }\n          }, null);\n      }\n    }\n    return found;\n  };\n\n  /**\n   * @param {module:ol/VectorTile} tile Tile.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @return {module:ol/transform~Transform} transform Transform.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.getReplayTransform_ = function getReplayTransform_ (tile, frameState) {\n    var layer = this.getLayer();\n    var source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n    var tileGrid = source.getTileGrid();\n    var tileCoord = tile.tileCoord;\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var renderResolution = viewState.resolution / pixelRatio;\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    var center = viewState.center;\n    var origin = getTopLeft(tileExtent);\n    var size = frameState.size;\n    var offsetX = Math.round(pixelRatio * size[0] / 2);\n    var offsetY = Math.round(pixelRatio * size[1] / 2);\n    return composeTransform(this.tmpTransform_,\n      offsetX, offsetY,\n      tileResolution / renderResolution, tileResolution / renderResolution,\n      viewState.rotation,\n      (origin[0] - center[0]) / tileResolution,\n      (center[1] - origin[1]) / tileResolution);\n  };\n\n  /**\n   * @param {module:ol/events/Event} event Event.\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {module:ol/events/Event} event Image style change event.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState) {\n    var this$1 = this;\n\n    var layer = this.getLayer();\n    var renderMode = layer.getRenderMode();\n    if (renderMode != VectorTileRenderType.IMAGE) {\n      var declutterReplays = layer.getDeclutter() ? {} : null;\n      var source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n      var replayTypes = VECTOR_REPLAYS[renderMode];\n      var pixelRatio = frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      var size = frameState.size;\n      var offsetX, offsetY;\n      if (rotation) {\n        offsetX = Math.round(pixelRatio * size[0] / 2);\n        offsetY = Math.round(pixelRatio * size[1] / 2);\n        rotateAtOffset(context, -rotation, offsetX, offsetY);\n      }\n      if (declutterReplays) {\n        this.declutterTree_.clear();\n      }\n      var tiles = this.renderedTiles;\n      var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n      var clips = [];\n      var zs = [];\n      for (var i = tiles.length - 1; i >= 0; --i) {\n        var tile = /** @type {module:ol/VectorImageTile} */ (tiles[i]);\n        if (tile.getState() == TileState.ABORT) {\n          continue;\n        }\n        var tileCoord = tile.tileCoord;\n        var worldOffset = tileGrid.getTileCoordExtent(tileCoord, this$1.tmpExtent)[0] - tile.extent[0];\n        var transform = undefined;\n        for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n          var sourceTile = tile.getTile(tile.tileKeys[t]);\n          if (sourceTile.getState() != TileState.LOADED) {\n            continue;\n          }\n          var replayGroup = sourceTile.getReplayGroup(layer, tileCoord.toString());\n          if (!replayGroup || !replayGroup.hasReplays(replayTypes)) {\n            // sourceTile was not yet loaded when this.createReplayGroup_() was\n            // called, or it has no replays of the types we want to render\n            continue;\n          }\n          if (!transform) {\n            transform = this$1.getTransform(frameState, worldOffset);\n          }\n          var currentZ = sourceTile.tileCoord[0];\n          var currentClip = replayGroup.getClipCoords(transform);\n          context.save();\n          context.globalAlpha = layerState.opacity;\n          // Create a clip mask for regions in this low resolution tile that are\n          // already filled by a higher resolution tile\n          for (var j = 0, jj = clips.length; j < jj; ++j) {\n            var clip = clips[j];\n            if (currentZ < zs[j]) {\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher resolution tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n          replayGroup.replay(context, transform, rotation, {}, replayTypes, declutterReplays);\n          context.restore();\n          clips.push(currentClip);\n          zs.push(currentZ);\n        }\n      }\n      if (declutterReplays) {\n        replayDeclutter(declutterReplays, context, rotation);\n      }\n      if (rotation) {\n        rotateAtOffset(context, rotation,\n          /** @type {number} */ (offsetX), /** @type {number} */ (offsetY));\n      }\n    }\n    CanvasTileLayerRenderer.prototype.postCompose.apply(this, arguments);\n  };\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {(module:ol/style/Style|Array.<module:ol/style/Style>)} styles The style or array of styles.\n   * @param {module:ol/render/canvas/ReplayGroup} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, squaredTolerance, styles, replayGroup) {\n    var this$1 = this;\n\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i], squaredTolerance,\n          this$1.handleStyleImageChange_, this$1) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles, squaredTolerance,\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  /**\n   * @param {module:ol/VectorImageTile} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function renderTileImage_ (tile, pixelRatio, projection) {\n    var this$1 = this;\n\n    var layer = this.getLayer();\n    var replayState = tile.getReplayState(layer);\n    var revision = layer.getRevision();\n    var replays = IMAGE_REPLAYS[layer.getRenderMode()];\n    if (replays && replayState.renderedTileRevision !== revision) {\n      replayState.renderedTileRevision = revision;\n      var tileCoord = tile.wrappedTileCoord;\n      var z = tileCoord[0];\n      var source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n      var tileGrid = source.getTileGridForProjection(projection);\n      var resolution = tileGrid.getResolution(z);\n      var context = tile.getContext(layer);\n      var size = source.getTilePixelSize(z, pixelRatio, projection);\n      context.canvas.width = size[0];\n      context.canvas.height = size[1];\n      var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n      for (var i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\n        var sourceTile = tile.getTile(tile.tileKeys[i]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var pixelScale = pixelRatio / resolution;\n        var transform = resetTransform(this$1.tmpTransform_);\n        scaleTransform(transform, pixelScale, -pixelScale);\n        translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n        var replayGroup = sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\n        replayGroup.replay(context, transform, 0, {}, replays);\n      }\n    }\n  };\n\n  return CanvasVectorTileLayerRenderer;\n}(CanvasTileLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR_TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/VectorTileLayer} The layer renderer.\n */\nCanvasVectorTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorTileLayerRenderer(/** @type {module:ol/layer/VectorTile} */ (layer));\n};\n\n\nexport default CanvasVectorTileLayerRenderer;\n\n//# sourceMappingURL=VectorTileLayer.js.map","/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control/util.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport CanvasImageLayerRenderer from './renderer/canvas/ImageLayer.js';\nimport CanvasMapRenderer from './renderer/canvas/Map.js';\nimport CanvasTileLayerRenderer from './renderer/canvas/TileLayer.js';\nimport CanvasVectorLayerRenderer from './renderer/canvas/VectorLayer.js';\nimport CanvasVectorTileLayerRenderer from './renderer/canvas/VectorTileLayer.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\n * @fires module:ol/MapEvent~MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nvar Map = (function (PluggableMap) {\n  function Map(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions();\n    }\n\n    PluggableMap.call(this, options);\n  }\n\n  if ( PluggableMap ) Map.__proto__ = PluggableMap;\n  Map.prototype = Object.create( PluggableMap && PluggableMap.prototype );\n  Map.prototype.constructor = Map;\n\n  Map.prototype.createRenderer = function createRenderer () {\n    var renderer = new CanvasMapRenderer(this);\n    renderer.registerLayerRenderers([\n      CanvasImageLayerRenderer,\n      CanvasTileLayerRenderer,\n      CanvasVectorLayerRenderer,\n      CanvasVectorTileLayerRenderer\n    ]);\n    return renderer;\n  };\n\n  return Map;\n}(PluggableMap));\n\n\nexport default Map;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=OverlayPositioning.js.map","/**\n * @module ol/Overlay\n */\nimport MapEventType from './MapEventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {removeNode, removeChildren, outerWidth, outerHeight} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {containsExtent} from './extent.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array.<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {module:ol/coordinate~Coordinate} [position] The overlay position\n * in map projection.\n * @property {module:ol/OverlayPositioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {boolean} [autoPan=false] If set to `true` the map is panned when\n * calling `setPosition`, so that the overlay is entirely visible in the current\n * viewport.\n * @property {module:ol/Overlay~PanOptions} [autoPanAnimation] The\n * animation options used to pan the overlay into view. This animation is only\n * used when `autoPan` is enabled. A `duration` and `easing` may be provided to\n * customize the animation.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n\n\n/**\n * @enum {string}\n * @protected\n */\nvar Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning'\n};\n\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nvar Overlay = (function (BaseObject) {\n  function Overlay(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {module:ol/Overlay~Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst = options.insertFirst !== undefined ?\n      options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('DIV');\n    this.element.className = options.className !== undefined ?\n      options.className : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.autoPan = options.autoPan !== undefined ? options.autoPan : false;\n\n    /**\n     * @protected\n     * @type {module:ol/Overlay~PanOptions}\n     */\n    this.autoPanAnimation = options.autoPanAnimation || /** @type {module:ol/Overlay~PanOptions} */ ({});\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.autoPanMargin = options.autoPanMargin !== undefined ?\n      options.autoPanMargin : 20;\n\n    /**\n     * @protected\n     * @type {{bottom_: string,\n     *         left_: string,\n     *         right_: string,\n     *         top_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      bottom_: '',\n      left_: '',\n      right_: '',\n      top_: '',\n      visible: true\n    };\n\n    /**\n     * @protected\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    listen(\n      this, getChangeEventType(Property.ELEMENT),\n      this.handleElementChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.MAP),\n      this.handleMapChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.OFFSET),\n      this.handleOffsetChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.POSITION),\n      this.handlePositionChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.POSITIONING),\n      this.handlePositioningChanged, this);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning !== undefined ?\n      /** @type {module:ol/OverlayPositioning} */ (options.positioning) :\n      OverlayPositioning.TOP_LEFT);\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n\n  }\n\n  if ( BaseObject ) Overlay.__proto__ = BaseObject;\n  Overlay.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Overlay.prototype.constructor = Overlay;\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getElement = function getElement () {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  };\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  Overlay.prototype.getId = function getId () {\n    return this.id;\n  };\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {module:ol/PluggableMap|undefined} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getMap = function getMap () {\n    return (\n      /** @type {module:ol/PluggableMap|undefined} */ (this.get(Property.MAP))\n    );\n  };\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array.<number>} The offset.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getOffset = function getOffset () {\n    return /** @type {Array.<number>} */ (this.get(Property.OFFSET));\n  };\n\n  /**\n   * Get the current position of this overlay.\n   * @return {module:ol/coordinate~Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getPosition = function getPosition () {\n    return (\n      /** @type {module:ol/coordinate~Coordinate|undefined} */ (this.get(Property.POSITION))\n    );\n  };\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {module:ol/OverlayPositioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getPositioning = function getPositioning () {\n    return (\n      /** @type {module:ol/OverlayPositioning} */ (this.get(Property.POSITIONING))\n    );\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleElementChanged = function handleElementChanged () {\n    removeChildren(this.element);\n    var element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleMapChanged = function handleMapChanged () {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    var map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(map,\n        MapEventType.POSTRENDER, this.render, this);\n      this.updatePixelPosition();\n      var container = this.stopEvent ?\n        map.getOverlayContainerStopEvent() : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.render = function render () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleOffsetChanged = function handleOffsetChanged () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handlePositionChanged = function handlePositionChanged () {\n    this.updatePixelPosition();\n    if (this.get(Property.POSITION) && this.autoPan) {\n      this.panIntoView();\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handlePositioningChanged = function handlePositioningChanged () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setElement = function setElement (element) {\n    this.set(Property.ELEMENT, element);\n  };\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {module:ol/PluggableMap|undefined} map The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setMap = function setMap (map) {\n    this.set(Property.MAP, map);\n  };\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array.<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setOffset = function setOffset (offset) {\n    this.set(Property.OFFSET, offset);\n  };\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {module:ol/coordinate~Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setPosition = function setPosition (position) {\n    this.set(Property.POSITION, position);\n  };\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @protected\n   */\n  Overlay.prototype.panIntoView = function panIntoView () {\n    var map = this.getMap();\n\n    if (!map || !map.getTargetElement()) {\n      return;\n    }\n\n    var mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    var element = this.getElement();\n    var overlayRect = this.getRect(element, [outerWidth(element), outerHeight(element)]);\n\n    var margin = this.autoPanMargin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      var offsetLeft = overlayRect[0] - mapRect[0];\n      var offsetRight = mapRect[2] - overlayRect[2];\n      var offsetTop = overlayRect[1] - mapRect[1];\n      var offsetBottom = mapRect[3] - overlayRect[3];\n\n      var delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - margin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + margin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - margin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + margin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        var center = /** @type {module:ol/coordinate~Coordinate} */ (map.getView().getCenter());\n        var centerPx = map.getPixelFromCoordinate(center);\n        var newCenterPx = [\n          centerPx[0] + delta[0],\n          centerPx[1] + delta[1]\n        ];\n\n        map.getView().animate({\n          center: map.getCoordinateFromPixel(newCenterPx),\n          duration: this.autoPanAnimation.duration,\n          easing: this.autoPanAnimation.easing\n        });\n      }\n    }\n  };\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement|undefined} element The element.\n   * @param {module:ol/size~Size|undefined} size The size of the element.\n   * @return {module:ol/extent~Extent} The extent.\n   * @protected\n   */\n  Overlay.prototype.getRect = function getRect (element, size) {\n    var box = element.getBoundingClientRect();\n    var offsetX = box.left + window.pageXOffset;\n    var offsetY = box.top + window.pageYOffset;\n    return [\n      offsetX,\n      offsetY,\n      offsetX + size[0],\n      offsetY + size[1]\n    ];\n  };\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {module:ol/OverlayPositioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setPositioning = function setPositioning (positioning) {\n    this.set(Property.POSITIONING, positioning);\n  };\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  Overlay.prototype.setVisible = function setVisible (visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  };\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  Overlay.prototype.updatePixelPosition = function updatePixelPosition () {\n    var map = this.getMap();\n    var position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    var pixel = map.getPixelFromCoordinate(position);\n    var mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  };\n\n  /**\n   * @param {module:ol/pixel~Pixel} pixel The pixel location.\n   * @param {module:ol/size~Size|undefined} mapSize The map size.\n   * @protected\n   */\n  Overlay.prototype.updateRenderedPosition = function updateRenderedPosition (pixel, mapSize) {\n    var style = this.element.style;\n    var offset = this.getOffset();\n\n    var positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    var offsetX = offset[0];\n    var offsetY = offset[1];\n    if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\n        positioning == OverlayPositioning.CENTER_RIGHT ||\n        positioning == OverlayPositioning.TOP_RIGHT) {\n      if (this.rendered.left_ !== '') {\n        this.rendered.left_ = style.left = '';\n      }\n      var right = Math.round(mapSize[0] - pixel[0] - offsetX) + 'px';\n      if (this.rendered.right_ != right) {\n        this.rendered.right_ = style.right = right;\n      }\n    } else {\n      if (this.rendered.right_ !== '') {\n        this.rendered.right_ = style.right = '';\n      }\n      if (positioning == OverlayPositioning.BOTTOM_CENTER ||\n          positioning == OverlayPositioning.CENTER_CENTER ||\n          positioning == OverlayPositioning.TOP_CENTER) {\n        offsetX -= this.element.offsetWidth / 2;\n      }\n      var left = Math.round(pixel[0] + offsetX) + 'px';\n      if (this.rendered.left_ != left) {\n        this.rendered.left_ = style.left = left;\n      }\n    }\n    if (positioning == OverlayPositioning.BOTTOM_LEFT ||\n        positioning == OverlayPositioning.BOTTOM_CENTER ||\n        positioning == OverlayPositioning.BOTTOM_RIGHT) {\n      if (this.rendered.top_ !== '') {\n        this.rendered.top_ = style.top = '';\n      }\n      var bottom = Math.round(mapSize[1] - pixel[1] - offsetY) + 'px';\n      if (this.rendered.bottom_ != bottom) {\n        this.rendered.bottom_ = style.bottom = bottom;\n      }\n    } else {\n      if (this.rendered.bottom_ !== '') {\n        this.rendered.bottom_ = style.bottom = '';\n      }\n      if (positioning == OverlayPositioning.CENTER_LEFT ||\n          positioning == OverlayPositioning.CENTER_CENTER ||\n          positioning == OverlayPositioning.CENTER_RIGHT) {\n        offsetY -= this.element.offsetHeight / 2;\n      }\n      var top = Math.round(pixel[1] + offsetY) + 'px';\n      if (this.rendered.top_ != top) {\n        this.rendered.top_ = style.top = top;\n      }\n    }\n  };\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {module:ol/Overlay~Options} overlay options\n   */\n  Overlay.prototype.getOptions = function getOptions () {\n    return this.options;\n  };\n\n  return Overlay;\n}(BaseObject));\n\n\nexport default Overlay;\n\n//# sourceMappingURL=Overlay.js.map","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  FRACTION: 'fraction',\n  PIXELS: 'pixels'\n};\n\n//# sourceMappingURL=IconAnchorUnits.js.map","/**\n * @module ol/style/IconImage\n */\n\nimport {createCanvasContext2D} from '../dom.js';\nimport {listenOnce, unlistenByKey} from '../events.js';\nimport EventTarget from '../events/EventTarget.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\n\nvar IconImage = (function (EventTarget) {\n  function IconImage(image, src, size, crossOrigin, imageState, color) {\n\n    EventTarget.call(this);\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = color ?\n      /** @type {HTMLCanvasElement} */ (document.createElement('CANVAS')) :\n      null;\n\n    /**\n     * @private\n     * @type {module:ol/color~Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/ImageState}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.tainting_ = false;\n    if (this.imageState_ == ImageState.LOADED) {\n      this.determineTainting_();\n    }\n\n  }\n\n  if ( EventTarget ) IconImage.__proto__ = EventTarget;\n  IconImage.prototype = Object.create( EventTarget && EventTarget.prototype );\n  IconImage.prototype.constructor = IconImage;\n\n  /**\n   * @private\n   */\n  IconImage.prototype.determineTainting_ = function determineTainting_ () {\n    var context = createCanvasContext2D(1, 1);\n    try {\n      context.drawImage(this.image_, 0, 0);\n      context.getImageData(0, 0, 1, 1);\n    } catch (e) {\n      this.tainting_ = true;\n    }\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.dispatchChangeEvent_ = function dispatchChangeEvent_ () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.handleImageError_ = function handleImageError_ () {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    }\n    this.size_ = [this.image_.width, this.image_.height];\n    this.unlistenImage_();\n    this.determineTainting_();\n    this.replaceColor_();\n    this.dispatchChangeEvent_();\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  IconImage.prototype.getImage = function getImage (pixelRatio) {\n    return this.canvas_ ? this.canvas_ : this.image_;\n  };\n\n  /**\n   * @return {module:ol/ImageState} Image state.\n   */\n  IconImage.prototype.getImageState = function getImageState () {\n    return this.imageState_;\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  IconImage.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    if (!this.hitDetectionImage_) {\n      if (this.tainting_) {\n        var width = this.size_[0];\n        var height = this.size_[1];\n        var context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  };\n\n  /**\n   * @return {module:ol/size~Size} Image size.\n   */\n  IconImage.prototype.getSize = function getSize () {\n    return this.size_;\n  };\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  IconImage.prototype.getSrc = function getSrc () {\n    return this.src_;\n  };\n\n  /**\n   * Load not yet loaded URI.\n   */\n  IconImage.prototype.load = function load () {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      try {\n        this.image_.src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.replaceColor_ = function replaceColor_ () {\n    if (this.tainting_ || this.color_ === null) {\n      return;\n    }\n\n    this.canvas_.width = this.image_.width;\n    this.canvas_.height = this.image_.height;\n\n    var ctx = this.canvas_.getContext('2d');\n    ctx.drawImage(this.image_, 0, 0);\n\n    var imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\n    var data = imgData.data;\n    var r = this.color_[0] / 255.0;\n    var g = this.color_[1] / 255.0;\n    var b = this.color_[2] / 255.0;\n\n    for (var i = 0, ii = data.length; i < ii; i += 4) {\n      data[i] *= r;\n      data[i + 1] *= g;\n      data[i + 2] *= b;\n    }\n    ctx.putImageData(imgData, 0, 0);\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  IconImage.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return IconImage;\n}(EventTarget));\n\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {module:ol/size~Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/ImageState} imageState Image state.\n * @param {module:ol/color~Color} color Color.\n * @return {module:ol/style/IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  var iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\n\nexport default IconImage;\n\n//# sourceMappingURL=IconImage.js.map","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=IconOrigin.js.map","/**\n * @module ol/style/Icon\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport {get as getIconImage} from '../style/IconImage.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport ImageStyle from '../style/Image.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array.<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {module:ol/style/IconOrigin} [anchorOrigin] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {module:ol/style/IconAnchorUnits} [anchorXUnits] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels. Default is `'fraction'`.\n * @property {module:ol/style/IconAnchorUnits} [anchorYUnits] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels. Default is `'fraction'`.\n * @property {module:ol/color~Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you are using the WebGL renderer or if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array.<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {module:ol/style/IconOrigin} [offsetOrigin] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [scale=1] Scale.\n * @property {boolean} [snapToPixel=true] If `true` integral numbers of pixels are used as the X and Y pixel coordinate\n * when drawing the icon in the output canvas. If `false` fractional numbers may be used. Using `true` allows for\n * \"sharp\" rendering (no blur), while using `false` allows for \"accurate\" rendering. Note that accuracy is important if\n * the icon's position is animated. Without it, the icon may jitter noticeably.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {module:ol/size~Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {module:ol/size~Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = (function (ImageStyle) {\n  function Icon(opt_options) {\n    var options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    var opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    var rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number}\n     */\n    var scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    var rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    /**\n     * @type {boolean}\n     */\n    var snapToPixel = options.snapToPixel !== undefined ?\n      options.snapToPixel : true;\n\n    ImageStyle.call(this, {\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      snapToPixel: snapToPixel,\n      rotateWithView: rotateWithView\n    });\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/style/IconOrigin}\n     */\n    this.anchorOrigin_ = options.anchorOrigin !== undefined ?\n      options.anchorOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {module:ol/style/IconAnchorUnits}\n     */\n    this.anchorXUnits_ = options.anchorXUnits !== undefined ?\n      options.anchorXUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {module:ol/style/IconAnchorUnits}\n     */\n    this.anchorYUnits_ = options.anchorYUnits !== undefined ?\n      options.anchorYUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    var image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {module:ol/size~Size}\n     */\n    var imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    var src = options.src;\n\n    assert(!(src !== undefined && image),\n      4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize),\n      5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = image.src || getUid(image).toString();\n    }\n    assert(src !== undefined && src.length > 0,\n      6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {module:ol/ImageState}\n     */\n    var imageState = options.src !== undefined ?\n      ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {module:ol/color~Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {module:ol/style/IconImage}\n     */\n    this.iconImage_ = getIconImage(\n      image, /** @type {string} */ (src), imgSize, this.crossOrigin_, imageState, this.color_);\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n\n    /**\n     * @private\n     * @type {module:ol/style/IconOrigin}\n     */\n    this.offsetOrigin_ = options.offsetOrigin !== undefined ?\n      options.offsetOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n  }\n\n  if ( ImageStyle ) Icon.__proto__ = ImageStyle;\n  Icon.prototype = Object.create( ImageStyle && ImageStyle.prototype );\n  Icon.prototype.constructor = Icon;\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {module:ol/style/Icon} The cloned style.\n   * @api\n   */\n  Icon.prototype.clone = function clone () {\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color: (this.color_ && this.color_.slice) ? this.color_.slice() : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: this.getScale(),\n      snapToPixel: this.getSnapToPixel(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView()\n    });\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getAnchor = function getAnchor () {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    var anchor = this.anchor_;\n    var size = this.getSize();\n    if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n        this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  };\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array.<number>} anchor Anchor.\n   * @api\n   */\n  Icon.prototype.setAnchor = function setAnchor (anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  };\n\n  /**\n   * Get the icon color.\n   * @return {module:ol/color~Color} Color.\n   * @api\n   */\n  Icon.prototype.getColor = function getColor () {\n    return this.color_;\n  };\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @override\n   * @api\n   */\n  Icon.prototype.getImage = function getImage (pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getImageSize = function getImageSize () {\n    return this.iconImage_.getSize();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n    return this.getImageSize();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getImageState = function getImageState () {\n    return this.iconImage_.getImageState();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    return this.iconImage_.getHitDetectionImage(pixelRatio);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getOrigin = function getOrigin () {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    var offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      var size = this.getSize();\n      var iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  };\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  Icon.prototype.getSrc = function getSrc () {\n    return this.iconImage_.getSrc();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getSize = function getSize () {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n    return listen(this.iconImage_, EventType.CHANGE,\n      listener, thisArg);\n  };\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @override\n   * @api\n   */\n  Icon.prototype.load = function load () {\n    this.iconImage_.load();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {\n    unlisten(this.iconImage_, EventType.CHANGE,\n      listener, thisArg);\n  };\n\n  return Icon;\n}(ImageStyle));\n\n\nexport default Icon;\n\n//# sourceMappingURL=Icon.js.map","/**\n * @module ol/layer/Heatmap\n */\nimport {listen} from '../events.js';\nimport {getChangeEventType} from '../Object.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport Icon from '../style/Icon.js';\nimport Style from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array.<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {number} [shadow=250] Shadow size in pixels.\n * @property {string|function(module:ol/Feature):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {module:ol/layer/VectorRenderType|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {module:ol/source/Vector} [source] Source.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius'\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nvar DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires module:ol/render/Event~RenderEvent\n * @api\n */\nvar Heatmap = (function (VectorLayer) {\n  function Heatmap(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.gradient;\n    delete baseOptions.radius;\n    delete baseOptions.blur;\n    delete baseOptions.shadow;\n    delete baseOptions.weight;\n    VectorLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {Uint8ClampedArray}\n     */\n    this.gradient_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.shadow_ = options.shadow !== undefined ? options.shadow : 250;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.circleImage_ = undefined;\n\n    /**\n     * @private\n     * @type {Array.<Array.<module:ol/style/Style>>}\n     */\n    this.styleCache_ = null;\n\n    listen(this,\n      getChangeEventType(Property.GRADIENT),\n      this.handleGradientChanged_, this);\n\n    this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n    this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n    this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n    listen(this,\n      getChangeEventType(Property.BLUR),\n      this.handleStyleChanged_, this);\n    listen(this,\n      getChangeEventType(Property.RADIUS),\n      this.handleStyleChanged_, this);\n\n    this.handleStyleChanged_();\n\n    var weight = options.weight ? options.weight : 'weight';\n    var weightFunction;\n    if (typeof weight === 'string') {\n      weightFunction = function(feature) {\n        return feature.get(weight);\n      };\n    } else {\n      weightFunction = weight;\n    }\n\n    this.setStyle(function(feature, resolution) {\n      var weight = weightFunction(feature);\n      var opacity = weight !== undefined ? clamp(weight, 0, 1) : 1;\n      // cast to 8 bits\n      var index = (255 * opacity) | 0;\n      var style = this.styleCache_[index];\n      if (!style) {\n        style = [\n          new Style({\n            image: new Icon({\n              opacity: opacity,\n              src: this.circleImage_\n            })\n          })\n        ];\n        this.styleCache_[index] = style;\n      }\n      return style;\n    }.bind(this));\n\n    // For performance reasons, don't sort the features before rendering.\n    // The render order is not relevant for a heatmap representation.\n    this.setRenderOrder(null);\n\n    listen(this, RenderEventType.RENDER, this.handleRender_, this);\n  }\n\n  if ( VectorLayer ) Heatmap.__proto__ = VectorLayer;\n  Heatmap.prototype = Object.create( VectorLayer && VectorLayer.prototype );\n  Heatmap.prototype.constructor = Heatmap;\n\n  /**\n   * @return {string} Data URL for a circle.\n   * @private\n   */\n  Heatmap.prototype.createCircle_ = function createCircle_ () {\n    var radius = this.getRadius();\n    var blur = this.getBlur();\n    var halfSize = radius + blur + 1;\n    var size = 2 * halfSize;\n    var context = createCanvasContext2D(size, size);\n    context.shadowOffsetX = context.shadowOffsetY = this.shadow_;\n    context.shadowBlur = blur;\n    context.shadowColor = '#000';\n    context.beginPath();\n    var center = halfSize - this.shadow_;\n    context.arc(center, center, radius, 0, Math.PI * 2, true);\n    context.fill();\n    return context.canvas.toDataURL();\n  };\n\n  /**\n   * Return the blur size in pixels.\n   * @return {number} Blur size in pixels.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.getBlur = function getBlur () {\n    return /** @type {number} */ (this.get(Property.BLUR));\n  };\n\n  /**\n   * Return the gradient colors as array of strings.\n   * @return {Array.<string>} Colors.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.getGradient = function getGradient () {\n    return /** @type {Array.<string>} */ (this.get(Property.GRADIENT));\n  };\n\n  /**\n   * Return the size of the radius in pixels.\n   * @return {number} Radius size in pixel.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.getRadius = function getRadius () {\n    return /** @type {number} */ (this.get(Property.RADIUS));\n  };\n\n  /**\n   * @private\n   */\n  Heatmap.prototype.handleGradientChanged_ = function handleGradientChanged_ () {\n    this.gradient_ = createGradient(this.getGradient());\n  };\n\n  /**\n   * @private\n   */\n  Heatmap.prototype.handleStyleChanged_ = function handleStyleChanged_ () {\n    this.circleImage_ = this.createCircle_();\n    this.styleCache_ = new Array(256);\n    this.changed();\n  };\n\n  /**\n   * @param {module:ol/render/Event} event Post compose event\n   * @private\n   */\n  Heatmap.prototype.handleRender_ = function handleRender_ (event) {\n    var this$1 = this;\n\n    var context = event.context;\n    var canvas = context.canvas;\n    var image = context.getImageData(0, 0, canvas.width, canvas.height);\n    var view8 = image.data;\n    for (var i = 0, ii = view8.length; i < ii; i += 4) {\n      var alpha = view8[i + 3] * 4;\n      if (alpha) {\n        view8[i] = this$1.gradient_[alpha];\n        view8[i + 1] = this$1.gradient_[alpha + 1];\n        view8[i + 2] = this$1.gradient_[alpha + 2];\n      }\n    }\n    context.putImageData(image, 0, 0);\n  };\n\n  /**\n   * Set the blur size in pixels.\n   * @param {number} blur Blur size in pixels.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.setBlur = function setBlur (blur) {\n    this.set(Property.BLUR, blur);\n  };\n\n  /**\n   * Set the gradient colors as array of strings.\n   * @param {Array.<string>} colors Gradient.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.setGradient = function setGradient (colors) {\n    this.set(Property.GRADIENT, colors);\n  };\n\n  /**\n   * Set the size of the radius in pixels.\n   * @param {number} radius Radius size in pixel.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.setRadius = function setRadius (radius) {\n    this.set(Property.RADIUS, radius);\n  };\n\n  return Heatmap;\n}(VectorLayer));\n\n\n/**\n * @param {Array.<string>} colors A list of colored.\n * @return {Uint8ClampedArray} An array.\n */\nfunction createGradient(colors) {\n  var width = 1;\n  var height = 256;\n  var context = createCanvasContext2D(width, height);\n\n  var gradient = context.createLinearGradient(0, 0, width, height);\n  var step = 1 / (colors.length - 1);\n  for (var i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.getImageData(0, 0, width, height).data;\n}\n\n\nexport default Heatmap;\n\n//# sourceMappingURL=Heatmap.js.map","/**\n * @module ol/layer/Image\n */\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {module:ol/source/Image} [source] Source for this layer.\n */\n\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires module:ol/render/Event~RenderEvent\n * @api\n */\nvar ImageLayer = (function (Layer) {\n  function ImageLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n    Layer.call(this, options);\n\n    /**\n     * The layer type.\n     * @protected\n     * @type {module:ol/LayerType}\n     */\n    this.type = LayerType.IMAGE;\n\n  }\n\n  if ( Layer ) ImageLayer.__proto__ = Layer;\n  ImageLayer.prototype = Object.create( Layer && Layer.prototype );\n  ImageLayer.prototype.constructor = ImageLayer;\n\n  return ImageLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Image source} of the image layer.\n * @function\n * @return {module:ol/source/Image} Source.\n * @api\n */\nImageLayer.prototype.getSource;\nexport default ImageLayer;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n\n//# sourceMappingURL=TileProperty.js.map","/**\n * @module ol/layer/Tile\n */\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\nimport TileProperty from '../layer/TileProperty.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {module:ol/source/Tile} [source] Source for this layer.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = (function (Layer) {\n  function TileLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    Layer.call(this, baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {module:ol/LayerType}\n    */\n    this.type = LayerType.TILE;\n\n  }\n\n  if ( Layer ) TileLayer.__proto__ = Layer;\n  TileLayer.prototype = Object.create( Layer && Layer.prototype );\n  TileLayer.prototype.constructor = TileLayer;\n\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getPreload = function getPreload () {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  };\n\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setPreload = function setPreload (preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  };\n\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getUseInterimTilesOnError = function getUseInterimTilesOnError () {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  };\n\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setUseInterimTilesOnError = function setUseInterimTilesOnError (useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  };\n\n  return TileLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Tile tilesource} of the layer.\n * @function\n * @return {module:ol/source/Tile} Source.\n * @api\n */\nTileLayer.prototype.getSource;\n\n\nexport default TileLayer;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/layer/VectorTile\n */\nimport LayerType from '../LayerType.js';\nimport {assert} from '../asserts.js';\nimport TileProperty from '../layer/TileProperty.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorTileRenderType from '../layer/VectorTileRenderType.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport var RenderType = {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/render~OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {module:ol/layer/VectorTileRenderType|string} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but point symbols and texts\n *    are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance than the other options.\n *\n * When `declutter` is set to `true`, `'hybrid'` will be used instead of `'image'`.\n * @property {module:ol/source/VectorTile} [source] Source.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority. When set to `true`, a `renderMode` of `'image'` will be overridden with\n * `'hybrid'`.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {module:ol/render~OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created.\n * @property {(module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction)} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {module:ol/layer/VectorTile~Options=} opt_options Options.\n * @api\n */\nvar VectorTileLayer = (function (VectorLayer) {\n  function VectorTileLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var renderMode = options.renderMode || VectorTileRenderType.HYBRID;\n    assert(renderMode == undefined ||\n       renderMode == VectorTileRenderType.IMAGE ||\n       renderMode == VectorTileRenderType.HYBRID ||\n       renderMode == VectorTileRenderType.VECTOR,\n    28); // `renderMode` must be `'image'`, `'hybrid'` or `'vector'`\n    if (options.declutter && renderMode == VectorTileRenderType.IMAGE) {\n      renderMode = VectorTileRenderType.HYBRID;\n    }\n    options.renderMode = renderMode;\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    VectorLayer.call(this, baseOptions);\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {module:ol/LayerType}\n    */\n    this.type = LayerType.VECTOR_TILE;\n\n  }\n\n  if ( VectorLayer ) VectorTileLayer.__proto__ = VectorLayer;\n  VectorTileLayer.prototype = Object.create( VectorLayer && VectorLayer.prototype );\n  VectorTileLayer.prototype.constructor = VectorTileLayer;\n\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  VectorTileLayer.prototype.getPreload = function getPreload () {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  };\n\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  VectorTileLayer.prototype.getUseInterimTilesOnError = function getUseInterimTilesOnError () {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  };\n\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  VectorTileLayer.prototype.setPreload = function setPreload (preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  };\n\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  VectorTileLayer.prototype.setUseInterimTilesOnError = function setUseInterimTilesOnError (useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  };\n\n  return VectorTileLayer;\n}(VectorLayer));\n\n\n/**\n * Return the associated {@link module:ol/source/VectorTile vectortilesource} of the layer.\n * @function\n * @return {module:ol/source/VectorTile} Source.\n * @api\n */\nVectorTileLayer.prototype.getSource;\nexport default VectorTileLayer;\n\n//# sourceMappingURL=VectorTile.js.map","\n/**\n * @module ol/layer\n */\n\nexport {default as Group} from './layer/Group.js';\nexport {default as Heatmap} from './layer/Heatmap.js';\nexport {default as Image} from './layer/Image.js';\nexport {default as Layer} from './layer/Layer.js';\nexport {default as Tile} from './layer/Tile.js';\nexport {default as Vector} from './layer/Vector.js';\nexport {default as VectorTile} from './layer/VectorTile.js';\n\n//# sourceMappingURL=layer.js.map","/**\n * @module ol/tilecoord\n */\n\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z`, `x`, and `y`. `z` is the zoom level.\n * @typedef {Array.<number>} TileCoord\n * @api\n */\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Tile coordinate.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n\n/**\n * Get the key for a tile coord.\n * @param {module:ol/tilecoord~TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {module:ol/tilecoord~TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  var z = tileCoord[0];\n  var digits = new Array(z);\n  var mask = 1 << (z - 1);\n  var i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {!module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  var z = tileCoord[0];\n  var x = tileCoord[1];\n  var y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  var extent = tileGrid.getExtent();\n  var tileRange;\n  if (!extent) {\n    tileRange = tileGrid.getFullTileRange(z);\n  } else {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  }\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n\n//# sourceMappingURL=tilecoord.js.map","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n\n/**\n * @param {string} template Template.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  var zRegEx = /\\{z\\}/g;\n  var xRegEx = /\\{x\\}/g;\n  var yRegEx = /\\{y\\}/g;\n  var dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, function() {\n            var y = -tileCoord[2] - 1;\n            return y.toString();\n          })\n          .replace(dashYRegEx, function() {\n            var z = tileCoord[0];\n            var range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            var y = range.getHeight() + tileCoord[2];\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n\n/**\n * @param {Array.<string>} templates Templates.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  var len = templates.length;\n  var tileUrlFunctions = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n\n/**\n * @param {Array.<module:ol/Tile~UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var h = tileCoordHash(tileCoord);\n        var index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n\n/**\n * @param {string} url URL.\n * @return {Array.<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  var urls = [];\n  var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    var startCharCode = match[1].charCodeAt(0);\n    var stopCharCode = match[2].charCodeAt(0);\n    var charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    var stop = parseInt(match[2], 10);\n    for (var i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n\n//# sourceMappingURL=tileurlfunction.js.map","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {function()=} opt_errback Callback on error.\n * @param {string=} opt_callbackParam Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, opt_errback, opt_callbackParam) {\n  var script = document.createElement('script');\n  var key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src = url + (url.indexOf('?') == -1 ? '?' : '&') +\n      (opt_callbackParam || 'callback') + '=' + key;\n  var timer = setTimeout(function() {\n    cleanup();\n    if (opt_errback) {\n      opt_errback();\n    }\n  }, 10000);\n  window[key] = function(data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.getElementsByTagName('head')[0].appendChild(script);\n}\n\n//# sourceMappingURL=net.js.map","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventTarget from './events/EventTarget.js';\nimport EventType from './events/EventType.js';\n\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments.\n *\n * @typedef {function(module:ol/Tile, string)} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(module:ol/tilecoord~TileCoord, number,\n *           module:ol/proj/Projection): (string|undefined)} UrlFunction\n * @api\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n  */\nvar Tile = (function (EventTarget) {\n  function Tile(tileCoord, state, opt_options) {\n    EventTarget.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @type {module:ol/tilecoord~TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {module:ol/TileState}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {module:ol/Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ = options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object.<number, number>}\n     */\n    this.transitionStarts_ = {};\n\n  }\n\n  if ( EventTarget ) Tile.__proto__ = EventTarget;\n  Tile.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Tile.prototype.constructor = Tile;\n\n  /**\n   * @protected\n   */\n  Tile.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {string} Key.\n   */\n  Tile.prototype.getKey = function getKey () {\n    return this.key + '/' + this.tileCoord;\n  };\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!module:ol/Tile} Best tile for rendering.\n   */\n  Tile.prototype.getInterimTile = function getInterimTile () {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    var tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  };\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  Tile.prototype.refreshInterimChain = function refreshInterimChain () {\n    if (!this.interimTile) {\n      return;\n    }\n\n    var tile = this.interimTile;\n    var prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  };\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {module:ol/tilecoord~TileCoord} The tile coordinate.\n   * @api\n   */\n  Tile.prototype.getTileCoord = function getTileCoord () {\n    return this.tileCoord;\n  };\n\n  /**\n   * @return {module:ol/TileState} State.\n   */\n  Tile.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * @param {module:ol/TileState} state State.\n   */\n  Tile.prototype.setState = function setState (state) {\n    this.state = state;\n    this.changed();\n  };\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  Tile.prototype.load = function load () {};\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {number} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  Tile.prototype.getAlpha = function getAlpha (id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    var start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    var delta = time - start + (1000 / 60); // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  };\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {number} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  Tile.prototype.inTransition = function inTransition (id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  };\n\n  /**\n   * Mark a transition as complete.\n   * @param {number} id An id for the renderer.\n   */\n  Tile.prototype.endTransition = function endTransition (id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  };\n\n  return Tile;\n}(EventTarget));\n\n\nexport default Tile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @typedef {function(new: module:ol/ImageTile, module:ol/tilecoord~TileCoord,\n * module:ol/TileState, string, ?string, module:ol/Tile~LoadFunction)} TileClass\n * @api\n */\n\nvar ImageTile = (function (Tile) {\n  function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n    Tile.call(this, tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/Tile~LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n  }\n\n  if ( Tile ) ImageTile.__proto__ = Tile;\n  ImageTile.prototype = Object.create( Tile && Tile.prototype );\n  ImageTile.prototype.constructor = ImageTile;\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenImage_();\n      this.image_ = getBlankImage();\n    }\n    if (this.interimTile) {\n      this.interimTile.dispose();\n    }\n    this.state = TileState.ABORT;\n    this.changed();\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  ImageTile.prototype.getImage = function getImage () {\n    return this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.getKey = function getKey () {\n    return this.src_;\n  };\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageError_ = function handleImageError_ () {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  };\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    if (this.image_.naturalWidth && this.image_.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  ImageTile.prototype.load = function load () {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      this.tileLoadFunction_(this, this.src_);\n    }\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return ImageTile;\n}(Tile));\n\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  var ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nvar TileCache = (function (LRUCache) {\n  function TileCache(opt_highWaterMark) {\n\n    LRUCache.call(this, opt_highWaterMark);\n\n  }\n\n  if ( LRUCache ) TileCache.__proto__ = LRUCache;\n  TileCache.prototype = Object.create( LRUCache && LRUCache.prototype );\n  TileCache.prototype.constructor = TileCache;\n\n  /**\n   * @param {!Object.<string, module:ol/TileRange>} usedTiles Used tiles.\n   */\n  TileCache.prototype.expireCache = function expireCache (usedTiles) {\n    var this$1 = this;\n\n    while (this.canExpireCache()) {\n      var tile = this$1.peekLast();\n      var zKey = tile.tileCoord[0].toString();\n      if (zKey in usedTiles && usedTiles[zKey].contains(tile.tileCoord)) {\n        break;\n      } else {\n        this$1.pop().dispose();\n      }\n    }\n  };\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  TileCache.prototype.pruneExceptNewestZ = function pruneExceptNewestZ () {\n    if (this.getCount() === 0) {\n      return;\n    }\n    var key = this.peekFirstKey();\n    var tileCoord = fromKey(key);\n    var z = tileCoord[0];\n    this.forEach(function(tile) {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.dispose();\n      }\n    }, this);\n  };\n\n  return TileCache;\n}(LRUCache));\n\n\nexport default TileCache;\n\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {module:ol/proj/Projection} sourceProj Source projection.\n * @param {module:ol/proj/Projection} targetProj Target projection.\n * @param {module:ol/coordinate~Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj,\n  targetCenter, targetResolution) {\n\n  var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n\n  var targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  var sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n        sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {module:ol/coordinate~Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n  var dX = x - centroidX;\n  var dY = y - centroidY;\n  var distance = Math.sqrt(dX * dX + dY * dY);\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {module:ol/extent~Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {module:ol/extent~Extent} targetExtent Target extent.\n * @param {module:ol/reproj/Triangulation} triangulation\n * Calculated triangulation.\n * @param {Array.<{extent: module:ol/extent~Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio,\n  sourceResolution, sourceExtent, targetResolution, targetExtent,\n  triangulation, sources, gutter, opt_renderEdges) {\n\n  var context = createCanvasContext2D(Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height));\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  var sourceDataExtent = createEmpty();\n  sources.forEach(function(src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  var canvasWidthInUnits = getWidth(sourceDataExtent);\n  var canvasHeightInUnits = getHeight(sourceDataExtent);\n  var stitchContext = createCanvasContext2D(\n    Math.round(pixelRatio * canvasWidthInUnits / sourceResolution),\n    Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n\n  var stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function(src, i, arr) {\n    var xPos = src.extent[0] - sourceDataExtent[0];\n    var yPos = -(src.extent[3] - sourceDataExtent[3]);\n    var srcWidth = getWidth(src.extent);\n    var srcHeight = getHeight(src.extent);\n\n    stitchContext.drawImage(\n      src.image,\n      gutter, gutter,\n      src.image.width - 2 * gutter, src.image.height - 2 * gutter,\n      xPos * stitchScale, yPos * stitchScale,\n      srcWidth * stitchScale, srcHeight * stitchScale);\n  });\n\n  var targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function(triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    var source = triangle.source;\n    var target = triangle.target;\n    var x0 = source[0][0], y0 = source[0][1];\n    var x1 = source[1][0], y1 = source[1][1];\n    var x2 = source[2][0], y2 = source[2][1];\n    var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n    var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n    var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n    var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n    var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n    var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    var sourceNumericalShiftX = x0;\n    var sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    var augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0]\n    ];\n    var affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n    var centroidX = (u0 + u1 + u2) / 3;\n    var centroidY = (v0 + v1 + v2) / 3;\n    var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n    var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n    var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n\n    context.moveTo(p1[0], p1[1]);\n    context.lineTo(p0[0], p0[1]);\n    context.lineTo(p2[0], p2[1]);\n    context.clip();\n\n    context.transform(\n      affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY);\n\n    context.scale(sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio);\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function(triangle, i, arr) {\n      var target = triangle.target;\n      var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport {boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight,\n  getTopLeft, getTopRight, getWidth, intersects} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {getTransform} from '../proj.js';\n\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array.<module:ol/coordinate~Coordinate>} source\n * @property {Array.<module:ol/coordinate~Coordinate>} target\n */\n\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n\n  /**\n   * @type {module:ol/proj/Projection}\n   * @private\n   */\n  this.sourceProj_ = sourceProj;\n\n  /**\n   * @type {module:ol/proj/Projection}\n   * @private\n   */\n  this.targetProj_ = targetProj;\n\n  /** @type {!Object.<string, module:ol/coordinate~Coordinate>} */\n  var transformInvCache = {};\n  var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} c A coordinate.\n   * @return {module:ol/coordinate~Coordinate} Transformed coordinate.\n   * @private\n   */\n  this.transformInv_ = function(c) {\n    var key = c[0] + '/' + c[1];\n    if (!transformInvCache[key]) {\n      transformInvCache[key] = transformInv(c);\n    }\n    return transformInvCache[key];\n  };\n\n  /**\n   * @type {module:ol/extent~Extent}\n   * @private\n   */\n  this.maxSourceExtent_ = maxSourceExtent;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n  /**\n   * @type {Array.<module:ol/reproj/Triangulation~Triangle>}\n   * @private\n   */\n  this.triangles_ = [];\n\n  /**\n   * Indicates that the triangulation crosses edge of the source projection.\n   * @type {boolean}\n   * @private\n   */\n  this.wrapsXInSource_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n    getWidth(this.sourceProj_.getExtent()) : null;\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n    getWidth(this.targetProj_.getExtent()) : null;\n\n  var destinationTopLeft = getTopLeft(targetExtent);\n  var destinationTopRight = getTopRight(targetExtent);\n  var destinationBottomRight = getBottomRight(targetExtent);\n  var destinationBottomLeft = getBottomLeft(targetExtent);\n  var sourceTopLeft = this.transformInv_(destinationTopLeft);\n  var sourceTopRight = this.transformInv_(destinationTopRight);\n  var sourceBottomRight = this.transformInv_(destinationBottomRight);\n  var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n  this.addQuad_(\n    destinationTopLeft, destinationTopRight,\n    destinationBottomRight, destinationBottomLeft,\n    sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\n    MAX_SUBDIVISION);\n\n  if (this.wrapsXInSource_) {\n    var leftBound = Infinity;\n    this.triangles_.forEach(function(triangle, i, arr) {\n      leftBound = Math.min(leftBound,\n        triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n    });\n\n    // Shift triangles to be as close to `leftBound` as possible\n    // (if the distance is more than `worldWidth / 2` it can be closer.\n    this.triangles_.forEach(function(triangle) {\n      if (Math.max(triangle.source[0][0], triangle.source[1][0],\n        triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\n        var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n          [triangle.source[1][0], triangle.source[1][1]],\n          [triangle.source[2][0], triangle.source[2][1]]];\n        if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[0][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[1][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[2][0] -= this.sourceWorldWidth_;\n        }\n\n        // Rarely (if the extent contains both the dateline and prime meridian)\n        // the shift can in turn break some triangles.\n        // Detect this here and don't shift in such cases.\n        var minX = Math.min(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        var maxX = Math.max(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n          triangle.source = newTriangle;\n        }\n      }\n    }.bind(this));\n  }\n\n  transformInvCache = {};\n};\n\n/**\n * Adds triangle to the triangulation.\n * @param {module:ol/coordinate~Coordinate} a The target a coordinate.\n * @param {module:ol/coordinate~Coordinate} b The target b coordinate.\n * @param {module:ol/coordinate~Coordinate} c The target c coordinate.\n * @param {module:ol/coordinate~Coordinate} aSrc The source a coordinate.\n * @param {module:ol/coordinate~Coordinate} bSrc The source b coordinate.\n * @param {module:ol/coordinate~Coordinate} cSrc The source c coordinate.\n * @private\n */\nTriangulation.prototype.addTriangle_ = function addTriangle_ (a, b, c, aSrc, bSrc, cSrc) {\n  this.triangles_.push({\n    source: [aSrc, bSrc, cSrc],\n    target: [a, b, c]\n  });\n};\n\n/**\n * Adds quad (points in clock-wise order) to the triangulation\n * (and reprojects the vertices) if valid.\n * Performs quad subdivision if needed to increase precision.\n *\n * @param {module:ol/coordinate~Coordinate} a The target a coordinate.\n * @param {module:ol/coordinate~Coordinate} b The target b coordinate.\n * @param {module:ol/coordinate~Coordinate} c The target c coordinate.\n * @param {module:ol/coordinate~Coordinate} d The target d coordinate.\n * @param {module:ol/coordinate~Coordinate} aSrc The source a coordinate.\n * @param {module:ol/coordinate~Coordinate} bSrc The source b coordinate.\n * @param {module:ol/coordinate~Coordinate} cSrc The source c coordinate.\n * @param {module:ol/coordinate~Coordinate} dSrc The source d coordinate.\n * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n * @private\n */\nTriangulation.prototype.addQuad_ = function addQuad_ (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n\n  var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n  var sourceCoverageX = this.sourceWorldWidth_ ?\n    getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n  var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n  // when the quad is wrapped in the source projection\n  // it covers most of the projection extent, but not fully\n  var wrapsX = this.sourceProj_.canWrapX() &&\n               sourceCoverageX > 0.5 && sourceCoverageX < 1;\n\n  var needsSubdivision = false;\n\n  if (maxSubdivision > 0) {\n    if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n      var targetQuadExtent = boundingExtent([a, b, c, d]);\n      var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n      needsSubdivision |=\n          targetCoverageX > MAX_TRIANGLE_WIDTH;\n    }\n    if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n      needsSubdivision |=\n          sourceCoverageX > MAX_TRIANGLE_WIDTH;\n    }\n  }\n\n  if (!needsSubdivision && this.maxSourceExtent_) {\n    if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n      // whole quad outside source projection extent -> ignore\n      return;\n    }\n  }\n\n  if (!needsSubdivision) {\n    if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n      if (maxSubdivision > 0) {\n        needsSubdivision = true;\n      } else {\n        return;\n      }\n    }\n  }\n\n  if (maxSubdivision > 0) {\n    if (!needsSubdivision) {\n      var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n      var centerSrc = this.transformInv_(center);\n\n      var dx;\n      if (wrapsX) {\n        var centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n             modulo(cSrc[0], sourceWorldWidth)) / 2;\n        dx = centerSrcEstimX -\n            modulo(centerSrc[0], sourceWorldWidth);\n      } else {\n        dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n      }\n      var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n      var centerSrcErrorSquared = dx * dx + dy * dy;\n      needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n    }\n    if (needsSubdivision) {\n      if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n        // split horizontally (top & bottom)\n        var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n        var bcSrc = this.transformInv_(bc);\n        var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n        var daSrc = this.transformInv_(da);\n\n        this.addQuad_(\n          a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n        this.addQuad_(\n          da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n      } else {\n        // split vertically (left & right)\n        var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n        var abSrc = this.transformInv_(ab);\n        var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n        var cdSrc = this.transformInv_(cd);\n\n        this.addQuad_(\n          a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n        this.addQuad_(\n          ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n      }\n      return;\n    }\n  }\n\n  if (wrapsX) {\n    if (!this.canWrapXInSource_) {\n      return;\n    }\n    this.wrapsXInSource_ = true;\n  }\n\n  this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n  this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n};\n\n/**\n * Calculates extent of the 'source' coordinates from all the triangles.\n *\n * @return {module:ol/extent~Extent} Calculated extent.\n */\nTriangulation.prototype.calculateSourceExtent = function calculateSourceExtent () {\n  var extent = createEmpty();\n\n  this.triangles_.forEach(function(triangle, i, arr) {\n    var src = triangle.source;\n    extendCoordinate(extent, src[0]);\n    extendCoordinate(extent, src[1]);\n    extendCoordinate(extent, src[2]);\n  });\n\n  return extent;\n};\n\n/**\n * @return {Array.<module:ol/reproj/Triangulation~Triangle>} Array of the calculated triangles.\n */\nTriangulation.prototype.getTriangles = function getTriangles () {\n  return this.triangles_;\n};\n\nexport default Triangulation;\n\n//# sourceMappingURL=Triangulation.js.map","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getArea, getCenter, getIntersection} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from '../reproj/Triangulation.js';\n\n\n/**\n * @typedef {function(number, number, number, number) : module:ol/Tile} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = (function (Tile) {\n  function ReprojTile(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges\n  ) {\n    var this$1 = this;\n\n    Tile.call(this, tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/tilegrid/TileGrid}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {module:ol/tilegrid/TileGrid}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {module:ol/tilecoord~TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array.<module:ol/Tile>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    var targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\n    var maxTargetExtent = this.targetTileGrid_.getExtent();\n    var maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    var limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    var targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]);\n\n    var targetCenter = getCenter(limitedTargetExtent);\n    var sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n      opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!module:ol/reproj/Triangulation}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    var sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n        sourceExtent[3] = clamp(\n          sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent, this.sourceZ_);\n\n      for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          var tile = getTileFunction(this$1.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this$1.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  if ( Tile ) ReprojTile.__proto__ = Tile;\n  ReprojTile.prototype = Object.create( Tile && Tile.prototype );\n  ReprojTile.prototype.constructor = ReprojTile;\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenSources_();\n    }\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  ReprojTile.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.reproject_ = function reproject_ () {\n    var sources = [];\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage()\n        });\n      }\n    }.bind(this));\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      var z = this.wrappedTileCoord_[0];\n      var size = this.targetTileGrid_.getTileSize(z);\n      var width = typeof size === 'number' ? size : size[0];\n      var height = typeof size === 'number' ? size : size[1];\n      var targetResolution = this.targetTileGrid_.getResolution(z);\n      var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n      var targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_);\n      this.canvas_ = renderReprojected(width, height, this.pixelRatio_,\n        sourceResolution, this.sourceTileGrid_.getExtent(),\n        targetResolution, targetExtent, this.triangulation_, sources,\n        this.gutter_, this.renderEdges_);\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.load = function load () {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      var leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          var sourceListenKey = listen(tile, EventType.CHANGE,\n            function(e) {\n              var state = tile.getState();\n              if (state == TileState.LOADED ||\n                    state == TileState.ERROR ||\n                    state == TileState.EMPTY) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            }, this);\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      }.bind(this));\n\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.unlistenSources_ = function unlistenSources_ () {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  };\n\n  return ReprojTile;\n}(Tile));\n\n\nexport default ReprojTile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport TileRange, {createOrUpdate as createOrUpdateTileRange} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\n\n\n/**\n * @private\n * @type {module:ol/tilecoord~TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/extent~Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {module:ol/coordinate~Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array.<module:ol/coordinate~Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array.<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array.<module:ol/size~Size>} [sizes] Sizes.\n * @property {number|module:ol/size~Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array.<module:ol/size~Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = function TileGrid(options) {\n  var this$1 = this;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n  /**\n   * @private\n   * @type {!Array.<number>}\n   */\n  this.resolutions_ = options.resolutions;\n  assert(isSorted(this.resolutions_, function(a, b) {\n    return b - a;\n  }, true), 17); // `resolutions` must be sorted in descending order\n\n\n  // check if we've got a consistent zoom factor and origin\n  var zoomFactor;\n  if (!options.origins) {\n    for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n      if (!zoomFactor) {\n        zoomFactor = this$1.resolutions_[i] / this$1.resolutions_[i + 1];\n      } else {\n        if (this$1.resolutions_[i] / this$1.resolutions_[i + 1] !== zoomFactor) {\n          zoomFactor = undefined;\n          break;\n        }\n      }\n    }\n  }\n\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zoomFactor_ = zoomFactor;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxZoom = this.resolutions_.length - 1;\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.origin_ = options.origin !== undefined ? options.origin : null;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/coordinate~Coordinate>}\n   */\n  this.origins_ = null;\n  if (options.origins !== undefined) {\n    this.origins_ = options.origins;\n    assert(this.origins_.length == this.resolutions_.length,\n      20); // Number of `origins` and `resolutions` must be equal\n  }\n\n  var extent = options.extent;\n\n  if (extent !== undefined &&\n      !this.origin_ && !this.origins_) {\n    this.origin_ = getTopLeft(extent);\n  }\n\n  assert(\n    (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n    18); // Either `origin` or `origins` must be configured, never both\n\n  /**\n   * @private\n   * @type {Array.<number|module:ol/size~Size>}\n   */\n  this.tileSizes_ = null;\n  if (options.tileSizes !== undefined) {\n    this.tileSizes_ = options.tileSizes;\n    assert(this.tileSizes_.length == this.resolutions_.length,\n      19); // Number of `tileSizes` and `resolutions` must be equal\n  }\n\n  /**\n   * @private\n   * @type {number|module:ol/size~Size}\n   */\n  this.tileSize_ = options.tileSize !== undefined ?\n    options.tileSize :\n    !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n  assert(\n    (!this.tileSize_ && this.tileSizes_) ||\n      (this.tileSize_ && !this.tileSizes_),\n    22); // Either `tileSize` or `tileSizes` must be configured, never both\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = extent !== undefined ? extent : null;\n\n\n  /**\n   * @private\n   * @type {Array.<module:ol/TileRange>}\n   */\n  this.fullTileRanges_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.tmpSize_ = [0, 0];\n\n  if (options.sizes !== undefined) {\n    this.fullTileRanges_ = options.sizes.map(function(size, z) {\n      var tileRange = new TileRange(\n        Math.min(0, size[0]), Math.max(size[0] - 1, -1),\n        Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n      return tileRange;\n    }, this);\n  } else if (extent) {\n    this.calculateTileRanges_(extent);\n  }\n\n};\n\n/**\n * Call a function with each tile coordinate for a given extent and zoom level.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} zoom Integer zoom level.\n * @param {function(module:ol/tilecoord~TileCoord)} callback Function called with each tile coordinate.\n * @api\n */\nTileGrid.prototype.forEachTileCoord = function forEachTileCoord (extent, zoom, callback) {\n  var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n  for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n    for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n      callback([zoom, i, j]);\n    }\n  }\n};\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {function(this: T, number, module:ol/TileRange): boolean} callback Callback.\n * @param {T=} opt_this The object to use as `this` in `callback`.\n * @param {module:ol/TileRange=} opt_tileRange Temporary module:ol/TileRange object.\n * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n * @return {boolean} Callback succeeded.\n * @template T\n */\nTileGrid.prototype.forEachTileCoordParentTileRange = function forEachTileCoordParentTileRange (tileCoord, callback, opt_this, opt_tileRange, opt_extent) {\n    var this$1 = this;\n\n  var tileRange, x, y;\n  var tileCoordExtent = null;\n  var z = tileCoord[0] - 1;\n  if (this.zoomFactor_ === 2) {\n    x = tileCoord[1];\n    y = tileCoord[2];\n  } else {\n    tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n  }\n  while (z >= this.minZoom) {\n    if (this$1.zoomFactor_ === 2) {\n      x = Math.floor(x / 2);\n      y = Math.floor(y / 2);\n      tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n    } else {\n      tileRange = this$1.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n    }\n    if (callback.call(opt_this, z, tileRange)) {\n      return true;\n    }\n    --z;\n  }\n  return false;\n};\n\n/**\n * Get the extent for this tile grid, if it was configured.\n * @return {module:ol/extent~Extent} Extent.\n */\nTileGrid.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the maximum zoom level for the grid.\n * @return {number} Max zoom.\n * @api\n */\nTileGrid.prototype.getMaxZoom = function getMaxZoom () {\n  return this.maxZoom;\n};\n\n/**\n * Get the minimum zoom level for the grid.\n * @return {number} Min zoom.\n * @api\n */\nTileGrid.prototype.getMinZoom = function getMinZoom () {\n  return this.minZoom;\n};\n\n/**\n * Get the origin for the grid at the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {module:ol/coordinate~Coordinate} Origin.\n * @api\n */\nTileGrid.prototype.getOrigin = function getOrigin (z) {\n  if (this.origin_) {\n    return this.origin_;\n  } else {\n    return this.origins_[z];\n  }\n};\n\n/**\n * Get the resolution for the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {number} Resolution.\n * @api\n */\nTileGrid.prototype.getResolution = function getResolution (z) {\n  return this.resolutions_[z];\n};\n\n/**\n * Get the list of resolutions for the tile grid.\n * @return {Array.<number>} Resolutions.\n * @api\n */\nTileGrid.prototype.getResolutions = function getResolutions () {\n  return this.resolutions_;\n};\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileRange=} opt_tileRange Temporary module:ol/TileRange object.\n * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n * @return {module:ol/TileRange} Tile range.\n */\nTileGrid.prototype.getTileCoordChildTileRange = function getTileCoordChildTileRange (tileCoord, opt_tileRange, opt_extent) {\n  if (tileCoord[0] < this.maxZoom) {\n    if (this.zoomFactor_ === 2) {\n      var minX = tileCoord[1] * 2;\n      var minY = tileCoord[2] * 2;\n      return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n    }\n    var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    return this.getTileRangeForExtentAndZ(\n      tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n  }\n  return null;\n};\n\n/**\n * Get the extent for a tile range.\n * @param {number} z Integer zoom level.\n * @param {module:ol/TileRange} tileRange Tile range.\n * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n * @return {module:ol/extent~Extent} Extent.\n */\nTileGrid.prototype.getTileRangeExtent = function getTileRangeExtent (z, tileRange, opt_extent) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n  var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n  var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n  var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n  var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get a tile range for the given extent and integer zoom level.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} z Integer zoom level.\n * @param {module:ol/TileRange=} opt_tileRange Temporary tile range object.\n * @return {module:ol/TileRange} Tile range.\n */\nTileGrid.prototype.getTileRangeForExtentAndZ = function getTileRangeForExtentAndZ (extent, z, opt_tileRange) {\n  var tileCoord = tmpTileCoord;\n  this.getTileCoordForXYAndZ_(extent[0], extent[1], z, false, tileCoord);\n  var minX = tileCoord[1];\n  var minY = tileCoord[2];\n  this.getTileCoordForXYAndZ_(extent[2], extent[3], z, true, tileCoord);\n  return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n};\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {module:ol/coordinate~Coordinate} Tile center.\n */\nTileGrid.prototype.getTileCoordCenter = function getTileCoordCenter (tileCoord) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  return [\n    origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n    origin[1] + (tileCoord[2] + 0.5) * tileSize[1] * resolution\n  ];\n};\n\n/**\n * Get the extent of a tile coordinate.\n *\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/extent~Extent=} opt_extent Temporary extent object.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nTileGrid.prototype.getTileCoordExtent = function getTileCoordExtent (tileCoord, opt_extent) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n  var minY = origin[1] + tileCoord[2] * tileSize[1] * resolution;\n  var maxX = minX + tileSize[0] * resolution;\n  var maxY = minY + tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get the tile coordinate for the given map coordinate and resolution.This\n * method considers that coordinates that intersect tile boundaries should be\n * assigned the higher tile coordinate.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Destination module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndResolution = function getTileCoordForCoordAndResolution (coordinate, resolution, opt_tileCoord) {\n  return this.getTileCoordForXYAndResolution_(\n    coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n};\n\n/**\n * Note that this method should not be called for resolutions that correspond\n * to an integer zoom level.Instead call the `getTileCoordForXYAndZ_` method.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} resolution Resolution (for a non-integer zoom level).\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Temporary module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndResolution_ = function getTileCoordForXYAndResolution_ (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n  var z = this.getZForResolution(resolution);\n  var scale = resolution / this.getResolution(z);\n  var origin = this.getOrigin(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = scale * xFromOrigin / tileSize[0];\n  var tileCoordY = scale * yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n * they should have separate implementations.This method is for integer zoom\n * levels.The other method should only be called for resolutions corresponding\n * to non-integer zoom levels.\n * @param {number} x Map x coordinate.\n * @param {number} y Map y coordinate.\n * @param {number} z Integer zoom level.\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Temporary module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndZ_ = function getTileCoordForXYAndZ_ (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = xFromOrigin / tileSize[0];\n  var tileCoordY = yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Get a tile coordinate given a map coordinate and zoom level.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} z Zoom level.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Destination module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndZ = function getTileCoordForCoordAndZ (coordinate, z, opt_tileCoord) {\n  return this.getTileCoordForXYAndZ_(\n    coordinate[0], coordinate[1], z, false, opt_tileCoord);\n};\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {number} Tile resolution.\n */\nTileGrid.prototype.getTileCoordResolution = function getTileCoordResolution (tileCoord) {\n  return this.resolutions_[tileCoord[0]];\n};\n\n/**\n * Get the tile size for a zoom level. The type of the return value matches the\n * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n * get an `module:ol/size~Size`, run the result through `module:ol/size~Size.toSize()`.\n * @param {number} z Z.\n * @return {number|module:ol/size~Size} Tile size.\n * @api\n */\nTileGrid.prototype.getTileSize = function getTileSize (z) {\n  if (this.tileSize_) {\n    return this.tileSize_;\n  } else {\n    return this.tileSizes_[z];\n  }\n};\n\n/**\n * @param {number} z Zoom level.\n * @return {module:ol/TileRange} Extent tile range for the specified zoom level.\n */\nTileGrid.prototype.getFullTileRange = function getFullTileRange (z) {\n  if (!this.fullTileRanges_) {\n    return null;\n  } else {\n    return this.fullTileRanges_[z];\n  }\n};\n\n/**\n * @param {number} resolution Resolution.\n * @param {number=} opt_direction If 0, the nearest resolution will be used.\n *   If 1, the nearest lower resolution will be used. If -1, the nearest\n *   higher resolution will be used. Default is 0.\n * @return {number} Z.\n * @api\n */\nTileGrid.prototype.getZForResolution = function getZForResolution (resolution, opt_direction) {\n  var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n  return clamp(z, this.minZoom, this.maxZoom);\n};\n\n/**\n * @param {!module:ol/extent~Extent} extent Extent for this tile grid.\n * @private\n */\nTileGrid.prototype.calculateTileRanges_ = function calculateTileRanges_ (extent) {\n    var this$1 = this;\n\n  var length = this.resolutions_.length;\n  var fullTileRanges = new Array(length);\n  for (var z = this.minZoom; z < length; ++z) {\n    fullTileRanges[z] = this$1.getTileRangeForExtentAndZ(extent, z);\n  }\n  this.fullTileRanges_ = fullTileRanges;\n};\n\n\nexport default TileGrid;\n\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {toSize} from './size.js';\nimport {containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth} from './extent.js';\nimport Corner from './extent/Corner.js';\nimport {assign} from './obj.js';\nimport {get as getProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/tilegrid/TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  var tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n\n/**\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  var z = tileCoord[0];\n  var center = tileGrid.getTileCoordCenter(tileCoord);\n  var projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    var worldWidth = getWidth(projectionExtent);\n    var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {module:ol/extent/Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!module:ol/tilegrid/TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize\n  });\n}\n\n\n/**\n * @typedef {Object} XYZOptions\n * @property {module:ol/extent~Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|module:ol/size~Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {module:ol/tilegrid~XYZOptions=} opt_options Tile grid options.\n * @return {!module:ol/tilegrid/TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  var options = /** @type {module:ol/tilegrid/TileGrid~Options} */ ({});\n  assign(options, opt_options !== undefined ?\n    opt_options : /** @type {module:ol/tilegrid~XYZOptions} */ ({}));\n  if (options.extent === undefined) {\n    options.extent = getProjection('EPSG:3857').getExtent();\n  }\n  options.resolutions = resolutionsFromExtent(\n    options.extent, options.maxZoom, options.tileSize);\n  delete options.maxZoom;\n\n  return new TileGrid(options);\n}\n\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array.<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n  var maxZoom = opt_maxZoom !== undefined ?\n    opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  var height = getHeight(extent);\n  var width = getWidth(extent);\n\n  var tileSize = toSize(opt_tileSize !== undefined ?\n    opt_tileSize : DEFAULT_TILE_SIZE);\n  var maxResolution = Math.max(\n    width / tileSize[0], height / tileSize[1]);\n\n  var length = maxZoom + 1;\n  var resolutions = new Array(length);\n  for (var z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n\n/**\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {module:ol/extent/Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!module:ol/tilegrid/TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n  var extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  var extent = projection.getExtent();\n  if (!extent) {\n    var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n\n//# sourceMappingURL=tilegrid.js.map","/**\n * @module ol/source/Tile\n */\n\nimport {UNDEFINED} from '../functions.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport {equivalent} from '../proj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport Source from '../source/Source.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {wrapX, getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {number} [cacheSize]\n * @property {module:ol/extent~Extent} [extent]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {module:ol/proj~ProjectionLike} [projection]\n * @property {module:ol/source/State} [state]\n * @property {module:ol/tilegrid/TileGrid} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @api\n */\nvar TileSource = (function (Source) {\n  function TileSource(options) {\n\n    Source.call(this, {\n      attributions: options.attributions,\n      extent: options.extent,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n      options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {module:ol/tilegrid/TileGrid}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    /**\n     * @protected\n     * @type {module:ol/TileCache}\n     */\n    this.tileCache = new TileCache(options.cacheSize);\n\n    /**\n     * @protected\n     * @type {module:ol/size~Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = '';\n\n    /**\n     * @protected\n     * @type {module:ol/Tile~Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n  }\n\n  if ( Source ) TileSource.__proto__ = Source;\n  TileSource.prototype = Object.create( Source && Source.prototype );\n  TileSource.prototype.constructor = TileSource;\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  TileSource.prototype.canExpireCache = function canExpireCache () {\n    return this.tileCache.canExpireCache();\n  };\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {!Object.<string, module:ol/TileRange>} usedTiles Used tiles.\n   */\n  TileSource.prototype.expireCache = function expireCache (projection, usedTiles) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  };\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {module:ol/TileRange} tileRange Tile range.\n   * @param {function(module:ol/Tile):(boolean|undefined)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  TileSource.prototype.forEachLoadedTile = function forEachLoadedTile (projection, z, tileRange, callback) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    var covered = true;\n    var tile, tileCoordKey, loaded;\n    for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!module:ol/Tile} */ (tileCache.get(tileCoordKey));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = (callback(tile) !== false);\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  };\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {number} Gutter.\n   */\n  TileSource.prototype.getGutter = function getGutter (projection) {\n    return 0;\n  };\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  TileSource.prototype.getKey = function getKey () {\n    return this.key_;\n  };\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  TileSource.prototype.setKey = function setKey (key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  TileSource.prototype.getOpaque = function getOpaque (projection) {\n    return this.opaque_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.getResolutions = function getResolutions () {\n    return this.tileGrid.getResolutions();\n  };\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {!module:ol/Tile} Tile.\n   */\n  TileSource.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {};\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {module:ol/tilegrid/TileGrid} Tile grid.\n   * @api\n   */\n  TileSource.prototype.getTileGrid = function getTileGrid () {\n    return this.tileGrid;\n  };\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {!module:ol/tilegrid/TileGrid} Tile grid.\n   */\n  TileSource.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  };\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {module:ol/TileCache} Tile cache.\n   * @protected\n   */\n  TileSource.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    var thisProj = this.getProjection();\n    if (thisProj && !equivalent(thisProj, projection)) {\n      return null;\n    } else {\n      return this.tileCache;\n    }\n  };\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  TileSource.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return this.tilePixelRatio_;\n  };\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {module:ol/size~Size} Tile size.\n   */\n  TileSource.prototype.getTilePixelSize = function getTilePixelSize (z, pixelRatio, projection) {\n    var tileGrid = this.getTileGridForProjection(projection);\n    var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  };\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n   * @param {module:ol/proj/Projection=} opt_projection Projection.\n   * @return {module:ol/tilecoord~TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  TileSource.prototype.getTileCoordForTileUrlFunction = function getTileCoordForTileUrlFunction (tileCoord, opt_projection) {\n    var projection = opt_projection !== undefined ?\n      opt_projection : this.getProjection();\n    var tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.refresh = function refresh () {\n    this.tileCache.clear();\n    this.changed();\n  };\n\n  return TileSource;\n}(Source));\n\n\n/**\n * Marks a tile coord as being used, without triggering a load.\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {module:ol/proj/Projection} projection Projection.\n */\nTileSource.prototype.useTile = UNDEFINED;\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport var TileSourceEvent = (function (Event) {\n  function TileSourceEvent(type, tile) {\n\n    Event.call(this, type);\n\n    /**\n     * The tile related to the event.\n     * @type {module:ol/Tile}\n     * @api\n     */\n    this.tile = tile;\n\n  }\n\n  if ( Event ) TileSourceEvent.__proto__ = Event;\n  TileSourceEvent.prototype = Object.create( Event && Event.prototype );\n  TileSourceEvent.prototype.constructor = TileSourceEvent;\n\n  return TileSourceEvent;\n}(Event));\n\nexport default TileSource;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror'\n\n};\n\n//# sourceMappingURL=TileEventType.js.map","/**\n * @module ol/source/UrlTile\n */\nimport {getUid} from '../util.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport TileSource, {TileSourceEvent} from '../source/Tile.js';\nimport TileEventType from '../source/TileEventType.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {number} [cacheSize]\n * @property {module:ol/extent~Extent} [extent]\n * @property {boolean} [opaque]\n * @property {module:ol/proj~ProjectionLike} [projection]\n * @property {module:ol/source/State} [state]\n * @property {module:ol/tilegrid/TileGrid} [tileGrid]\n * @property {module:ol/Tile~LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array.<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires module:ol/source/TileEvent\n */\nvar UrlTile = (function (TileSource) {\n  function UrlTile(options) {\n\n    TileSource.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      extent: options.extent,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition\n    });\n\n    /**\n     * @protected\n     * @type {module:ol/Tile~LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    /**\n     * @protected\n     * @type {module:ol/Tile~UrlFunction}\n     */\n    this.tileUrlFunction = this.fixedTileUrlFunction ?\n      this.fixedTileUrlFunction.bind(this) : nullTileUrlFunction;\n\n    /**\n     * @protected\n     * @type {!Array.<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n    if (options.tileUrlFunction) {\n      this.setTileUrlFunction(options.tileUrlFunction);\n    }\n\n    /**\n     * @private\n     * @type {!Object.<number, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n  }\n\n  if ( TileSource ) UrlTile.__proto__ = TileSource;\n  UrlTile.prototype = Object.create( TileSource && TileSource.prototype );\n  UrlTile.prototype.constructor = UrlTile;\n\n  /**\n   * Return the tile load function of the source.\n   * @return {module:ol/Tile~LoadFunction} TileLoadFunction\n   * @api\n   */\n  UrlTile.prototype.getTileLoadFunction = function getTileLoadFunction () {\n    return this.tileLoadFunction;\n  };\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {module:ol/Tile~UrlFunction} TileUrlFunction\n   * @api\n   */\n  UrlTile.prototype.getTileUrlFunction = function getTileUrlFunction () {\n    return this.tileUrlFunction;\n  };\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array.<string>|null} URLs.\n   * @api\n   */\n  UrlTile.prototype.getUrls = function getUrls () {\n    return this.urls;\n  };\n\n  /**\n   * Handle tile change events.\n   * @param {module:ol/events/Event} event Event.\n   * @protected\n   */\n  UrlTile.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {module:ol/Tile} */ (event.target);\n    var uid = getUid(tile);\n    var tileState = tile.getState();\n    var type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n        (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n          TileEventType.TILELOADEND : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  };\n\n  /**\n   * Set the tile load function of the source.\n   * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  UrlTile.prototype.setTileLoadFunction = function setTileLoadFunction (tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {module:ol/Tile~UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string=} opt_key Optional new tile key for the source.\n   * @api\n   */\n  UrlTile.prototype.setTileUrlFunction = function setTileUrlFunction (tileUrlFunction, opt_key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof opt_key !== 'undefined') {\n      this.setKey(opt_key);\n    } else {\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  UrlTile.prototype.setUrl = function setUrl (url) {\n    var urls = this.urls = expandUrl(url);\n    this.setTileUrlFunction(this.fixedTileUrlFunction ?\n      this.fixedTileUrlFunction.bind(this) :\n      createFromTemplates(urls, this.tileGrid), url);\n  };\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array.<string>} urls URLs.\n   * @api\n   */\n  UrlTile.prototype.setUrls = function setUrls (urls) {\n    this.urls = urls;\n    var key = urls.join('\\n');\n    this.setTileUrlFunction(this.fixedTileUrlFunction ?\n      this.fixedTileUrlFunction.bind(this) :\n      createFromTemplates(urls, this.tileGrid), key);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  UrlTile.prototype.useTile = function useTile (z, x, y) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  };\n\n  return UrlTile;\n}(TileSource));\n\n\n/**\n * @type {module:ol/Tile~UrlFunction|undefined}\n * @protected\n */\nUrlTile.prototype.fixedTileUrlFunction;\n\nexport default UrlTile;\n\n//# sourceMappingURL=UrlTile.js.map","/**\n * @module ol/source/TileImage\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {getUid} from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from '../source/UrlTile.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/source/State} [state] Source state.\n * @property {module:ol/ImageTile~TileClass} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array.<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires module:ol/source/Tile~TileSourceEvent\n * @api\n */\nvar TileImage = (function (UrlTile) {\n  function TileImage(options) {\n\n    UrlTile.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      extent: options.extent,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction ?\n        options.tileLoadFunction : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {function(new: module:ol/ImageTile, module:ol/tilecoord~TileCoord, module:ol/TileState, string,\n     *        ?string, module:ol/Tile~LoadFunction, module:ol/Tile~Options=)}\n     */\n    this.tileClass = options.tileClass !== undefined ?\n      options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object.<string, module:ol/TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object.<string, module:ol/tilegrid/TileGrid>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  if ( UrlTile ) TileImage.__proto__ = UrlTile;\n  TileImage.prototype = Object.create( UrlTile && UrlTile.prototype );\n  TileImage.prototype.constructor = TileImage;\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.canExpireCache = function canExpireCache () {\n    var this$1 = this;\n\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.canExpireCache.call(this);\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (var key in this$1.tileCacheForProjection) {\n        if (this$1.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.expireCache = function expireCache (projection, usedTiles) {\n    var this$1 = this;\n\n    if (!ENABLE_RASTER_REPROJECTION) {\n      UrlTile.prototype.expireCache.call(this, projection, usedTiles);\n      return;\n    }\n    var usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n    for (var id in this$1.tileCacheForProjection) {\n      var tileCache = this$1.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getGutter = function getGutter (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return 0;\n    } else {\n      return this.getGutterInternal();\n    }\n  };\n\n  /**\n   * @protected\n   * @return {number} Gutter.\n   */\n  TileImage.prototype.getGutterInternal = function getGutterInternal () {\n    return 0;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getOpaque = function getOpaque (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return false;\n    } else {\n      return UrlTile.prototype.getOpaque.call(this, projection);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileGridForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      var projKey = getUid(projection).toString();\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n      }\n      return (\n        /** @type {!module:ol/tilegrid/TileGrid} */ (this.tileGridForProjection[projKey])\n      );\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileCacheForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection(); if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      var projKey = getUid(projection).toString();\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!module:ol/Tile} Tile.\n   * @private\n   */\n  TileImage.prototype.createTile_ = function createTile_ (z, x, y, pixelRatio, projection, key) {\n    var tileCoord = [z, x, y];\n    var urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord, projection);\n    var tileUrl = urlTileCoord ?\n      this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n    var tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions);\n    tile.key = key;\n    listen(tile, EventType.CHANGE,\n      this.handleTileChange, this);\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var sourceProjection = /** @type {!module:ol/proj/Projection} */ (this.getProjection());\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n      return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n    } else {\n      var cache = this.getTileCacheForProjection(projection);\n      var tileCoord = [z, x, y];\n      var tile;\n      var tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = /** @type {!module:ol/Tile} */ (cache.get(tileCoordKey));\n      }\n      var key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        var targetTileGrid = this.getTileGridForProjection(projection);\n        var wrappedTileCoord =\n            this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var newTile = new ReprojTile(\n          sourceProjection, sourceTileGrid,\n          projection, targetTileGrid,\n          tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\n          this.getGutterInternal(),\n          function(z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this), this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_);\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!module:ol/proj/Projection} projection Projection.\n   * @return {!module:ol/Tile} Tile.\n   * @protected\n   */\n  TileImage.prototype.getTileInternal = function getTileInternal (z, x, y, pixelRatio, projection) {\n    var tile = null;\n    var tileCoordKey = getKeyZXY(z, x, y);\n    var key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        var interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  TileImage.prototype.setRenderReprojectionEdges = function setRenderReprojectionEdges (render) {\n    var this$1 = this;\n\n    if (!ENABLE_RASTER_REPROJECTION ||\n        this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (var id in this$1.tileCacheForProjection) {\n      this$1.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {module:ol/proj~ProjectionLike} projection Projection.\n   * @param {module:ol/tilegrid/TileGrid} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  TileImage.prototype.setTileGridForProjection = function setTileGridForProjection (projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      var proj = getProjection(projection);\n      if (proj) {\n        var projKey = getUid(proj).toString();\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  };\n\n  return TileImage;\n}(UrlTile));\n\n\n/**\n * @param {module:ol/ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  imageTile.getImage().src = src;\n}\n\nexport default TileImage;\n\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * See http://mapbox.com/developers/api/.\n */\n\n\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from '../source/State.js';\nimport TileImage from '../source/TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {tileJSON} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nvar TileJSON = (function (TileImage) {\n  function TileJSON(options) {\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: SourceState.LOADING,\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @type {TileJSON}\n     * @private\n     */\n    this.tileJSON_ = null;\n\n\n    if (options.url) {\n      if (options.jsonp) {\n        requestJSONP(options.url, this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this));\n      } else {\n        var client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n\n  }\n\n  if ( TileImage ) TileJSON.__proto__ = TileImage;\n  TileJSON.prototype = Object.create( TileImage && TileImage.prototype );\n  TileJSON.prototype.constructor = TileJSON;\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  TileJSON.prototype.onXHRLoad_ = function onXHRLoad_ (event) {\n    var client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      var response;\n      try {\n        response = /** @type {TileJSON} */(JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  };\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  TileJSON.prototype.onXHRError_ = function onXHRError_ (event) {\n    this.handleTileJSONError();\n  };\n\n  /**\n   * @return {TileJSON} The tilejson object.\n   * @api\n   */\n  TileJSON.prototype.getTileJSON = function getTileJSON () {\n    return this.tileJSON_;\n  };\n\n  /**\n   * @protected\n   * @param {TileJSON} tileJSON Tile JSON.\n   */\n  TileJSON.prototype.handleTileJSONResponse = function handleTileJSONResponse (tileJSON) {\n\n    var epsg4326Projection = getProjection('EPSG:4326');\n\n    var sourceProjection = this.getProjection();\n    var extent;\n    if (tileJSON.bounds !== undefined) {\n      var transform = getTransformFromProjections(\n        epsg4326Projection, sourceProjection);\n      extent = applyTransform(tileJSON.bounds, transform);\n    }\n\n    var minZoom = tileJSON.minzoom || 0;\n    var maxZoom = tileJSON.maxzoom || 22;\n    var tileGrid = createXYZ({\n      extent: extentFromProjection(sourceProjection),\n      maxZoom: maxZoom,\n      minZoom: minZoom\n    });\n    this.tileGrid = tileGrid;\n\n    this.tileUrlFunction = createFromTemplates(tileJSON.tiles, tileGrid);\n\n    if (tileJSON.attribution !== undefined && !this.getAttributions()) {\n      var attributionExtent = extent !== undefined ?\n        extent : epsg4326Projection.getExtent();\n\n      this.setAttributions(function(frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON.attribution];\n        }\n        return null;\n      });\n\n    }\n    this.tileJSON_ = tileJSON;\n    this.setState(SourceState.READY);\n\n  };\n\n  /**\n   * @protected\n   */\n  TileJSON.prototype.handleTileJSONError = function handleTileJSONError () {\n    this.setState(SourceState.ERROR);\n  };\n\n  return TileJSON;\n}(TileImage));\n\n\nexport default TileJSON;\n\n//# sourceMappingURL=TileJSON.js.map","/**\n * @module ol/style/Atlas\n */\nimport {createCanvasContext2D} from '../dom.js';\n\n\n/**\n * @typedef {Object} AtlasBlock\n * @property {number} x\n * @property {number} y\n * @property {number} width\n * @property {number} height\n */\n\n/**\n * Provides information for an image inside an atlas.\n * `offsetX` and `offsetY` are the position of the image inside the atlas image `image`.\n * @typedef {Object} AtlasInfo\n * @property {number} offsetX\n * @property {number} offsetY\n * @property {HTMLCanvasElement} image\n */\n\n\n/**\n * @classesc\n * This class facilitates the creation of image atlases.\n *\n * Images added to an atlas will be rendered onto a single\n * atlas canvas. The distribution of images on the canvas is\n * managed with the bin packing algorithm described in:\n * http://www.blackpawn.com/texts/lightmaps/\n *\n * @param {number} size The size in pixels of the sprite image.\n * @param {number} space The space in pixels between images.\n *    Because texture coordinates are float values, the edges of\n *    images might not be completely correct (in a way that the\n *    edges overlap when being rendered). To avoid this we add a\n *    padding around each image.\n */\nvar Atlas = function Atlas(size, space) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.space_ = space;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/style/Atlas~AtlasBlock>}\n   */\n  this.emptyBlocks_ = [{x: 0, y: 0, width: size, height: size}];\n\n  /**\n   * @private\n   * @type {Object.<string, module:ol/style/Atlas~AtlasInfo>}\n   */\n  this.entries_ = {};\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context_ = createCanvasContext2D(size, size);\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = this.context_.canvas;\n};\n\n/**\n * @param {string} id The identifier of the entry to check.\n * @return {?module:ol/style/Atlas~AtlasInfo} The atlas info.\n */\nAtlas.prototype.get = function get (id) {\n  return this.entries_[id] || null;\n};\n\n/**\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *  Called to render the new image onto an atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *  `renderCallback`.\n * @return {?module:ol/style/Atlas~AtlasInfo} The position and atlas image for the entry.\n */\nAtlas.prototype.add = function add (id, width, height, renderCallback, opt_this) {\n    var this$1 = this;\n\n  for (var i = 0, ii = this.emptyBlocks_.length; i < ii; ++i) {\n    var block = this$1.emptyBlocks_[i];\n    if (block.width >= width + this$1.space_ &&\n        block.height >= height + this$1.space_) {\n      // we found a block that is big enough for our entry\n      var entry = {\n        offsetX: block.x + this$1.space_,\n        offsetY: block.y + this$1.space_,\n        image: this$1.canvas_\n      };\n      this$1.entries_[id] = entry;\n\n      // render the image on the atlas image\n      renderCallback.call(opt_this, this$1.context_,\n        block.x + this$1.space_, block.y + this$1.space_);\n\n      // split the block after the insertion, either horizontally or vertically\n      this$1.split_(i, block, width + this$1.space_, height + this$1.space_);\n\n      return entry;\n    }\n  }\n\n  // there is no space for the new entry in this atlas\n  return null;\n};\n\n/**\n * @private\n * @param {number} index The index of the block.\n * @param {module:ol/style/Atlas~AtlasBlock} block The block to split.\n * @param {number} width The width of the entry to insert.\n * @param {number} height The height of the entry to insert.\n */\nAtlas.prototype.split_ = function split_ (index, block, width, height) {\n  var deltaWidth = block.width - width;\n  var deltaHeight = block.height - height;\n\n  /** @type {module:ol/style/Atlas~AtlasBlock} */\n  var newBlock1;\n  /** @type {module:ol/style/Atlas~AtlasBlock} */\n  var newBlock2;\n\n  if (deltaWidth > deltaHeight) {\n    // split vertically\n    // block right of the inserted entry\n    newBlock1 = {\n      x: block.x + width,\n      y: block.y,\n      width: block.width - width,\n      height: block.height\n    };\n\n    // block below the inserted entry\n    newBlock2 = {\n      x: block.x,\n      y: block.y + height,\n      width: width,\n      height: block.height - height\n    };\n    this.updateBlocks_(index, newBlock1, newBlock2);\n  } else {\n    // split horizontally\n    // block right of the inserted entry\n    newBlock1 = {\n      x: block.x + width,\n      y: block.y,\n      width: block.width - width,\n      height: height\n    };\n\n    // block below the inserted entry\n    newBlock2 = {\n      x: block.x,\n      y: block.y + height,\n      width: block.width,\n      height: block.height - height\n    };\n    this.updateBlocks_(index, newBlock1, newBlock2);\n  }\n};\n\n/**\n * Remove the old block and insert new blocks at the same array position.\n * The new blocks are inserted at the same position, so that splitted\n * blocks (that are potentially smaller) are filled first.\n * @private\n * @param {number} index The index of the block to remove.\n * @param {module:ol/style/Atlas~AtlasBlock} newBlock1 The 1st block to add.\n * @param {module:ol/style/Atlas~AtlasBlock} newBlock2 The 2nd block to add.\n */\nAtlas.prototype.updateBlocks_ = function updateBlocks_ (index, newBlock1, newBlock2) {\n  var args = [index, 1];\n  if (newBlock1.width > 0 && newBlock1.height > 0) {\n    args.push(newBlock1);\n  }\n  if (newBlock2.width > 0 && newBlock2.height > 0) {\n    args.push(newBlock2);\n  }\n  this.emptyBlocks_.splice.apply(this.emptyBlocks_, args);\n};\n\nexport default Atlas;\n\n//# sourceMappingURL=Atlas.js.map","/**\n * @module ol/style/AtlasManager\n */\nimport {MAX_TEXTURE_SIZE as WEBGL_MAX_TEXTURE_SIZE} from '../webgl.js';\nimport {UNDEFINED} from '../functions.js';\nimport Atlas from '../style/Atlas.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [initialSize=256] The size in pixels of the first atlas image.\n * @property {number} [maxSize] The maximum size in pixels of atlas images. Default is\n * `webgl/MAX_TEXTURE_SIZE` or 2048 if WebGL is not supported.\n * @property {number} [space=1] The space in pixels between images.\n */\n\n\n/**\n * Provides information for an image inside an atlas manager.\n * `offsetX` and `offsetY` is the position of the image inside\n * the atlas image `image` and the position of the hit-detection image\n * inside the hit-detection atlas image `hitImage`.\n * @typedef {Object} AtlasManagerInfo\n * @property {number} offsetX\n * @property {number} offsetY\n * @property {HTMLCanvasElement} image\n * @property {HTMLCanvasElement} hitImage\n */\n\n\n/**\n * The size in pixels of the first atlas image.\n * @type {number}\n */\nvar INITIAL_ATLAS_SIZE = 256;\n\n/**\n * The maximum size in pixels of atlas images.\n * @type {number}\n */\nvar MAX_ATLAS_SIZE = -1;\n\n\n/**\n * @classdesc\n * Manages the creation of image atlases.\n *\n * Images added to this manager will be inserted into an atlas, which\n * will be used for rendering.\n * The `size` given in the constructor is the size for the first\n * atlas. After that, when new atlases are created, they will have\n * twice the size as the latest atlas (until `maxSize` is reached).\n *\n * If an application uses many images or very large images, it is recommended\n * to set a higher `size` value to avoid the creation of too many atlases.\n * @api\n */\nvar AtlasManager = function AtlasManager(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * The size in pixels of the latest atlas image.\n   * @private\n   * @type {number}\n   */\n  this.currentSize_ = options.initialSize !== undefined ?\n    options.initialSize : INITIAL_ATLAS_SIZE;\n\n  /**\n   * The maximum size in pixels of atlas images.\n   * @private\n   * @type {number}\n   */\n  this.maxSize_ = options.maxSize !== undefined ?\n    options.maxSize : MAX_ATLAS_SIZE != -1 ?\n      MAX_ATLAS_SIZE : WEBGL_MAX_TEXTURE_SIZE !== undefined ?\n        WEBGL_MAX_TEXTURE_SIZE : 2048;\n\n  /**\n   * The size in pixels between images.\n   * @private\n   * @type {number}\n   */\n  this.space_ = options.space !== undefined ? options.space : 1;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/style/Atlas>}\n   */\n  this.atlases_ = [new Atlas(this.currentSize_, this.space_)];\n\n  /**\n   * The size in pixels of the latest atlas image for hit-detection images.\n   * @private\n   * @type {number}\n   */\n  this.currentHitSize_ = this.currentSize_;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/style/Atlas>}\n   */\n  this.hitAtlases_ = [new Atlas(this.currentHitSize_, this.space_)];\n};\n\n/**\n * @param {string} id The identifier of the entry to check.\n * @return {?module:ol/style/AtlasManager~AtlasManagerInfo} The position and atlas image for the\n *  entry, or `null` if the entry is not part of the atlas manager.\n */\nAtlasManager.prototype.getInfo = function getInfo (id) {\n  /** @type {?module:ol/style/Atlas~AtlasInfo} */\n  var info = this.getInfo_(this.atlases_, id);\n\n  if (!info) {\n    return null;\n  }\n  var hitInfo = /** @type {module:ol/style/Atlas~AtlasInfo} */ (this.getInfo_(this.hitAtlases_, id));\n\n  return this.mergeInfos_(info, hitInfo);\n};\n\n/**\n * @private\n * @param {Array.<module:ol/style/Atlas>} atlases The atlases to search.\n * @param {string} id The identifier of the entry to check.\n * @return {?module:ol/style/Atlas~AtlasInfo} The position and atlas image for the entry,\n *  or `null` if the entry is not part of the atlases.\n */\nAtlasManager.prototype.getInfo_ = function getInfo_ (atlases, id) {\n  for (var i = 0, ii = atlases.length; i < ii; ++i) {\n    var atlas = atlases[i];\n    var info = atlas.get(id);\n    if (info) {\n      return info;\n    }\n  }\n  return null;\n};\n\n/**\n * @private\n * @param {module:ol/style/Atlas~AtlasInfo} info The info for the real image.\n * @param {module:ol/style/Atlas~AtlasInfo} hitInfo The info for the hit-detection\n *  image.\n * @return {?module:ol/style/AtlasManager~AtlasManagerInfo} The position and atlas image for the\n *  entry, or `null` if the entry is not part of the atlases.\n */\nAtlasManager.prototype.mergeInfos_ = function mergeInfos_ (info, hitInfo) {\n  return (\n    /** @type {module:ol/style/AtlasManager~AtlasManagerInfo} */ ({\n      offsetX: info.offsetX,\n      offsetY: info.offsetY,\n      image: info.image,\n      hitImage: hitInfo.image\n    })\n  );\n};\n\n/**\n * Add an image to the atlas manager.\n *\n * If an entry for the given id already exists, the entry will\n * be overridden (but the space on the atlas graphic will not be freed).\n *\n * If `renderHitCallback` is provided, the image (or the hit-detection version\n * of the image) will be rendered into a separate hit-detection atlas image.\n *\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *  Called to render the new image onto an atlas image.\n * @param {function(CanvasRenderingContext2D, number, number)=}\n *  opt_renderHitCallback Called to render a hit-detection image onto a hit\n *  detection atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *  `renderCallback` and `renderHitCallback`.\n * @return {?module:ol/style/AtlasManager~AtlasManagerInfo}The position and atlas image for the\n *  entry, or `null` if the image is too big.\n */\nAtlasManager.prototype.add = function add (id, width, height, renderCallback, opt_renderHitCallback, opt_this) {\n  if (width + this.space_ > this.maxSize_ ||\n      height + this.space_ > this.maxSize_) {\n    return null;\n  }\n\n  /** @type {?module:ol/style/Atlas~AtlasInfo} */\n  var info = this.add_(false, id, width, height, renderCallback, opt_this);\n  if (!info) {\n    return null;\n  }\n\n  // even if no hit-detection entry is requested, we insert a fake entry into\n  // the hit-detection atlas, to make sure that the offset is the same for\n  // the original image and the hit-detection image.\n  var renderHitCallback = opt_renderHitCallback !== undefined ?\n    opt_renderHitCallback : UNDEFINED;\n\n  var hitInfo = /** @type {module:ol/style/Atlas~AtlasInfo} */ (this.add_(true,\n    id, width, height, renderHitCallback, opt_this));\n\n  return this.mergeInfos_(info, hitInfo);\n};\n\n/**\n * @private\n * @param {boolean} isHitAtlas If the hit-detection atlases are used.\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *  Called to render the new image onto an atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *  `renderCallback` and `renderHitCallback`.\n * @return {?module:ol/style/Atlas~AtlasInfo}The position and atlas image for the entry,\n *  or `null` if the image is too big.\n */\nAtlasManager.prototype.add_ = function add_ (isHitAtlas, id, width, height, renderCallback, opt_this) {\n    var this$1 = this;\n\n  var atlases = (isHitAtlas) ? this.hitAtlases_ : this.atlases_;\n  var atlas, info, i, ii;\n  for (i = 0, ii = atlases.length; i < ii; ++i) {\n    atlas = atlases[i];\n    info = atlas.add(id, width, height, renderCallback, opt_this);\n    if (info) {\n      return info;\n    } else if (!info && i === ii - 1) {\n      // the entry could not be added to one of the existing atlases,\n      // create a new atlas that is twice as big and try to add to this one.\n      var size = (void 0);\n      if (isHitAtlas) {\n        size = Math.min(this$1.currentHitSize_ * 2, this$1.maxSize_);\n        this$1.currentHitSize_ = size;\n      } else {\n        size = Math.min(this$1.currentSize_ * 2, this$1.maxSize_);\n        this$1.currentSize_ = size;\n      }\n      atlas = new Atlas(size, this$1.space_);\n      atlases.push(atlas);\n      // run the loop another time\n      ++ii;\n    }\n  }\n  return null;\n};\n\nexport default AtlasManager;\n\n//# sourceMappingURL=AtlasManager.js.map","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {module:ol/style/TextPlacement|string} [placement] Text placement.\n * @property {number} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {module:ol/style/Fill} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/Fill} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {module:ol/style/Stroke} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array.<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = function Text(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.font_ = options.font;\n\n  /**\n  * @private\n  * @type {number|undefined}\n  */\n  this.rotation_ = options.rotation;\n\n  /**\n  * @private\n  * @type {boolean|undefined}\n  */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n  * @private\n  * @type {number|undefined}\n  */\n  this.scale_ = options.scale;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.text_ = options.text;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.textAlign_ = options.textAlign;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n  * @private\n  * @type {module:ol/style/Fill}\n  */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: DEFAULT_FILL_COLOR});\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n  * @private\n  * @type {module:ol/style/TextPlacement|string}\n  */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n  * @private\n  * @type {boolean}\n  */\n  this.overflow_ = !!options.overflow;\n\n  /**\n  * @private\n  * @type {module:ol/style/Stroke}\n  */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n  * @private\n  * @type {module:ol/style/Fill}\n  */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n  * @private\n  * @type {module:ol/style/Stroke}\n  */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n  * @private\n  * @type {Array.<number>}\n  */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n/**\n* Clones the style.\n* @return {module:ol/style/Text} The cloned style.\n* @api\n*/\nText.prototype.clone = function clone () {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n/**\n* Get the `overflow` configuration.\n* @return {boolean} Let text overflow the length of the path they follow.\n* @api\n*/\nText.prototype.getOverflow = function getOverflow () {\n  return this.overflow_;\n};\n\n/**\n* Get the font name.\n* @return {string|undefined} Font.\n* @api\n*/\nText.prototype.getFont = function getFont () {\n  return this.font_;\n};\n\n/**\n* Get the maximum angle between adjacent characters.\n* @return {number} Angle in radians.\n* @api\n*/\nText.prototype.getMaxAngle = function getMaxAngle () {\n  return this.maxAngle_;\n};\n\n/**\n* Get the label placement.\n* @return {module:ol/style/TextPlacement|string} Text placement.\n* @api\n*/\nText.prototype.getPlacement = function getPlacement () {\n  return this.placement_;\n};\n\n/**\n* Get the x-offset for the text.\n* @return {number} Horizontal text offset.\n* @api\n*/\nText.prototype.getOffsetX = function getOffsetX () {\n  return this.offsetX_;\n};\n\n/**\n* Get the y-offset for the text.\n* @return {number} Vertical text offset.\n* @api\n*/\nText.prototype.getOffsetY = function getOffsetY () {\n  return this.offsetY_;\n};\n\n/**\n* Get the fill style for the text.\n* @return {module:ol/style/Fill} Fill style.\n* @api\n*/\nText.prototype.getFill = function getFill () {\n  return this.fill_;\n};\n\n/**\n* Determine whether the text rotates with the map.\n* @return {boolean|undefined} Rotate with map.\n* @api\n*/\nText.prototype.getRotateWithView = function getRotateWithView () {\n  return this.rotateWithView_;\n};\n\n/**\n* Get the text rotation.\n* @return {number|undefined} Rotation.\n* @api\n*/\nText.prototype.getRotation = function getRotation () {\n  return this.rotation_;\n};\n\n/**\n* Get the text scale.\n* @return {number|undefined} Scale.\n* @api\n*/\nText.prototype.getScale = function getScale () {\n  return this.scale_;\n};\n\n/**\n* Get the stroke style for the text.\n* @return {module:ol/style/Stroke} Stroke style.\n* @api\n*/\nText.prototype.getStroke = function getStroke () {\n  return this.stroke_;\n};\n\n/**\n* Get the text to be rendered.\n* @return {string|undefined} Text.\n* @api\n*/\nText.prototype.getText = function getText () {\n  return this.text_;\n};\n\n/**\n* Get the text alignment.\n* @return {string|undefined} Text align.\n* @api\n*/\nText.prototype.getTextAlign = function getTextAlign () {\n  return this.textAlign_;\n};\n\n/**\n* Get the text baseline.\n* @return {string|undefined} Text baseline.\n* @api\n*/\nText.prototype.getTextBaseline = function getTextBaseline () {\n  return this.textBaseline_;\n};\n\n/**\n* Get the background fill style for the text.\n* @return {module:ol/style/Fill} Fill style.\n* @api\n*/\nText.prototype.getBackgroundFill = function getBackgroundFill () {\n  return this.backgroundFill_;\n};\n\n/**\n* Get the background stroke style for the text.\n* @return {module:ol/style/Stroke} Stroke style.\n* @api\n*/\nText.prototype.getBackgroundStroke = function getBackgroundStroke () {\n  return this.backgroundStroke_;\n};\n\n/**\n* Get the padding for the text.\n* @return {Array.<number>} Padding.\n* @api\n*/\nText.prototype.getPadding = function getPadding () {\n  return this.padding_;\n};\n\n/**\n* Set the `overflow` property.\n*\n* @param {boolean} overflow Let text overflow the path that it follows.\n* @api\n*/\nText.prototype.setOverflow = function setOverflow (overflow) {\n  this.overflow_ = overflow;\n};\n\n/**\n* Set the font.\n*\n* @param {string|undefined} font Font.\n* @api\n*/\nText.prototype.setFont = function setFont (font) {\n  this.font_ = font;\n};\n\n/**\n* Set the maximum angle between adjacent characters.\n*\n* @param {number} maxAngle Angle in radians.\n* @api\n*/\nText.prototype.setMaxAngle = function setMaxAngle (maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n/**\n* Set the x offset.\n*\n* @param {number} offsetX Horizontal text offset.\n* @api\n*/\nText.prototype.setOffsetX = function setOffsetX (offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n/**\n* Set the y offset.\n*\n* @param {number} offsetY Vertical text offset.\n* @api\n*/\nText.prototype.setOffsetY = function setOffsetY (offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n/**\n* Set the text placement.\n*\n* @param {module:ol/style/TextPlacement|string} placement Placement.\n* @api\n*/\nText.prototype.setPlacement = function setPlacement (placement) {\n  this.placement_ = placement;\n};\n\n/**\n* Set the fill.\n*\n* @param {module:ol/style/Fill} fill Fill style.\n* @api\n*/\nText.prototype.setFill = function setFill (fill) {\n  this.fill_ = fill;\n};\n\n/**\n* Set the rotation.\n*\n* @param {number|undefined} rotation Rotation.\n* @api\n*/\nText.prototype.setRotation = function setRotation (rotation) {\n  this.rotation_ = rotation;\n};\n\n/**\n* Set the scale.\n*\n* @param {number|undefined} scale Scale.\n* @api\n*/\nText.prototype.setScale = function setScale (scale) {\n  this.scale_ = scale;\n};\n\n/**\n* Set the stroke.\n*\n* @param {module:ol/style/Stroke} stroke Stroke style.\n* @api\n*/\nText.prototype.setStroke = function setStroke (stroke) {\n  this.stroke_ = stroke;\n};\n\n/**\n* Set the text.\n*\n* @param {string|undefined} text Text.\n* @api\n*/\nText.prototype.setText = function setText (text) {\n  this.text_ = text;\n};\n\n/**\n* Set the text alignment.\n*\n* @param {string|undefined} textAlign Text align.\n* @api\n*/\nText.prototype.setTextAlign = function setTextAlign (textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n/**\n* Set the text baseline.\n*\n* @param {string|undefined} textBaseline Text baseline.\n* @api\n*/\nText.prototype.setTextBaseline = function setTextBaseline (textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n/**\n* Set the background fill.\n*\n* @param {module:ol/style/Fill} fill Fill style.\n* @api\n*/\nText.prototype.setBackgroundFill = function setBackgroundFill (fill) {\n  this.backgroundFill_ = fill;\n};\n\n/**\n* Set the background stroke.\n*\n* @param {module:ol/style/Stroke} stroke Stroke style.\n* @api\n*/\nText.prototype.setBackgroundStroke = function setBackgroundStroke (stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n/**\n* Set the padding (`[top, right, bottom, left]`).\n*\n* @param {!Array.<number>} padding Padding.\n* @api\n*/\nText.prototype.setPadding = function setPadding (padding) {\n  this.padding_ = padding;\n};\n\nexport default Text;\n\n//# sourceMappingURL=Text.js.map","/**\n * @module ol/style\n */\n\n\nexport {default as Atlas} from './style/Atlas.js';\nexport {default as AtlasManager} from './style/AtlasManager.js';\nexport {default as Circle} from './style/Circle.js';\nexport {default as Fill} from './style/Fill.js';\nexport {default as Icon} from './style/Icon.js';\nexport {default as IconImage} from './style/IconImage.js';\nexport {default as Image} from './style/Image.js';\nexport {default as RegularShape} from './style/RegularShape.js';\nexport {default as Stroke} from './style/Stroke.js';\nexport {default as Style} from './style/Style.js';\nexport {default as Text} from './style/Text.js';\n\n//# sourceMappingURL=style.js.map","import \"ol/ol.css\";\nimport Feature from 'ol/Feature.js';\nimport Map from 'ol/Map.js';\nimport Overlay from 'ol/Overlay.js';\nimport View from 'ol/View.js';\nimport Point from 'ol/geom/Point.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from 'ol/layer.js';\nimport TileJSON from 'ol/source/TileJSON.js';\nimport VectorSource from 'ol/source/Vector.js';\nimport {Icon, Style} from 'ol/style.js';\n\nvar wroclawCoords = [17.0333, 51.1098];\n\nvar iconFeature = new Feature({\n    geometry: new Point([0, 0]),\n    name: 'Null Island',\n    population: 4000,\n    rainfall: 500\n});\n\nvar iconStyle = new Style({\n    image: new Icon(/** @type {module:ol/style/Icon~Options} */ ({\n        anchor: [0.5, 46],\n        anchorXUnits: 'fraction',\n        anchorYUnits: 'pixels',\n        src: 'data/icon.png'\n    }))\n});\n\niconFeature.setStyle(iconStyle);\n\nvar vectorSource = new VectorSource({\n    features: [iconFeature]\n});\n\nvar vectorLayer = new VectorLayer({\n    source: vectorSource\n});\n\nvar rasterLayer = new TileLayer({\n    source: new ol.source.OSM()\n});\n\nvar map = new Map({\n    layers: [rasterLayer, vectorLayer],\n    target: document.getElementById('map'),\n    view: new View({\n        projection: \"EPSG:4326\",\n        center: wroclawCoords,\n        zoom: 13\n    })\n});\n\nvar element = document.getElementById('popup');\n\nvar popup = new Overlay({\n    element: element,\n    positioning: 'bottom-center',\n    stopEvent: false,\n    offset: [0, -50]\n});\nmap.addOverlay(popup);\n\n// display popup on click\nmap.on('click', function(evt) {\n    var feature = map.forEachFeatureAtPixel(evt.pixel,\n        function(feature) {\n            return feature;\n        });\n    if (feature) {\n        var coordinates = feature.getGeometry().getCoordinates();\n        popup.setPosition(coordinates);\n        $(element).popover({\n            placement: 'top',\n            html: true,\n            content: feature.get('name')\n        });\n        $(element).popover('show');\n    } else {\n        $(element).popover('destroy');\n    }\n});\n\n// change mouse cursor when over marker\nmap.on('pointermove', function(e) {\n    if (e.dragging) {\n        $(element).popover('destroy');\n        return;\n    }\n    var pixel = map.getEventPixel(e.originalEvent);\n    var hit = map.hasFeatureAtPixel(pixel);\n    map.getTarget().style.cursor = hit ? 'pointer' : '';\n});"]}